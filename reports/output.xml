<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.4 on win32)" generated="20220624 16:06:33.675" rpa="false" schemaversion="3">
<suite id="s1" name="Test-Cases" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases">
<suite id="s1-s1" name="01 Login" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\01_login">
<suite id="s1-s1-s1" name="01 login POST" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\01_login\01_login_POST.robot">
<test id="s1-s1-s1-t1" name="Cenario: Realizar Login Com Sucesso Administrador" line="9">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.200" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.199" endtime="20220624 16:06:34.200"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.199" endtime="20220624 16:06:34.200"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;true&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.201" level="INFO">${nome} = Charles Vargas</msg>
<status status="PASS" starttime="20220624 16:06:34.201" endtime="20220624 16:06:34.201"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.201" level="INFO">${email} = kim09@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.201" endtime="20220624 16:06:34.201"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.202" level="INFO">${senha} = 7nX6)kib%p</msg>
<status status="PASS" starttime="20220624 16:06:34.201" endtime="20220624 16:06:34.202"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.202" level="INFO">&amp;{usuario} = { nome=Charles Vargas | email=kim09@example.net | password=7nX6)kib%p | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:34.202" endtime="20220624 16:06:34.202"/>
</kw>
<msg timestamp="20220624 16:06:34.202" level="INFO">${usuario} = {'nome': 'Charles Vargas', 'email': 'kim09@example.net', 'password': '7nX6)kib%p', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:34.200" endtime="20220624 16:06:34.202"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.203" endtime="20220624 16:06:34.203"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.214" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '88', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Charles+Vargas&amp;email=kim09%40example.net&amp;password=7nX6%29kib%25p&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:34.214" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '68717b45-20a6-479f-97ce-495c09264e16', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "XFXI5ZCsLeycgaAr"
} 
 </msg>
<msg timestamp="20220624 16:06:34.214" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.203" endtime="20220624 16:06:34.214"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.215" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.214" endtime="20220624 16:06:34.215"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.216" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'XFXI5ZCsLeycgaAr'}</msg>
<status status="PASS" starttime="20220624 16:06:34.215" endtime="20220624 16:06:34.216"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.202" endtime="20220624 16:06:34.216"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.216" endtime="20220624 16:06:34.217"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.216" endtime="20220624 16:06:34.217"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.217" endtime="20220624 16:06:34.218"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.217" endtime="20220624 16:06:34.218"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.218" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.218" endtime="20220624 16:06:34.218"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.219" endtime="20220624 16:06:34.219"/>
</kw>
<msg timestamp="20220624 16:06:34.219" level="INFO">${usuario_valido} = {'nome': 'Charles Vargas', 'email': 'kim09@example.net', 'password': '7nX6)kib%p', 'administrador': 'true', '_id': 'XFXI5ZCsLeycgaAr'}</msg>
<status status="PASS" starttime="20220624 16:06:34.200" endtime="20220624 16:06:34.219"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.220" level="INFO">Removed item with key 'nome' and value 'Charles Vargas'.</msg>
<msg timestamp="20220624 16:06:34.220" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:34.220" level="INFO">Removed item with key '_id' and value 'XFXI5ZCsLeycgaAr'.</msg>
<status status="PASS" starttime="20220624 16:06:34.220" endtime="20220624 16:06:34.220"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.221" endtime="20220624 16:06:34.221"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.224" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '49', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=kim09%40example.net&amp;password=7nX6%29kib%25p 
 </msg>
<msg timestamp="20220624 16:06:34.224" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cd9a0f9e-5842-423f-b736-3286b503b5f7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '277', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImtpbTA5QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiI3blg2KWtpYiVwIiwiaWF0IjoxNjU2MDk3NTk0LCJleHAiOjE2NTYwOTgxOTR9.pGRvEyStTQ0Yuqi4HZeYFWmnQGaIY_XlrWeBg_xhCBI"
} 
 </msg>
<msg timestamp="20220624 16:06:34.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.221" endtime="20220624 16:06:34.224"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.224" endtime="20220624 16:06:34.225"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.225" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImtpbTA5QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiI3blg2KWtpYiVwIiwiaWF0IjoxNjU2MDk3NTk0LCJ...</msg>
<status status="PASS" starttime="20220624 16:06:34.225" endtime="20220624 16:06:34.225"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.220" endtime="20220624 16:06:34.226"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.226" endtime="20220624 16:06:34.227"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.226" endtime="20220624 16:06:34.227"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.228" endtime="20220624 16:06:34.228"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.227" endtime="20220624 16:06:34.228"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.229" level="INFO">Length is 204</msg>
<status status="PASS" starttime="20220624 16:06:34.229" endtime="20220624 16:06:34.229"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.229" endtime="20220624 16:06:34.229"/>
</kw>
<tag>Login</tag>
<tag>Login_Administrador</tag>
<tag>POST</tag>
<tag>POST_Login</tag>
<status status="PASS" starttime="20220624 16:06:34.198" endtime="20220624 16:06:34.230"/>
</test>
<test id="s1-s1-s1-t2" name="Cenario: Realizar Login Com Sucesso Usuario" line="18">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.231" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.231" endtime="20220624 16:06:34.232"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.231" endtime="20220624 16:06:34.232"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.233" level="INFO">${nome} = Tony Klein</msg>
<status status="PASS" starttime="20220624 16:06:34.233" endtime="20220624 16:06:34.233"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.233" level="INFO">${email} = george55@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.233" endtime="20220624 16:06:34.233"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.233" level="INFO">${senha} = !j2HUbk(j7</msg>
<status status="PASS" starttime="20220624 16:06:34.233" endtime="20220624 16:06:34.233"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.234" level="INFO">&amp;{usuario} = { nome=Tony Klein | email=george55@example.com | password=!j2HUbk(j7 | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.234" endtime="20220624 16:06:34.234"/>
</kw>
<msg timestamp="20220624 16:06:34.234" level="INFO">${usuario} = {'nome': 'Tony Klein', 'email': 'george55@example.com', 'password': '!j2HUbk(j7', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.232" endtime="20220624 16:06:34.234"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.235" endtime="20220624 16:06:34.235"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.241" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '88', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Tony+Klein&amp;email=george55%40example.com&amp;password=%21j2HUbk%28j7&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.241" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7e6d95bd-7f89-4e5e-9a30-d8df849a0172', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "YFEYhZplEQ1SyIHZ"
} 
 </msg>
<msg timestamp="20220624 16:06:34.241" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.235" endtime="20220624 16:06:34.241"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.242" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.242" endtime="20220624 16:06:34.242"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.243" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'YFEYhZplEQ1SyIHZ'}</msg>
<status status="PASS" starttime="20220624 16:06:34.242" endtime="20220624 16:06:34.243"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.234" endtime="20220624 16:06:34.243"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.244" endtime="20220624 16:06:34.245"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.243" endtime="20220624 16:06:34.245"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.246" endtime="20220624 16:06:34.246"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.245" endtime="20220624 16:06:34.246"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.247" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.246" endtime="20220624 16:06:34.247"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.247" endtime="20220624 16:06:34.248"/>
</kw>
<msg timestamp="20220624 16:06:34.248" level="INFO">${usuario_valido} = {'nome': 'Tony Klein', 'email': 'george55@example.com', 'password': '!j2HUbk(j7', 'administrador': 'false', '_id': 'YFEYhZplEQ1SyIHZ'}</msg>
<status status="PASS" starttime="20220624 16:06:34.232" endtime="20220624 16:06:34.248"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.248" level="INFO">Removed item with key 'nome' and value 'Tony Klein'.</msg>
<msg timestamp="20220624 16:06:34.248" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:34.248" level="INFO">Removed item with key '_id' and value 'YFEYhZplEQ1SyIHZ'.</msg>
<status status="PASS" starttime="20220624 16:06:34.248" endtime="20220624 16:06:34.248"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.249" endtime="20220624 16:06:34.249"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.253" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=george55%40example.com&amp;password=%21j2HUbk%28j7 
 </msg>
<msg timestamp="20220624 16:06:34.253" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '351fabd1-51b8-40c0-a338-1fc461519cf6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '281', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlb3JnZTU1QGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIhajJIVWJrKGo3IiwiaWF0IjoxNjU2MDk3NTk0LCJleHAiOjE2NTYwOTgxOTR9.s8OEz0_F253xPpxjVSrz48XiUamW55aSrtLESR0k8-E"
} 
 </msg>
<msg timestamp="20220624 16:06:34.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.249" endtime="20220624 16:06:34.253"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.253" endtime="20220624 16:06:34.253"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.254" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlb3JnZTU1QGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIhajJIVWJrKGo3IiwiaWF0IjoxNjU2MDk3NTk...</msg>
<status status="PASS" starttime="20220624 16:06:34.253" endtime="20220624 16:06:34.254"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.249" endtime="20220624 16:06:34.254"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.254" endtime="20220624 16:06:34.255"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.254" endtime="20220624 16:06:34.255"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.255" endtime="20220624 16:06:34.256"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.255" endtime="20220624 16:06:34.256"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.257" level="INFO">Length is 208</msg>
<status status="PASS" starttime="20220624 16:06:34.257" endtime="20220624 16:06:34.257"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.256" endtime="20220624 16:06:34.257"/>
</kw>
<tag>Login</tag>
<tag>Login_Usuario</tag>
<tag>POST</tag>
<tag>POST_Login</tag>
<status status="PASS" starttime="20220624 16:06:34.231" endtime="20220624 16:06:34.258"/>
</test>
<test id="s1-s1-s1-t3" name="Cenario: Tentativa De Login Com Usuario Invalido" line="27">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.260" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.259" endtime="20220624 16:06:34.260"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.259" endtime="20220624 16:06:34.260"/>
</kw>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_invalido}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.261" level="INFO">${nome} = Cynthia Harris</msg>
<status status="PASS" starttime="20220624 16:06:34.261" endtime="20220624 16:06:34.261"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.262" level="INFO">${email} = simonthomas@example.org</msg>
<status status="PASS" starttime="20220624 16:06:34.261" endtime="20220624 16:06:34.262"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.262" level="INFO">${senha} = IOI7YPZt)b</msg>
<status status="PASS" starttime="20220624 16:06:34.262" endtime="20220624 16:06:34.262"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.262" level="INFO">&amp;{usuario} = { nome=Cynthia Harris | email=simonthomas@example.org | password=IOI7YPZt)b | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.262" endtime="20220624 16:06:34.262"/>
</kw>
<msg timestamp="20220624 16:06:34.263" level="INFO">${usuario_invalido} = {'nome': 'Cynthia Harris', 'email': 'simonthomas@example.org', 'password': 'IOI7YPZt)b', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.260" endtime="20220624 16:06:34.263"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_invalido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.263" level="INFO">Removed item with key 'nome' and value 'Cynthia Harris'.</msg>
<msg timestamp="20220624 16:06:34.263" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:34.263" level="INFO">Key '_id' not found.</msg>
<status status="PASS" starttime="20220624 16:06:34.263" endtime="20220624 16:06:34.263"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_invalido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.264" endtime="20220624 16:06:34.264"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.268" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=simonthomas%40example.org&amp;password=IOI7YPZt%29b 
 </msg>
<msg timestamp="20220624 16:06:34.268" level="INFO">POST Response : url=http://localhost:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5ef919c8-20ad-4ef3-a3e7-4a1c45ef8f9e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg timestamp="20220624 16:06:34.268" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.264" endtime="20220624 16:06:34.268"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.268" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.268" endtime="20220624 16:06:34.268"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.269" level="INFO">${response_body} = {'message': 'Email e/ou senha inválidos'}</msg>
<status status="PASS" starttime="20220624 16:06:34.268" endtime="20220624 16:06:34.269"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.264" endtime="20220624 16:06:34.269"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.271" endtime="20220624 16:06:34.272"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.271" endtime="20220624 16:06:34.272"/>
</kw>
<kw name="Validar Mensagem &quot;Email e/ou senha inválidos&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.272" endtime="20220624 16:06:34.273"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.272" endtime="20220624 16:06:34.273"/>
</kw>
<tag>Login</tag>
<tag>Login_Usuario_Invalido</tag>
<tag>POST</tag>
<tag>POST_Login</tag>
<status status="PASS" starttime="20220624 16:06:34.259" endtime="20220624 16:06:34.273"/>
</test>
<test id="s1-s1-s1-t4" name="Cenario: Tentativa De Login Sem Email" line="35">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.276" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.275" endtime="20220624 16:06:34.276"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.275" endtime="20220624 16:06:34.276"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.277" level="INFO">${nome} = Edward Kirk</msg>
<status status="PASS" starttime="20220624 16:06:34.277" endtime="20220624 16:06:34.277"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.278" level="INFO">${email} = cassandrawalker@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.277" endtime="20220624 16:06:34.278"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.278" level="INFO">${senha} = 3)D+wU#6%v</msg>
<status status="PASS" starttime="20220624 16:06:34.278" endtime="20220624 16:06:34.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.279" level="INFO">&amp;{usuario} = { nome=Edward Kirk | email=cassandrawalker@example.net | password=3)D+wU#6%v | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.278" endtime="20220624 16:06:34.279"/>
</kw>
<msg timestamp="20220624 16:06:34.279" level="INFO">${usuario} = {'nome': 'Edward Kirk', 'email': 'cassandrawalker@example.net', 'password': '3)D+wU#6%v', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.276" endtime="20220624 16:06:34.279"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.279" endtime="20220624 16:06:34.279"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.285" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '100', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Edward+Kirk&amp;email=cassandrawalker%40example.net&amp;password=3%29D%2BwU%236%25v&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.285" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'db805e27-3ee7-4c5d-8b08-af0e690a85c9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "mc2cNHmP0w09a9Zu"
} 
 </msg>
<msg timestamp="20220624 16:06:34.285" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.279" endtime="20220624 16:06:34.285"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.286" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.286" endtime="20220624 16:06:34.286"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.287" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'mc2cNHmP0w09a9Zu'}</msg>
<status status="PASS" starttime="20220624 16:06:34.286" endtime="20220624 16:06:34.287"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.279" endtime="20220624 16:06:34.287"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.287" endtime="20220624 16:06:34.288"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.287" endtime="20220624 16:06:34.288"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.288" endtime="20220624 16:06:34.289"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.288" endtime="20220624 16:06:34.289"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.289" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.289" endtime="20220624 16:06:34.289"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.290" endtime="20220624 16:06:34.290"/>
</kw>
<msg timestamp="20220624 16:06:34.290" level="INFO">${usuario_valido} = {'nome': 'Edward Kirk', 'email': 'cassandrawalker@example.net', 'password': '3)D+wU#6%v', 'administrador': 'false', '_id': 'mc2cNHmP0w09a9Zu'}</msg>
<status status="PASS" starttime="20220624 16:06:34.276" endtime="20220624 16:06:34.290"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<arg>email</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.291" level="INFO">Removed item with key 'nome' and value 'Edward Kirk'.</msg>
<msg timestamp="20220624 16:06:34.291" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:34.291" level="INFO">Removed item with key '_id' and value 'mc2cNHmP0w09a9Zu'.</msg>
<msg timestamp="20220624 16:06:34.291" level="INFO">Removed item with key 'email' and value 'cassandrawalker@example.net'.</msg>
<status status="PASS" starttime="20220624 16:06:34.291" endtime="20220624 16:06:34.291"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.292" endtime="20220624 16:06:34.292"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.295" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '27', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=password=3%29D%2BwU%236%25v 
 </msg>
<msg timestamp="20220624 16:06:34.295" level="INFO">POST Response : url=http://localhost:3000/login 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '809cb142-9043-4c99-a979-52bf3b326f2f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '40', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:34.295" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.292" endtime="20220624 16:06:34.295"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.296" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.296" endtime="20220624 16:06:34.296"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.296" level="INFO">${response_body} = {'email': 'email é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:34.296" endtime="20220624 16:06:34.296"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.291" endtime="20220624 16:06:34.297"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.297" endtime="20220624 16:06:34.298"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.297" endtime="20220624 16:06:34.298"/>
</kw>
<kw name="Validar &quot;email&quot; Com O Valor &quot;email é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.299" endtime="20220624 16:06:34.299"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.298" endtime="20220624 16:06:34.299"/>
</kw>
<tag>Login</tag>
<tag>Login_Usuario_Email</tag>
<tag>POST</tag>
<tag>POST_Login</tag>
<status status="PASS" starttime="20220624 16:06:34.275" endtime="20220624 16:06:34.299"/>
</test>
<test id="s1-s1-s1-t5" name="Cenario: Tentativa De Login Sem Senha" line="43">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.302" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.301" endtime="20220624 16:06:34.302"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.301" endtime="20220624 16:06:34.302"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.303" level="INFO">${nome} = Marissa Cantu</msg>
<status status="PASS" starttime="20220624 16:06:34.303" endtime="20220624 16:06:34.303"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.303" level="INFO">${email} = brett69@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.303" endtime="20220624 16:06:34.303"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.304" level="INFO">${senha} = S^$uL6dQqT</msg>
<status status="PASS" starttime="20220624 16:06:34.303" endtime="20220624 16:06:34.304"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.304" level="INFO">&amp;{usuario} = { nome=Marissa Cantu | email=brett69@example.net | password=S^$uL6dQqT | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.304" endtime="20220624 16:06:34.304"/>
</kw>
<msg timestamp="20220624 16:06:34.304" level="INFO">${usuario} = {'nome': 'Marissa Cantu', 'email': 'brett69@example.net', 'password': 'S^$uL6dQqT', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.302" endtime="20220624 16:06:34.304"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.305" endtime="20220624 16:06:34.307"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.313" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Marissa+Cantu&amp;email=brett69%40example.net&amp;password=S%5E%24uL6dQqT&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.313" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dcc6c7a7-3b5b-46b7-871f-b63b2d4fad0e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "3ocxw9Cift2B6rbk"
} 
 </msg>
<msg timestamp="20220624 16:06:34.314" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.307" endtime="20220624 16:06:34.314"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.314" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.314" endtime="20220624 16:06:34.314"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.315" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '3ocxw9Cift2B6rbk'}</msg>
<status status="PASS" starttime="20220624 16:06:34.314" endtime="20220624 16:06:34.315"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.304" endtime="20220624 16:06:34.315"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.316" endtime="20220624 16:06:34.316"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.315" endtime="20220624 16:06:34.316"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.317" endtime="20220624 16:06:34.317"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.317" endtime="20220624 16:06:34.317"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.318" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.317" endtime="20220624 16:06:34.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.318" endtime="20220624 16:06:34.318"/>
</kw>
<msg timestamp="20220624 16:06:34.319" level="INFO">${usuario_valido} = {'nome': 'Marissa Cantu', 'email': 'brett69@example.net', 'password': 'S^$uL6dQqT', 'administrador': 'false', '_id': '3ocxw9Cift2B6rbk'}</msg>
<status status="PASS" starttime="20220624 16:06:34.302" endtime="20220624 16:06:34.319"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<arg>password</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.319" level="INFO">Removed item with key 'nome' and value 'Marissa Cantu'.</msg>
<msg timestamp="20220624 16:06:34.319" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:34.319" level="INFO">Removed item with key '_id' and value '3ocxw9Cift2B6rbk'.</msg>
<msg timestamp="20220624 16:06:34.319" level="INFO">Removed item with key 'password' and value 'S^$uL6dQqT'.</msg>
<status status="PASS" starttime="20220624 16:06:34.319" endtime="20220624 16:06:34.319"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.320" endtime="20220624 16:06:34.320"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.323" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '27', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=brett69%40example.net 
 </msg>
<msg timestamp="20220624 16:06:34.323" level="INFO">POST Response : url=http://localhost:3000/login 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd5589f1f-1102-4a23-b6f2-7d750f884099', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "password": "password é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:34.323" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.320" endtime="20220624 16:06:34.323"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.324" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.324" endtime="20220624 16:06:34.324"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.325" level="INFO">${response_body} = {'password': 'password é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:34.324" endtime="20220624 16:06:34.325"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.319" endtime="20220624 16:06:34.325"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.326" endtime="20220624 16:06:34.326"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.325" endtime="20220624 16:06:34.326"/>
</kw>
<kw name="Validar &quot;password&quot; Com O Valor &quot;password é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.327" endtime="20220624 16:06:34.327"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.327" endtime="20220624 16:06:34.327"/>
</kw>
<tag>Login</tag>
<tag>Login_Usuario_Senha</tag>
<tag>POST</tag>
<tag>POST_Login</tag>
<status status="PASS" starttime="20220624 16:06:34.301" endtime="20220624 16:06:34.328"/>
</test>
<doc>Arquivo De Requisições Do Tipo POST DA API Do EndPoint Login</doc>
<status status="PASS" starttime="20220624 16:06:33.696" endtime="20220624 16:06:34.329"/>
</suite>
<status status="PASS" starttime="20220624 16:06:33.694" endtime="20220624 16:06:34.331"/>
</suite>
<suite id="s1-s2" name="02 Usuarios" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\02_usuarios">
<suite id="s1-s2-s1" name="01 usuarios GET" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\02_usuarios\01_usuarios_GET.robot">
<test id="s1-s2-s1-t1" name="Cenario: Listar Todos Os Usuarios Cadastrados" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.347" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.347" endtime="20220624 16:06:34.347"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.346" endtime="20220624 16:06:34.347"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.348" level="INFO">${nome} = Jason Medina</msg>
<status status="PASS" starttime="20220624 16:06:34.348" endtime="20220624 16:06:34.348"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.348" level="INFO">${email} = jessica05@example.org</msg>
<status status="PASS" starttime="20220624 16:06:34.348" endtime="20220624 16:06:34.348"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.349" level="INFO">${senha} = (smMkbqBt8</msg>
<status status="PASS" starttime="20220624 16:06:34.348" endtime="20220624 16:06:34.349"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.349" level="INFO">&amp;{usuario} = { nome=Jason Medina | email=jessica05@example.org | password=(smMkbqBt8 | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.349" endtime="20220624 16:06:34.349"/>
</kw>
<msg timestamp="20220624 16:06:34.349" level="INFO">${usuario} = {'nome': 'Jason Medina', 'email': 'jessica05@example.org', 'password': '(smMkbqBt8', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.348" endtime="20220624 16:06:34.349"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.350" endtime="20220624 16:06:34.350"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.364" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Jason+Medina&amp;email=jessica05%40example.org&amp;password=%28smMkbqBt8&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.364" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5092593d-0286-45f6-98cd-1ff960163d6f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "7stnQ07dWNbLOvAW"
} 
 </msg>
<msg timestamp="20220624 16:06:34.364" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.350" endtime="20220624 16:06:34.364"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.365" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.365" endtime="20220624 16:06:34.365"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.366" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '7stnQ07dWNbLOvAW'}</msg>
<status status="PASS" starttime="20220624 16:06:34.365" endtime="20220624 16:06:34.366"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.349" endtime="20220624 16:06:34.366"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.366" endtime="20220624 16:06:34.367"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.366" endtime="20220624 16:06:34.367"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.368" endtime="20220624 16:06:34.368"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.367" endtime="20220624 16:06:34.368"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.369" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.368" endtime="20220624 16:06:34.369"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.369" endtime="20220624 16:06:34.369"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.347" endtime="20220624 16:06:34.369"/>
</kw>
<kw name="Get Endpoint &quot;/usuarios&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.373" level="INFO">GET Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.373" level="INFO">GET Response : url=http://localhost:3000/usuarios 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '94d6f70e-9775-4b68-a0c8-022a484d03fc', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12454', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 57,
    "usuarios": [
        {
            "nome": "Mary Robinson",
            "email": "courtneygibson@example.net",
            "password": "!6TG2Op75u",
            "administrador": "true",
            "_id": "0rBLRBYTwTEtnfFX"
        },
        {
            "nome": "Matthew Avery",
            "email": "laura80@example.com",
            "password": "RACz_Nph!2",
            "administrador": "true",
            "_id": "2SyScrMGRKnTrp20"
        },
        {
            "nome": "Marissa Cantu",
            "email": "brett69@example.net",
            "password": "S^$uL6dQqT",
            "administrador": "false",
            "_id": "3ocxw9Cift2B6rbk"
        },
        {
            "nome": "Ronald Johnson",
            "email": "kelli27@example.com",
            "password": "8_!E7MC2%j",
            "administrador": "true",
            "_id": "54We9PwywLO4chDc"
        },
        {
            "nome": "Sean Mendez",
            "email": "jonesmargaret@example.net",
            "password": "_3Kg%vAxf%",
            "administrador": "false",
            "_id": "6gmRR2SHpmnX0bbE"
        },
        {
            "nome": "Brooke George",
            "email": "agray@example.org",
            "password": "^8T4krJBW0",
            "administrador": "true",
            "_id": "7i4waOo297Ss7Pn1"
        },
        {
            "nome": "Jason Medina",
            "email": "jessica05@example.org",
            "password": "(smMkbqBt8",
            "administrador": "false",
            "_id": "7stnQ07dWNbLOvAW"
        },
        {
            "nome": "Ellen Fleming",
            "email": "kimberlyoconnor@example.net",
            "password": "@w9DfSKcaV",
            "administrador": "true",
            "_id": "AEn46TACx9jZAQW7"
        },
        {
            "nome": "Richard Evans",
            "email": "hanthony@example.net",
            "password": "()N7Kl_4%t",
            "administrador": "true",
            "_id": "CKmallxmiDvHDKXK"
        },
        {
            "nome": "Tammy Coleman",
            "email": "adam96@example.net",
            "password": "!)$z2BTdqz",
            "administrador": "true",
            "_id": "DEHFGDjPsxvLUILk"
        },
        {
            "nome": "Margaret Hickman",
            "email": "hernandezsandra@example.org",
            "password": "SU^18VBgFj",
            "administrador": "false",
            "_id": "DLefGPaKTIzQFiWe"
        },
        {
            "nome": "Frederick Ramirez",
            "email": "gwilliams@example.org",
            "password": "N12MUggVK(",
            "administrador": "true",
            "_id": "F7yKxSiGafDUCOEX"
        },
        {
            "nome": "Jennifer Hill",
            "email": "frank05@example.net",
            "password": "_8vNF$zf!H",
            "administrador": "true",
            "_id": "FUnQdj3qsR9i3G9P"
        },
        {
            "nome": "Morgan Hamilton",
            "email": "joshua69@example.org",
            "password": "P%8P5bam1x",
            "administrador": "true",
            "_id": "HD3xijrC3AMz2vAV"
        },
        {
            "nome": "Brandon Hawkins",
            "email": "rcruz@example.com",
            "password": "Kk1o5&amp;Qj7)",
            "administrador": "true",
            "_id": "HdHU61R3s3p9OqF4"
        },
        {
            "nome": "Kevin Jones",
            "email": "robinsonpeter@example.com",
            "password": "%3wVTm%n$S",
            "administrador": "true",
            "_id": "HjBTi16HfBByPyBA"
        },
        {
            "nome": "Jennifer Dawson",
            "email": "kari32@example.com",
            "password": "Br(XZ1Hk)Q",
            "administrador": "true",
            "_id": "HpGmFLzd0EHy1VQi"
        },
        {
            "nome": "Michael Griffin",
            "email": "dorseythomas@example.org",
            "password": "8!EP2Xa3_e",
            "administrador": "false",
            "_id": "JDH5HFiUjQFAdfOy"
        },
        {
            "nome": "Jason Leonard",
            "email": "kking@example.net",
            "password": "Uib&amp;6ORu_W",
            "administrador": "true",
            "_id": "JP0tO5X9VusjK3IA"
        },
        {
            "nome": "Nicholas Gonzales",
            "email": "melissa98@example.org",
            "password": ")v$j65ApW)",
            "administrador": "true",
            "_id": "JUa1Z0ZLsE9gMUI7"
        },
        {
            "nome": "Julia Mason",
            "email": "kimberly97@example.org",
            "password": "%t6f@M@p3Z",
            "administrador": "false",
            "_id": "JdmbWCagY6pJghWd"
        },
        {
            "nome": "Jamie Benson",
            "email": "rebeccareeves@example.net",
            "password": "@6XoMpl*%H",
            "administrador": "false",
            "_id": "MQOQytT0BKLtQVgG"
        },
        {
            "nome": "Norma Smith",
            "email": "rlopez@example.com",
            "password": "Kd!9CpmHc+",
            "administrador": "false",
            "_id": "QQBrb2ExHoMDg9y6"
        },
        {
            "nome": "Jared Black",
            "email": "john77@example.net",
            "password": "Tu0kXMViD@",
            "administrador": "true",
            "_id": "RRzKdCsSAALtFNC0"
        },
        {
            "nome": "Monica Brown",
            "email": "meganmoore@example.com",
            "password": "U#w4Rp#1&amp;l",
            "administrador": "false",
            "_id": "RXi7TagAMNZiWyb2"
        },
        {
            "nome": "Joanna Baldwin",
            "email": "ambervargas@example.net",
            "password": "T!U4d)XzBS",
            "administrador": "true",
            "_id": "SRZ6XLwuYtBjDhXv"
        },
        {
            "nome": "Earl Berg",
            "email": "raymondadkins@example.net",
            "password": "yJ9Mi+z+_@",
            "administrador": "true",
            "_id": "SkIc6Va9ncuu8gjE"
        },
        {
            "nome": "Stephen Parker",
            "email": "carrtommy@example.com",
            "password": "o#8sQ%SNHl",
            "administrador": "true",
            "_id": "TujNZGKUHHjXFizb"
        },
        {
            "nome": "Rebecca Ball",
            "email": "alexander73@example.com",
            "password": "F0HO^oTC!0",
            "administrador": "true",
            "_id": "UMJT7Asm2bTqzSCr"
        },
        {
            "nome": "Aaron Simon",
            "email": "shannon76@example.com",
            "password": "#mMEgJ08k5",
            "administrador": "true",
            "_id": "VBVgJZVpend7q21w"
        },
        {
            "nome": "Dr. Taylor Davis",
            "email": "wongkelly@example.org",
            "password": "@_B0C_hpIc",
            "administrador": "false",
            "_id": "VxkTblJ7uzZoIG6q"
        },
        {
            "nome": "Russell Lee",
            "email": "jwood@example.net",
            "password": "HrSb5fdi%8",
            "administrador": "true",
            "_id": "WGnuubtm1R3N5InY"
        },
        {
            "nome": "Laura Cardenas",
            "email": "frank97@example.org",
            "password": "Zk1JhxnR+k",
            "administrador": "false",
            "_id": "X1RZrIbc3Ejy7VeD"
        },
        {
            "nome": "Charles Vargas",
            "email": "kim09@example.net",
            "password": "7nX6)kib%p",
            "administrador": "true",
            "_id": "XFXI5ZCsLeycgaAr"
        },
        {
            "nome": "Tony Klein",
            "email": "george55@example.com",
            "password": "!j2HUbk(j7",
            "administrador": "false",
            "_id": "YFEYhZplEQ1SyIHZ"
        },
        {
            "nome": "Nicole Matthews",
            "email": "cmoore@example.org",
            "password": "7)z#0Um66W",
            "administrador": "true",
            "_id": "YKiLO2WIJ0IzBCHN"
        },
        {
            "nome": "Patricia Farmer",
            "email": "john47@example.com",
            "password": "1)2ODHnmO%",
            "administrador": "true",
            "_id": "bAX9w9Ln8fTQvKVF"
        },
        {
            "nome": "Brian Jones",
            "email": "lfoster@example.net",
            "password": "_2jBwZUkT4",
            "administrador": "false",
            "_id": "e7tNAotUcrtyBlyP"
        },
        {
            "nome": "Robert Nelson",
            "email": "emily74@example.com",
            "password": "&amp;R8ZIUt9i5",
            "administrador": "false",
            "_id": "eDnBHfP6gT5LbM59"
        },
        {
            "nome": "Joseph Barnes",
            "email": "dawnbrown@example.com",
            "password": "g9$Hkgp2(b",
            "administrador": "false",
            "_id": "eIpii0tqiU867EOL"
        },
        {
            "nome": "Victoria Brady",
            "email": "xjohns@example.org",
            "password": "Qm09KBMq@b",
            "administrador": "false",
            "_id": "gYxwD2cuZvKYOBMa"
        },
        {
            "nome": "Marie Foley",
            "email": "evansmelissa@example.org",
            "password": "y7PSxOsD+7",
            "administrador": "true",
            "_id": "gdVzqvYChBPzdWfy"
        },
        {
            "nome": "Andrea Lopez",
            "email": "timothy98@example.org",
            "password": "fw69oQou+%",
            "administrador": "false",
            "_id": "hD0nj3oEWoazhzSX"
        },
        {
            "nome": "April Klein MD",
            "email": "halltina@example.org",
            "password": "$3VTW*bx*Q",
            "administrador": "false",
            "_id": "hQKqpQibqAA9Qa8s"
        },
        {
            "nome": "Michael Keith",
            "email": "annalawson@example.org",
            "password": "kD2PgN6dJ^",
            "administrador": "false",
            "_id": "iElvPYFTvQkieUEg"
        },
        {
            "nome": "Joshua Webb",
            "email": "kevin63@example.org",
            "password": "$2uUy2IaRd",
            "administrador": "false",
            "_id": ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:34.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.370" endtime="20220624 16:06:34.374"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.374" endtime="20220624 16:06:34.374"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.375" level="INFO">${response_body} = {'quantidade': 57, 'usuarios': [{'nome': 'Mary Robinson', 'email': 'courtneygibson@example.net', 'password': '!6TG2Op75u', 'administrador': 'true', '_id': '0rBLRBYTwTEtnfFX'}, {'nome': 'Matthew Avery'...</msg>
<status status="PASS" starttime="20220624 16:06:34.374" endtime="20220624 16:06:34.375"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.370" endtime="20220624 16:06:34.375"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.376" endtime="20220624 16:06:34.377"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.376" endtime="20220624 16:06:34.377"/>
</kw>
<kw name="Validar Quantidade De Usuarios &gt; 0" library="resource" sourcename="Validar Quantidade De ${item} ${operador} ${quantidade}">
<kw name="Should Be True" library="BuiltIn">
<arg>${response_body['quantidade']} ${operador} ${quantidade}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.377" endtime="20220624 16:06:34.378"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.377" endtime="20220624 16:06:34.378"/>
</kw>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Listar_Todos</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.346" endtime="20220624 16:06:34.378"/>
</test>
<test id="s1-s2-s1-t2" name="Cenario: Buscar Usuario Por ID Valido" line="17">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.381" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.380" endtime="20220624 16:06:34.381"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.380" endtime="20220624 16:06:34.381"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.382" level="INFO">${nome} = Michael Moore</msg>
<status status="PASS" starttime="20220624 16:06:34.382" endtime="20220624 16:06:34.382"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.382" level="INFO">${email} = ernestwebb@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.382" endtime="20220624 16:06:34.382"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.383" level="INFO">${senha} = !4DZ2b*ma!</msg>
<status status="PASS" starttime="20220624 16:06:34.383" endtime="20220624 16:06:34.383"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.383" level="INFO">&amp;{usuario} = { nome=Michael Moore | email=ernestwebb@example.com | password=!4DZ2b*ma! | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.383" endtime="20220624 16:06:34.383"/>
</kw>
<msg timestamp="20220624 16:06:34.383" level="INFO">${usuario} = {'nome': 'Michael Moore', 'email': 'ernestwebb@example.com', 'password': '!4DZ2b*ma!', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.381" endtime="20220624 16:06:34.383"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.384" endtime="20220624 16:06:34.384"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.390" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '95', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Michael+Moore&amp;email=ernestwebb%40example.com&amp;password=%214DZ2b%2Ama%21&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.390" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4271c79a-67e1-4670-81d5-e32e666e5897', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "fp4AQSWb045J273O"
} 
 </msg>
<msg timestamp="20220624 16:06:34.390" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.384" endtime="20220624 16:06:34.390"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.391" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.391" endtime="20220624 16:06:34.391"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.392" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'fp4AQSWb045J273O'}</msg>
<status status="PASS" starttime="20220624 16:06:34.391" endtime="20220624 16:06:34.392"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.384" endtime="20220624 16:06:34.392"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.393" endtime="20220624 16:06:34.393"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.392" endtime="20220624 16:06:34.394"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.394" endtime="20220624 16:06:34.394"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.394" endtime="20220624 16:06:34.394"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.395" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.395" endtime="20220624 16:06:34.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.395" endtime="20220624 16:06:34.396"/>
</kw>
<msg timestamp="20220624 16:06:34.396" level="INFO">${usuario_valido} = {'nome': 'Michael Moore', 'email': 'ernestwebb@example.com', 'password': '!4DZ2b*ma!', 'administrador': 'false', '_id': 'fp4AQSWb045J273O'}</msg>
<status status="PASS" starttime="20220624 16:06:34.381" endtime="20220624 16:06:34.396"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario_valido['_id']}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.400" level="INFO">GET Request : url=http://localhost:3000/usuarios/fp4AQSWb045J273O 
 path_url=/usuarios/fp4AQSWb045J273O 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.400" level="INFO">GET Response : url=http://localhost:3000/usuarios/fp4AQSWb045J273O 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5a4ce3ed-a7e5-4487-9dce-30ed403e992a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '161', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Michael Moore",
    "email": "ernestwebb@example.com",
    "password": "!4DZ2b*ma!",
    "administrador": "false",
    "_id": "fp4AQSWb045J273O"
} 
 </msg>
<msg timestamp="20220624 16:06:34.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.397" endtime="20220624 16:06:34.400"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.400" endtime="20220624 16:06:34.400"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.401" level="INFO">${response_body} = {'nome': 'Michael Moore', 'email': 'ernestwebb@example.com', 'password': '!4DZ2b*ma!', 'administrador': 'false', '_id': 'fp4AQSWb045J273O'}</msg>
<status status="PASS" starttime="20220624 16:06:34.400" endtime="20220624 16:06:34.401"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.396" endtime="20220624 16:06:34.401"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.402" endtime="20220624 16:06:34.403"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.402" endtime="20220624 16:06:34.403"/>
</kw>
<kw name="Validar Usuario &quot;${usuario_valido['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Usuario &quot;${id_usuario_cadastrado}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<arg>${id_usuario_cadastrado}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.404" endtime="20220624 16:06:34.405"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.404" endtime="20220624 16:06:34.405"/>
</kw>
<tag>Buscar_Usuario_Valido</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.380" endtime="20220624 16:06:34.405"/>
</test>
<test id="s1-s2-s1-t3" name="Cenario: Buscar Usuario Por ID Valido Administrador" line="24">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.407" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.407" endtime="20220624 16:06:34.407"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.406" endtime="20220624 16:06:34.407"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;true&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.408" level="INFO">${nome} = Brianna Decker</msg>
<status status="PASS" starttime="20220624 16:06:34.408" endtime="20220624 16:06:34.408"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.409" level="INFO">${email} = watsonphillip@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.408" endtime="20220624 16:06:34.409"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.409" level="INFO">${senha} = i*)c9K6%ec</msg>
<status status="PASS" starttime="20220624 16:06:34.409" endtime="20220624 16:06:34.409"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.410" level="INFO">&amp;{usuario} = { nome=Brianna Decker | email=watsonphillip@example.net | password=i*)c9K6%ec | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:34.409" endtime="20220624 16:06:34.410"/>
</kw>
<msg timestamp="20220624 16:06:34.410" level="INFO">${usuario} = {'nome': 'Brianna Decker', 'email': 'watsonphillip@example.net', 'password': 'i*)c9K6%ec', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:34.408" endtime="20220624 16:06:34.410"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.410" endtime="20220624 16:06:34.411"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.417" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '98', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Brianna+Decker&amp;email=watsonphillip%40example.net&amp;password=i%2A%29c9K6%25ec&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:34.417" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ec6f15e9-f4a3-4127-8388-8df45aea62d0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ei87NeMaYHfe5hld"
} 
 </msg>
<msg timestamp="20220624 16:06:34.417" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.411" endtime="20220624 16:06:34.417"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.417" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.417" endtime="20220624 16:06:34.417"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.418" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ei87NeMaYHfe5hld'}</msg>
<status status="PASS" starttime="20220624 16:06:34.417" endtime="20220624 16:06:34.418"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.410" endtime="20220624 16:06:34.418"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.419" endtime="20220624 16:06:34.419"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.419" endtime="20220624 16:06:34.420"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.420" endtime="20220624 16:06:34.420"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.420" endtime="20220624 16:06:34.420"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.421" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.421" endtime="20220624 16:06:34.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.421" endtime="20220624 16:06:34.421"/>
</kw>
<msg timestamp="20220624 16:06:34.422" level="INFO">${usuario_valido} = {'nome': 'Brianna Decker', 'email': 'watsonphillip@example.net', 'password': 'i*)c9K6%ec', 'administrador': 'true', '_id': 'ei87NeMaYHfe5hld'}</msg>
<status status="PASS" starttime="20220624 16:06:34.407" endtime="20220624 16:06:34.422"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario_valido['_id']}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.426" level="INFO">GET Request : url=http://localhost:3000/usuarios/ei87NeMaYHfe5hld 
 path_url=/usuarios/ei87NeMaYHfe5hld 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.426" level="INFO">GET Response : url=http://localhost:3000/usuarios/ei87NeMaYHfe5hld 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '80946e48-7d6e-45b8-94a9-ce43b238b03f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '164', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Brianna Decker",
    "email": "watsonphillip@example.net",
    "password": "i*)c9K6%ec",
    "administrador": "true",
    "_id": "ei87NeMaYHfe5hld"
} 
 </msg>
<msg timestamp="20220624 16:06:34.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.423" endtime="20220624 16:06:34.426"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.426" endtime="20220624 16:06:34.426"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.427" level="INFO">${response_body} = {'nome': 'Brianna Decker', 'email': 'watsonphillip@example.net', 'password': 'i*)c9K6%ec', 'administrador': 'true', '_id': 'ei87NeMaYHfe5hld'}</msg>
<status status="PASS" starttime="20220624 16:06:34.426" endtime="20220624 16:06:34.427"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.422" endtime="20220624 16:06:34.427"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.428" endtime="20220624 16:06:34.429"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.427" endtime="20220624 16:06:34.429"/>
</kw>
<kw name="Validar Usuario &quot;${usuario_valido['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Usuario &quot;${id_usuario_cadastrado}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<arg>${id_usuario_cadastrado}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.430" endtime="20220624 16:06:34.430"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.429" endtime="20220624 16:06:34.430"/>
</kw>
<tag>Buscar_Usuario_Valido</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.406" endtime="20220624 16:06:34.431"/>
</test>
<test id="s1-s2-s1-t4" name="Cenario: Buscar Usuario Por Id Invalido" line="31">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.433" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.432" endtime="20220624 16:06:34.433"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.432" endtime="20220624 16:06:34.433"/>
</kw>
<kw name="GET Endpoint &quot;/usuarios/${usuario_nao_cadastrado}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.437" level="INFO">GET Request : url=http://localhost:3000/usuarios/NaoExisto 
 path_url=/usuarios/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.437" level="INFO">GET Response : url=http://localhost:3000/usuarios/NaoExisto 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7a10e94b-2107-48b3-a60d-a8e963241a3e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg timestamp="20220624 16:06:34.437" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.433" endtime="20220624 16:06:34.437"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.438" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.437" endtime="20220624 16:06:34.438"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.439" level="INFO">${response_body} = {'message': 'Usuário não encontrado'}</msg>
<status status="PASS" starttime="20220624 16:06:34.438" endtime="20220624 16:06:34.439"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.433" endtime="20220624 16:06:34.439"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.439" endtime="20220624 16:06:34.441"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.439" endtime="20220624 16:06:34.441"/>
</kw>
<kw name="Validar Mensagem &quot;Usuário não encontrado&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.442" endtime="20220624 16:06:34.442"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.441" endtime="20220624 16:06:34.442"/>
</kw>
<tag>Buscar_Usuario_Invalido</tag>
<tag>GET</tag>
<tag>GET_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.432" endtime="20220624 16:06:34.442"/>
</test>
<doc>Arquivo De Requisições Do Tipo GET DA API Do EndPoint Usuarios</doc>
<status status="PASS" starttime="20220624 16:06:34.334" endtime="20220624 16:06:34.443"/>
</suite>
<suite id="s1-s2-s2" name="02 usuarios POST" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\02_usuarios\02_usuarios_POST.robot">
<test id="s1-s2-s2-t1" name="Cenario: Cadastrar Um Usuario Administrador Com Sucesso" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.457" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.457" endtime="20220624 16:06:34.457"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.457" endtime="20220624 16:06:34.458"/>
</kw>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;true&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.459" level="INFO">${nome} = Randy Brock</msg>
<status status="PASS" starttime="20220624 16:06:34.458" endtime="20220624 16:06:34.459"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.459" level="INFO">${email} = handerson@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.459" endtime="20220624 16:06:34.459"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.459" level="INFO">${senha} = vaPOE)x@*9</msg>
<status status="PASS" starttime="20220624 16:06:34.459" endtime="20220624 16:06:34.459"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.460" level="INFO">&amp;{usuario} = { nome=Randy Brock | email=handerson@example.com | password=vaPOE)x@*9 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:34.459" endtime="20220624 16:06:34.460"/>
</kw>
<msg timestamp="20220624 16:06:34.460" level="INFO">${usuario} = {'nome': 'Randy Brock', 'email': 'handerson@example.com', 'password': 'vaPOE)x@*9', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:34.458" endtime="20220624 16:06:34.460"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.461" endtime="20220624 16:06:34.461"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.467" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Randy+Brock&amp;email=handerson%40example.com&amp;password=vaPOE%29x%40%2A9&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:34.467" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '51590212-db88-43c5-a470-7cab89a3a9f2', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "kmnxX3we0CvvZsiY"
} 
 </msg>
<msg timestamp="20220624 16:06:34.467" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.461" endtime="20220624 16:06:34.467"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.468" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.467" endtime="20220624 16:06:34.468"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.469" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'kmnxX3we0CvvZsiY'}</msg>
<status status="PASS" starttime="20220624 16:06:34.468" endtime="20220624 16:06:34.469"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.460" endtime="20220624 16:06:34.469"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.469" endtime="20220624 16:06:34.470"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.469" endtime="20220624 16:06:34.470"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.471" endtime="20220624 16:06:34.471"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.470" endtime="20220624 16:06:34.471"/>
</kw>
<tag>Cadastrar_Usuario_Administrador</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.456" endtime="20220624 16:06:34.471"/>
</test>
<test id="s1-s2-s2-t2" name="Cenario: Cadastrar Um Usuario Nao Administrador Com Sucesso" line="17">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.473" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.473" endtime="20220624 16:06:34.474"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.473" endtime="20220624 16:06:34.474"/>
</kw>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.475" level="INFO">${nome} = Stephen Lambert</msg>
<status status="PASS" starttime="20220624 16:06:34.474" endtime="20220624 16:06:34.475"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.475" level="INFO">${email} = morganjonathon@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.475" endtime="20220624 16:06:34.475"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.475" level="INFO">${senha} = n2x1Nk1zS_</msg>
<status status="PASS" starttime="20220624 16:06:34.475" endtime="20220624 16:06:34.475"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.476" level="INFO">&amp;{usuario} = { nome=Stephen Lambert | email=morganjonathon@example.com | password=n2x1Nk1zS_ | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.476" endtime="20220624 16:06:34.476"/>
</kw>
<msg timestamp="20220624 16:06:34.476" level="INFO">${usuario} = {'nome': 'Stephen Lambert', 'email': 'morganjonathon@example.com', 'password': 'n2x1Nk1zS_', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.474" endtime="20220624 16:06:34.476"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.477" endtime="20220624 16:06:34.477"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.483" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '95', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Stephen+Lambert&amp;email=morganjonathon%40example.com&amp;password=n2x1Nk1zS_&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.483" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7bf3e370-9721-4bb8-984f-5f39484689c3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "yqZrCaPw5NoinzkJ"
} 
 </msg>
<msg timestamp="20220624 16:06:34.484" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.477" endtime="20220624 16:06:34.484"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.484" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.484" endtime="20220624 16:06:34.484"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.485" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'yqZrCaPw5NoinzkJ'}</msg>
<status status="PASS" starttime="20220624 16:06:34.484" endtime="20220624 16:06:34.485"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.476" endtime="20220624 16:06:34.485"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.486" endtime="20220624 16:06:34.487"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.486" endtime="20220624 16:06:34.487"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.487" endtime="20220624 16:06:34.488"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.487" endtime="20220624 16:06:34.488"/>
</kw>
<tag>Cadastrar_Usuario</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.472" endtime="20220624 16:06:34.488"/>
</test>
<test id="s1-s2-s2-t3" name="Cenario: Tentativa de Cadastrar Um Usuario Com Email Ja Cadastrado" line="25">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.491" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.491" endtime="20220624 16:06:34.491"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.490" endtime="20220624 16:06:34.491"/>
</kw>
<kw name="Gerar Usuario Com Email Ja Cadastrado" library="usuarios_keywords">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.492" level="INFO">${nome} = Matthew Jones</msg>
<status status="PASS" starttime="20220624 16:06:34.492" endtime="20220624 16:06:34.492"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.493" level="INFO">${email} = cherylcoleman@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.492" endtime="20220624 16:06:34.493"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.493" level="INFO">${senha} = A+!a2GVgXR</msg>
<status status="PASS" starttime="20220624 16:06:34.493" endtime="20220624 16:06:34.493"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.494" level="INFO">&amp;{usuario} = { nome=Matthew Jones | email=cherylcoleman@example.net | password=A+!a2GVgXR | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.493" endtime="20220624 16:06:34.494"/>
</kw>
<msg timestamp="20220624 16:06:34.494" level="INFO">${usuario} = {'nome': 'Matthew Jones', 'email': 'cherylcoleman@example.net', 'password': 'A+!a2GVgXR', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.492" endtime="20220624 16:06:34.494"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_ja_cadastrado}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.496" level="INFO">${nome} = Amy Shaw</msg>
<status status="PASS" starttime="20220624 16:06:34.495" endtime="20220624 16:06:34.496"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.496" level="INFO">${email} = cameronbradley@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.496" endtime="20220624 16:06:34.496"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.497" level="INFO">${senha} = _O2XfgsG*N</msg>
<status status="PASS" starttime="20220624 16:06:34.496" endtime="20220624 16:06:34.497"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.497" level="INFO">&amp;{usuario} = { nome=Amy Shaw | email=cameronbradley@example.com | password=_O2XfgsG*N | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.497" endtime="20220624 16:06:34.497"/>
</kw>
<msg timestamp="20220624 16:06:34.497" level="INFO">${usuario} = {'nome': 'Amy Shaw', 'email': 'cameronbradley@example.com', 'password': '_O2XfgsG*N', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.495" endtime="20220624 16:06:34.497"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.498" endtime="20220624 16:06:34.498"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.504" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Amy+Shaw&amp;email=cameronbradley%40example.com&amp;password=_O2XfgsG%2AN&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.504" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '320c7f3e-9802-4d80-9c89-46b6f3883192', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6weknfIj6hf0aei2"
} 
 </msg>
<msg timestamp="20220624 16:06:34.504" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.498" endtime="20220624 16:06:34.504"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.505" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.505" endtime="20220624 16:06:34.505"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.506" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '6weknfIj6hf0aei2'}</msg>
<status status="PASS" starttime="20220624 16:06:34.505" endtime="20220624 16:06:34.506"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.498" endtime="20220624 16:06:34.506"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.506" endtime="20220624 16:06:34.507"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.506" endtime="20220624 16:06:34.507"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.508" endtime="20220624 16:06:34.508"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.507" endtime="20220624 16:06:34.508"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.509" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.508" endtime="20220624 16:06:34.509"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.509" endtime="20220624 16:06:34.509"/>
</kw>
<msg timestamp="20220624 16:06:34.509" level="INFO">${usuario_ja_cadastrado} = {'nome': 'Amy Shaw', 'email': 'cameronbradley@example.com', 'password': '_O2XfgsG*N', 'administrador': 'false', '_id': '6weknfIj6hf0aei2'}</msg>
<status status="PASS" starttime="20220624 16:06:34.494" endtime="20220624 16:06:34.510"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>email=${usuario_ja_cadastrado['email']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.510" endtime="20220624 16:06:34.511"/>
</kw>
<msg timestamp="20220624 16:06:34.511" level="INFO">${usuario} = {'nome': 'Matthew Jones', 'email': 'cameronbradley@example.com', 'password': 'A+!a2GVgXR', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.491" endtime="20220624 16:06:34.511"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.512" endtime="20220624 16:06:34.512"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.515" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '97', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Matthew+Jones&amp;email=cameronbradley%40example.com&amp;password=A%2B%21a2GVgXR&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.515" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '13ac7519-907e-47c2-9fa0-1aedb95a2b1e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg timestamp="20220624 16:06:34.515" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.512" endtime="20220624 16:06:34.515"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.515" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.515" endtime="20220624 16:06:34.516"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.516" level="INFO">${response_body} = {'message': 'Este email já está sendo usado'}</msg>
<status status="PASS" starttime="20220624 16:06:34.516" endtime="20220624 16:06:34.516"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.511" endtime="20220624 16:06:34.516"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.517" endtime="20220624 16:06:34.518"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.517" endtime="20220624 16:06:34.518"/>
</kw>
<kw name="Validar Mensagem &quot;Este email já está sendo usado&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.518" endtime="20220624 16:06:34.519"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.518" endtime="20220624 16:06:34.519"/>
</kw>
<tag>Cadastrar_Usuario_Email_Ja_Utilizado</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.490" endtime="20220624 16:06:34.519"/>
</test>
<test id="s1-s2-s2-t4" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Nome" line="34">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.521" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.521" endtime="20220624 16:06:34.522"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.521" endtime="20220624 16:06:34.522"/>
</kw>
<kw name="Gerar Usuario Sem O Campo &quot;nome&quot;" library="usuarios_keywords" sourcename="Gerar Usuario Sem O Campo &quot;${parametro}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.523" level="INFO">${nome} = David Johnson</msg>
<status status="PASS" starttime="20220624 16:06:34.522" endtime="20220624 16:06:34.523"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.523" level="INFO">${email} = luceronancy@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.523" endtime="20220624 16:06:34.523"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.523" level="INFO">${senha} = 7pVF89Di#V</msg>
<status status="PASS" starttime="20220624 16:06:34.523" endtime="20220624 16:06:34.524"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.524" level="INFO">&amp;{usuario} = { nome=David Johnson | email=luceronancy@example.com | password=7pVF89Di#V | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.524" endtime="20220624 16:06:34.524"/>
</kw>
<msg timestamp="20220624 16:06:34.524" level="INFO">${usuario} = {'nome': 'David Johnson', 'email': 'luceronancy@example.com', 'password': '7pVF89Di#V', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.522" endtime="20220624 16:06:34.524"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.525" level="INFO">Removed item with key 'nome' and value 'David Johnson'.</msg>
<status status="PASS" starttime="20220624 16:06:34.524" endtime="20220624 16:06:34.525"/>
</kw>
<msg timestamp="20220624 16:06:34.525" level="INFO">${usuario} = {'email': 'luceronancy@example.com', 'password': '7pVF89Di#V', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.522" endtime="20220624 16:06:34.525"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.526" endtime="20220624 16:06:34.526"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.530" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '73', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=luceronancy%40example.com&amp;password=7pVF89Di%23V&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.530" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9004dde9-0cd6-46e7-9949-eea9e46f8d0b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '38', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:34.530" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.526" endtime="20220624 16:06:34.530"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.531" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.530" endtime="20220624 16:06:34.531"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.532" level="INFO">${response_body} = {'nome': 'nome é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:34.531" endtime="20220624 16:06:34.532"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.525" endtime="20220624 16:06:34.532"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.532" endtime="20220624 16:06:34.533"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.532" endtime="20220624 16:06:34.533"/>
</kw>
<kw name="Validar &quot;nome&quot; Com O Valor &quot;nome é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.534" endtime="20220624 16:06:34.534"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.534" endtime="20220624 16:06:34.535"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Nome</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.521" endtime="20220624 16:06:34.535"/>
</test>
<test id="s1-s2-s2-t5" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Email" line="41">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.537" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.537" endtime="20220624 16:06:34.537"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.537" endtime="20220624 16:06:34.537"/>
</kw>
<kw name="Gerar Usuario Sem O Campo &quot;email&quot;" library="usuarios_keywords" sourcename="Gerar Usuario Sem O Campo &quot;${parametro}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.539" level="INFO">${nome} = Matthew Adkins</msg>
<status status="PASS" starttime="20220624 16:06:34.538" endtime="20220624 16:06:34.539"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.539" level="INFO">${email} = jchavez@example.org</msg>
<status status="PASS" starttime="20220624 16:06:34.539" endtime="20220624 16:06:34.539"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.539" level="INFO">${senha} = ^AVz6eM$X7</msg>
<status status="PASS" starttime="20220624 16:06:34.539" endtime="20220624 16:06:34.539"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.540" level="INFO">&amp;{usuario} = { nome=Matthew Adkins | email=jchavez@example.org | password=^AVz6eM$X7 | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.539" endtime="20220624 16:06:34.540"/>
</kw>
<msg timestamp="20220624 16:06:34.540" level="INFO">${usuario} = {'nome': 'Matthew Adkins', 'email': 'jchavez@example.org', 'password': '^AVz6eM$X7', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.538" endtime="20220624 16:06:34.540"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.540" level="INFO">Removed item with key 'email' and value 'jchavez@example.org'.</msg>
<status status="PASS" starttime="20220624 16:06:34.540" endtime="20220624 16:06:34.540"/>
</kw>
<msg timestamp="20220624 16:06:34.540" level="INFO">${usuario} = {'nome': 'Matthew Adkins', 'password': '^AVz6eM$X7', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.538" endtime="20220624 16:06:34.541"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.542" endtime="20220624 16:06:34.542"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.546" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Matthew+Adkins&amp;password=%5EAVz6eM%24X7&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.546" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2ee01180-735d-477f-bdf0-9063aaab793f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '40', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:34.546" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.542" endtime="20220624 16:06:34.546"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.547" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.547" endtime="20220624 16:06:34.547"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.548" level="INFO">${response_body} = {'email': 'email é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:34.547" endtime="20220624 16:06:34.548"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.541" endtime="20220624 16:06:34.548"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.549" endtime="20220624 16:06:34.550"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.549" endtime="20220624 16:06:34.550"/>
</kw>
<kw name="Validar &quot;email&quot; Com O Valor &quot;email é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.550" endtime="20220624 16:06:34.551"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.550" endtime="20220624 16:06:34.551"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Email</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.536" endtime="20220624 16:06:34.551"/>
</test>
<test id="s1-s2-s2-t6" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Senha" line="48">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.553" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.553" endtime="20220624 16:06:34.554"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.553" endtime="20220624 16:06:34.554"/>
</kw>
<kw name="Gerar Usuario Sem O Campo &quot;password&quot;" library="usuarios_keywords" sourcename="Gerar Usuario Sem O Campo &quot;${parametro}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.555" level="INFO">${nome} = Erika Perez</msg>
<status status="PASS" starttime="20220624 16:06:34.555" endtime="20220624 16:06:34.555"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.555" level="INFO">${email} = richardfitzgerald@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.555" endtime="20220624 16:06:34.555"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.556" level="INFO">${senha} = (9Ki_WUJSq</msg>
<status status="PASS" starttime="20220624 16:06:34.555" endtime="20220624 16:06:34.556"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.556" level="INFO">&amp;{usuario} = { nome=Erika Perez | email=richardfitzgerald@example.net | password=(9Ki_WUJSq | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.556" endtime="20220624 16:06:34.556"/>
</kw>
<msg timestamp="20220624 16:06:34.556" level="INFO">${usuario} = {'nome': 'Erika Perez', 'email': 'richardfitzgerald@example.net', 'password': '(9Ki_WUJSq', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.554" endtime="20220624 16:06:34.556"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.556" level="INFO">Removed item with key 'password' and value '(9Ki_WUJSq'.</msg>
<status status="PASS" starttime="20220624 16:06:34.556" endtime="20220624 16:06:34.557"/>
</kw>
<msg timestamp="20220624 16:06:34.557" level="INFO">${usuario} = {'nome': 'Erika Perez', 'email': 'richardfitzgerald@example.net', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.554" endtime="20220624 16:06:34.557"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.558" endtime="20220624 16:06:34.558"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.562" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '74', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Erika+Perez&amp;email=richardfitzgerald%40example.net&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.562" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0e70e0d1-298d-4e95-be9a-5fc19dc8d21f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "password": "password é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:34.562" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.558" endtime="20220624 16:06:34.562"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.562" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.562" endtime="20220624 16:06:34.562"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.564" level="INFO">${response_body} = {'password': 'password é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:34.562" endtime="20220624 16:06:34.564"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.557" endtime="20220624 16:06:34.564"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.565" endtime="20220624 16:06:34.565"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.564" endtime="20220624 16:06:34.565"/>
</kw>
<kw name="Validar &quot;password&quot; Com O Valor &quot;password é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.566" endtime="20220624 16:06:34.567"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.566" endtime="20220624 16:06:34.567"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Senha</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.553" endtime="20220624 16:06:34.567"/>
</test>
<test id="s1-s2-s2-t7" name="Cenario: Tentativa de Cadastrar Um Usuario Sem Administrador" line="55">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.569" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.569" endtime="20220624 16:06:34.569"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.569" endtime="20220624 16:06:34.569"/>
</kw>
<kw name="Gerar Usuario Sem O Campo &quot;administrador&quot;" library="usuarios_keywords" sourcename="Gerar Usuario Sem O Campo &quot;${parametro}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.570" level="INFO">${nome} = Tara Knight</msg>
<status status="PASS" starttime="20220624 16:06:34.570" endtime="20220624 16:06:34.570"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.571" level="INFO">${email} = schmidtdaniel@example.org</msg>
<status status="PASS" starttime="20220624 16:06:34.570" endtime="20220624 16:06:34.571"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.571" level="INFO">${senha} = 0SANphQO(6</msg>
<status status="PASS" starttime="20220624 16:06:34.571" endtime="20220624 16:06:34.571"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.571" level="INFO">&amp;{usuario} = { nome=Tara Knight | email=schmidtdaniel@example.org | password=0SANphQO(6 | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.571" endtime="20220624 16:06:34.572"/>
</kw>
<msg timestamp="20220624 16:06:34.572" level="INFO">${usuario} = {'nome': 'Tara Knight', 'email': 'schmidtdaniel@example.org', 'password': '0SANphQO(6', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.570" endtime="20220624 16:06:34.572"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.572" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<status status="PASS" starttime="20220624 16:06:34.572" endtime="20220624 16:06:34.572"/>
</kw>
<msg timestamp="20220624 16:06:34.572" level="INFO">${usuario} = {'nome': 'Tara Knight', 'email': 'schmidtdaniel@example.org', 'password': '0SANphQO(6'}</msg>
<status status="PASS" starttime="20220624 16:06:34.570" endtime="20220624 16:06:34.572"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.573" endtime="20220624 16:06:34.573"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.577" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '72', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Tara+Knight&amp;email=schmidtdaniel%40example.org&amp;password=0SANphQO%286 
 </msg>
<msg timestamp="20220624 16:06:34.577" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b770247f-e686-4ec6-ad62-130548ac23be', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "administrador": "administrador é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:34.577" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.573" endtime="20220624 16:06:34.577"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.578" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.578" endtime="20220624 16:06:34.578"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.579" level="INFO">${response_body} = {'administrador': 'administrador é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:34.578" endtime="20220624 16:06:34.579"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.573" endtime="20220624 16:06:34.579"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.580" endtime="20220624 16:06:34.580"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.579" endtime="20220624 16:06:34.580"/>
</kw>
<kw name="Validar &quot;administrador&quot; Com O Valor &quot;administrador é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.581" endtime="20220624 16:06:34.582"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.581" endtime="20220624 16:06:34.582"/>
</kw>
<tag>Cadastrar_Usuario_Sem_Administrador</tag>
<tag>POST</tag>
<tag>POST_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.568" endtime="20220624 16:06:34.582"/>
</test>
<doc>Arquivo De Requisições Do Tipo POST DA API Do EndPoint Usuarios</doc>
<status status="PASS" starttime="20220624 16:06:34.445" endtime="20220624 16:06:34.584"/>
</suite>
<suite id="s1-s2-s3" name="03 usuarios PUT" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\02_usuarios\03_usuarios_PUT.robot">
<test id="s1-s2-s3-t1" name="Cenerario: Atualizar Dados de Um Usuario Nao Cadastrado" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.598" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.598" endtime="20220624 16:06:34.598"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.597" endtime="20220624 16:06:34.598"/>
</kw>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.599" level="INFO">${nome} = Tonya Cook</msg>
<status status="PASS" starttime="20220624 16:06:34.599" endtime="20220624 16:06:34.599"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.599" level="INFO">${email} = seanstout@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.599" endtime="20220624 16:06:34.600"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.600" level="INFO">${senha} = 11^CNEGX^w</msg>
<status status="PASS" starttime="20220624 16:06:34.600" endtime="20220624 16:06:34.600"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.600" level="INFO">&amp;{usuario} = { nome=Tonya Cook | email=seanstout@example.com | password=11^CNEGX^w | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.600" endtime="20220624 16:06:34.600"/>
</kw>
<msg timestamp="20220624 16:06:34.600" level="INFO">${usuario} = {'nome': 'Tonya Cook', 'email': 'seanstout@example.com', 'password': '11^CNEGX^w', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.599" endtime="20220624 16:06:34.600"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/NaoExisto&quot; Com Body &quot;${usuario}&quot;" library="PUT" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.601" endtime="20220624 16:06:34.601"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.609" level="INFO">PUT Request : url=http://localhost:3000/usuarios/NaoExisto 
 path_url=/usuarios/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Tonya+Cook&amp;email=seanstout%40example.com&amp;password=11%5ECNEGX%5Ew&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.609" level="INFO">PUT Response : url=http://localhost:3000/usuarios/NaoExisto 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '336e5fa1-24c8-4c37-b757-fd12815739af', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "2RV6ayJjBon1x3DN"
} 
 </msg>
<msg timestamp="20220624 16:06:34.609" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.601" endtime="20220624 16:06:34.609"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.610" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.609" endtime="20220624 16:06:34.610"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.611" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '2RV6ayJjBon1x3DN'}</msg>
<status status="PASS" starttime="20220624 16:06:34.610" endtime="20220624 16:06:34.611"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.601" endtime="20220624 16:06:34.611"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.611" endtime="20220624 16:06:34.612"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.611" endtime="20220624 16:06:34.612"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.613" endtime="20220624 16:06:34.613"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.613" endtime="20220624 16:06:34.613"/>
</kw>
<tag>Atualizar_Dados_Usuario_Nao_Cadastrado</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.597" endtime="20220624 16:06:34.614"/>
</test>
<test id="s1-s2-s3-t2" name="Cenario: Atualizar Nome Do Usuario" line="17">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.616" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.616" endtime="20220624 16:06:34.616"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.615" endtime="20220624 16:06:34.616"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.617" level="INFO">${nome} = Leah Bailey</msg>
<status status="PASS" starttime="20220624 16:06:34.617" endtime="20220624 16:06:34.617"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.618" level="INFO">${email} = ogross@example.org</msg>
<status status="PASS" starttime="20220624 16:06:34.617" endtime="20220624 16:06:34.618"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.618" level="INFO">${senha} = #%aE&amp;1b52S</msg>
<status status="PASS" starttime="20220624 16:06:34.618" endtime="20220624 16:06:34.618"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.618" level="INFO">&amp;{usuario} = { nome=Leah Bailey | email=ogross@example.org | password=#%aE&amp;1b52S | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.618" endtime="20220624 16:06:34.618"/>
</kw>
<msg timestamp="20220624 16:06:34.619" level="INFO">${usuario} = {'nome': 'Leah Bailey', 'email': 'ogross@example.org', 'password': '#%aE&amp;1b52S', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.617" endtime="20220624 16:06:34.619"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.619" endtime="20220624 16:06:34.619"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.628" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Leah+Bailey&amp;email=ogross%40example.org&amp;password=%23%25aE%261b52S&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.628" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4a3dd878-03e1-4cf5-9cd2-2ffa8b038636', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "TxyQcIQHgcXC6JUo"
} 
 </msg>
<msg timestamp="20220624 16:06:34.628" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.619" endtime="20220624 16:06:34.628"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.628" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.628" endtime="20220624 16:06:34.628"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.629" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'TxyQcIQHgcXC6JUo'}</msg>
<status status="PASS" starttime="20220624 16:06:34.628" endtime="20220624 16:06:34.629"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.619" endtime="20220624 16:06:34.629"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.630" endtime="20220624 16:06:34.630"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.629" endtime="20220624 16:06:34.631"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.631" endtime="20220624 16:06:34.631"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.631" endtime="20220624 16:06:34.631"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.632" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.632" endtime="20220624 16:06:34.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.632" endtime="20220624 16:06:34.633"/>
</kw>
<msg timestamp="20220624 16:06:34.633" level="INFO">${usuario} = {'nome': 'Leah Bailey', 'email': 'ogross@example.org', 'password': '#%aE&amp;1b52S', 'administrador': 'false', '_id': 'TxyQcIQHgcXC6JUo'}</msg>
<status status="PASS" starttime="20220624 16:06:34.617" endtime="20220624 16:06:34.633"/>
</kw>
<kw name="Alterar &quot;nome&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${novo_usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.634" level="INFO">${nome} = Courtney Green</msg>
<status status="PASS" starttime="20220624 16:06:34.633" endtime="20220624 16:06:34.634"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.634" level="INFO">${email} = gacosta@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.634" endtime="20220624 16:06:34.634"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.634" level="INFO">${senha} = 08*)5QUbqE</msg>
<status status="PASS" starttime="20220624 16:06:34.634" endtime="20220624 16:06:34.634"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.635" level="INFO">&amp;{usuario} = { nome=Courtney Green | email=gacosta@example.com | password=08*)5QUbqE | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.634" endtime="20220624 16:06:34.635"/>
</kw>
<msg timestamp="20220624 16:06:34.635" level="INFO">${novo_usuario} = {'nome': 'Courtney Green', 'email': 'gacosta@example.com', 'password': '08*)5QUbqE', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.633" endtime="20220624 16:06:34.635"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.635" endtime="20220624 16:06:34.636"/>
</kw>
<msg timestamp="20220624 16:06:34.636" level="INFO">${usuario} = {'nome': 'Courtney Green', 'email': 'ogross@example.org', 'password': '#%aE&amp;1b52S', 'administrador': 'false', '_id': 'TxyQcIQHgcXC6JUo'}</msg>
<status status="PASS" starttime="20220624 16:06:34.633" endtime="20220624 16:06:34.636"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="PUT" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.637" level="INFO">Removed item with key '_id' and value 'TxyQcIQHgcXC6JUo'.</msg>
<status status="PASS" starttime="20220624 16:06:34.637" endtime="20220624 16:06:34.637"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.637" endtime="20220624 16:06:34.637"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.643" level="INFO">PUT Request : url=http://localhost:3000/usuarios/TxyQcIQHgcXC6JUo 
 path_url=/usuarios/TxyQcIQHgcXC6JUo 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '92', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Courtney+Green&amp;email=ogross%40example.org&amp;password=%23%25aE%261b52S&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.643" level="INFO">PUT Response : url=http://localhost:3000/usuarios/TxyQcIQHgcXC6JUo 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cafff656-a769-4de4-bc84-6e62c65483e2', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:34.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.637" endtime="20220624 16:06:34.643"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.644" endtime="20220624 16:06:34.644"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.644" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:34.644" endtime="20220624 16:06:34.644"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.636" endtime="20220624 16:06:34.645"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.645" endtime="20220624 16:06:34.646"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.645" endtime="20220624 16:06:34.646"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.647" endtime="20220624 16:06:34.647"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.647" endtime="20220624 16:06:34.648"/>
</kw>
<tag>Atualizar_Nome_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.615" endtime="20220624 16:06:34.648"/>
</test>
<test id="s1-s2-s3-t3" name="Cenario: Atualizar Email Do Usuario" line="25">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.650" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.650" endtime="20220624 16:06:34.650"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.649" endtime="20220624 16:06:34.650"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.651" level="INFO">${nome} = Mr. Scott Martin</msg>
<status status="PASS" starttime="20220624 16:06:34.651" endtime="20220624 16:06:34.651"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.651" level="INFO">${email} = ydickerson@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.651" endtime="20220624 16:06:34.651"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.652" level="INFO">${senha} = h&amp;%u0KPxTB</msg>
<status status="PASS" starttime="20220624 16:06:34.652" endtime="20220624 16:06:34.652"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.652" level="INFO">&amp;{usuario} = { nome=Mr. Scott Martin | email=ydickerson@example.net | password=h&amp;%u0KPxTB | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.652" endtime="20220624 16:06:34.652"/>
</kw>
<msg timestamp="20220624 16:06:34.652" level="INFO">${usuario} = {'nome': 'Mr. Scott Martin', 'email': 'ydickerson@example.net', 'password': 'h&amp;%u0KPxTB', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.651" endtime="20220624 16:06:34.652"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.653" endtime="20220624 16:06:34.653"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.659" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '96', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Mr.+Scott+Martin&amp;email=ydickerson%40example.net&amp;password=h%26%25u0KPxTB&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.660" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ddc5ecdc-2413-485b-8a17-250939b6dc65', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "hBjcWJgs35kfua8W"
} 
 </msg>
<msg timestamp="20220624 16:06:34.660" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.653" endtime="20220624 16:06:34.660"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.660" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.660" endtime="20220624 16:06:34.660"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.661" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'hBjcWJgs35kfua8W'}</msg>
<status status="PASS" starttime="20220624 16:06:34.660" endtime="20220624 16:06:34.661"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.653" endtime="20220624 16:06:34.661"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.662" endtime="20220624 16:06:34.662"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.661" endtime="20220624 16:06:34.662"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.663" endtime="20220624 16:06:34.663"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.663" endtime="20220624 16:06:34.663"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.664" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.663" endtime="20220624 16:06:34.664"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.664" endtime="20220624 16:06:34.664"/>
</kw>
<msg timestamp="20220624 16:06:34.665" level="INFO">${usuario} = {'nome': 'Mr. Scott Martin', 'email': 'ydickerson@example.net', 'password': 'h&amp;%u0KPxTB', 'administrador': 'false', '_id': 'hBjcWJgs35kfua8W'}</msg>
<status status="PASS" starttime="20220624 16:06:34.650" endtime="20220624 16:06:34.665"/>
</kw>
<kw name="Alterar &quot;email&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${novo_usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.666" level="INFO">${nome} = Joseph Day</msg>
<status status="PASS" starttime="20220624 16:06:34.665" endtime="20220624 16:06:34.666"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.666" level="INFO">${email} = whiteheadrebecca@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.666" endtime="20220624 16:06:34.666"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.667" level="INFO">${senha} = _bAh82JN0#</msg>
<status status="PASS" starttime="20220624 16:06:34.666" endtime="20220624 16:06:34.667"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.667" level="INFO">&amp;{usuario} = { nome=Joseph Day | email=whiteheadrebecca@example.net | password=_bAh82JN0# | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.667" endtime="20220624 16:06:34.667"/>
</kw>
<msg timestamp="20220624 16:06:34.667" level="INFO">${novo_usuario} = {'nome': 'Joseph Day', 'email': 'whiteheadrebecca@example.net', 'password': '_bAh82JN0#', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.665" endtime="20220624 16:06:34.667"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.667" endtime="20220624 16:06:34.668"/>
</kw>
<msg timestamp="20220624 16:06:34.668" level="INFO">${usuario} = {'nome': 'Mr. Scott Martin', 'email': 'whiteheadrebecca@example.net', 'password': 'h&amp;%u0KPxTB', 'administrador': 'false', '_id': 'hBjcWJgs35kfua8W'}</msg>
<status status="PASS" starttime="20220624 16:06:34.665" endtime="20220624 16:06:34.668"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="PUT" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.670" level="INFO">Removed item with key '_id' and value 'hBjcWJgs35kfua8W'.</msg>
<status status="PASS" starttime="20220624 16:06:34.669" endtime="20220624 16:06:34.670"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.669" endtime="20220624 16:06:34.670"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.676" level="INFO">PUT Request : url=http://localhost:3000/usuarios/hBjcWJgs35kfua8W 
 path_url=/usuarios/hBjcWJgs35kfua8W 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '102', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Mr.+Scott+Martin&amp;email=whiteheadrebecca%40example.net&amp;password=h%26%25u0KPxTB&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.676" level="INFO">PUT Response : url=http://localhost:3000/usuarios/hBjcWJgs35kfua8W 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b6ffca4c-f0e2-4dbc-a96f-3d98850e4ded', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:34.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.670" endtime="20220624 16:06:34.676"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.676" endtime="20220624 16:06:34.676"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.677" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:34.677" endtime="20220624 16:06:34.677"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.669" endtime="20220624 16:06:34.677"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.678" endtime="20220624 16:06:34.679"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.677" endtime="20220624 16:06:34.679"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.679" endtime="20220624 16:06:34.680"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.679" endtime="20220624 16:06:34.680"/>
</kw>
<tag>Atualizar_Email_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.649" endtime="20220624 16:06:34.680"/>
</test>
<test id="s1-s2-s3-t4" name="Cenario: Atualizar Senha Do Usuario" line="33">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.682" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.682" endtime="20220624 16:06:34.682"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.682" endtime="20220624 16:06:34.682"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.683" level="INFO">${nome} = Gregory Diaz</msg>
<status status="PASS" starttime="20220624 16:06:34.683" endtime="20220624 16:06:34.683"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.684" level="INFO">${email} = vashley@example.org</msg>
<status status="PASS" starttime="20220624 16:06:34.683" endtime="20220624 16:06:34.684"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.684" level="INFO">${senha} = g6HJ3mpG*i</msg>
<status status="PASS" starttime="20220624 16:06:34.684" endtime="20220624 16:06:34.684"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.685" level="INFO">&amp;{usuario} = { nome=Gregory Diaz | email=vashley@example.org | password=g6HJ3mpG*i | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.684" endtime="20220624 16:06:34.685"/>
</kw>
<msg timestamp="20220624 16:06:34.685" level="INFO">${usuario} = {'nome': 'Gregory Diaz', 'email': 'vashley@example.org', 'password': 'g6HJ3mpG*i', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.683" endtime="20220624 16:06:34.685"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.685" endtime="20220624 16:06:34.686"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.692" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '87', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Gregory+Diaz&amp;email=vashley%40example.org&amp;password=g6HJ3mpG%2Ai&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.692" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7ce40295-8a9b-454e-a981-f6dd3f51dad4', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6K6UiL6sb1s8WuvR"
} 
 </msg>
<msg timestamp="20220624 16:06:34.692" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.686" endtime="20220624 16:06:34.692"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.692" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.692" endtime="20220624 16:06:34.692"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.693" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '6K6UiL6sb1s8WuvR'}</msg>
<status status="PASS" starttime="20220624 16:06:34.693" endtime="20220624 16:06:34.693"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.685" endtime="20220624 16:06:34.694"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.694" endtime="20220624 16:06:34.695"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.694" endtime="20220624 16:06:34.695"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.695" endtime="20220624 16:06:34.696"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.695" endtime="20220624 16:06:34.696"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.696" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.696" endtime="20220624 16:06:34.696"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.696" endtime="20220624 16:06:34.697"/>
</kw>
<msg timestamp="20220624 16:06:34.697" level="INFO">${usuario} = {'nome': 'Gregory Diaz', 'email': 'vashley@example.org', 'password': 'g6HJ3mpG*i', 'administrador': 'false', '_id': '6K6UiL6sb1s8WuvR'}</msg>
<status status="PASS" starttime="20220624 16:06:34.683" endtime="20220624 16:06:34.697"/>
</kw>
<kw name="Alterar &quot;password&quot; Do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar &quot;${key}&quot; Do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${novo_usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.698" level="INFO">${nome} = Natalie Miller</msg>
<status status="PASS" starttime="20220624 16:06:34.698" endtime="20220624 16:06:34.698"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.699" level="INFO">${email} = lauriethomas@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.699" endtime="20220624 16:06:34.699"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.699" level="INFO">${senha} = qmZqu0In0&amp;</msg>
<status status="PASS" starttime="20220624 16:06:34.699" endtime="20220624 16:06:34.699"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.700" level="INFO">&amp;{usuario} = { nome=Natalie Miller | email=lauriethomas@example.com | password=qmZqu0In0&amp; | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.699" endtime="20220624 16:06:34.700"/>
</kw>
<msg timestamp="20220624 16:06:34.700" level="INFO">${novo_usuario} = {'nome': 'Natalie Miller', 'email': 'lauriethomas@example.com', 'password': 'qmZqu0In0&amp;', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.698" endtime="20220624 16:06:34.700"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>${key}=${novo_usuario.${key}}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.700" endtime="20220624 16:06:34.700"/>
</kw>
<msg timestamp="20220624 16:06:34.701" level="INFO">${usuario} = {'nome': 'Gregory Diaz', 'email': 'vashley@example.org', 'password': 'qmZqu0In0&amp;', 'administrador': 'false', '_id': '6K6UiL6sb1s8WuvR'}</msg>
<status status="PASS" starttime="20220624 16:06:34.697" endtime="20220624 16:06:34.701"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="PUT" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.702" level="INFO">Removed item with key '_id' and value '6K6UiL6sb1s8WuvR'.</msg>
<status status="PASS" starttime="20220624 16:06:34.702" endtime="20220624 16:06:34.702"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.701" endtime="20220624 16:06:34.702"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.707" level="INFO">PUT Request : url=http://localhost:3000/usuarios/6K6UiL6sb1s8WuvR 
 path_url=/usuarios/6K6UiL6sb1s8WuvR 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '87', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Gregory+Diaz&amp;email=vashley%40example.org&amp;password=qmZqu0In0%26&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.707" level="INFO">PUT Response : url=http://localhost:3000/usuarios/6K6UiL6sb1s8WuvR 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a414e6a2-c12d-42dc-a3d4-38b82da19b6a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:34.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.702" endtime="20220624 16:06:34.707"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.707" endtime="20220624 16:06:34.708"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.708" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:34.708" endtime="20220624 16:06:34.708"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.701" endtime="20220624 16:06:34.709"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.709" endtime="20220624 16:06:34.710"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.709" endtime="20220624 16:06:34.710"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.711" endtime="20220624 16:06:34.711"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.711" endtime="20220624 16:06:34.711"/>
</kw>
<tag>Atualizar_Senha_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.681" endtime="20220624 16:06:34.712"/>
</test>
<test id="s1-s2-s3-t5" name="Cenario: Atualizar Privelio Do Usuario" line="41">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.714" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.714" endtime="20220624 16:06:34.714"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.714" endtime="20220624 16:06:34.714"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.715" level="INFO">${nome} = Anne Johnston</msg>
<status status="PASS" starttime="20220624 16:06:34.715" endtime="20220624 16:06:34.715"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.716" level="INFO">${email} = bwilliams@example.net</msg>
<status status="PASS" starttime="20220624 16:06:34.716" endtime="20220624 16:06:34.716"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.716" level="INFO">${senha} = &amp;x8Verfx5y</msg>
<status status="PASS" starttime="20220624 16:06:34.716" endtime="20220624 16:06:34.716"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.717" level="INFO">&amp;{usuario} = { nome=Anne Johnston | email=bwilliams@example.net | password=&amp;x8Verfx5y | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.716" endtime="20220624 16:06:34.717"/>
</kw>
<msg timestamp="20220624 16:06:34.717" level="INFO">${usuario} = {'nome': 'Anne Johnston', 'email': 'bwilliams@example.net', 'password': '&amp;x8Verfx5y', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.715" endtime="20220624 16:06:34.717"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.717" endtime="20220624 16:06:34.717"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.723" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Anne+Johnston&amp;email=bwilliams%40example.net&amp;password=%26x8Verfx5y&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.723" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '28e3e95b-cc25-456a-b810-b9355e2f8992', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "d03PdUCa1bvb8AWA"
} 
 </msg>
<msg timestamp="20220624 16:06:34.723" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.717" endtime="20220624 16:06:34.723"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.724" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.724" endtime="20220624 16:06:34.724"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.725" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'd03PdUCa1bvb8AWA'}</msg>
<status status="PASS" starttime="20220624 16:06:34.724" endtime="20220624 16:06:34.725"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.717" endtime="20220624 16:06:34.725"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.725" endtime="20220624 16:06:34.726"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.725" endtime="20220624 16:06:34.726"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.727" endtime="20220624 16:06:34.727"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.726" endtime="20220624 16:06:34.727"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.728" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.727" endtime="20220624 16:06:34.728"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.728" endtime="20220624 16:06:34.729"/>
</kw>
<msg timestamp="20220624 16:06:34.729" level="INFO">${usuario} = {'nome': 'Anne Johnston', 'email': 'bwilliams@example.net', 'password': '&amp;x8Verfx5y', 'administrador': 'false', '_id': 'd03PdUCa1bvb8AWA'}</msg>
<status status="PASS" starttime="20220624 16:06:34.715" endtime="20220624 16:06:34.729"/>
</kw>
<kw name="Alterar Privilegio do Usuario &quot;${usuario}&quot;" library="usuarios_keywords" sourcename="Alterar Privilegio do Usuario &quot;${usuario}&quot;">
<var>${usuario}</var>
<kw name="Convert To Title Case" library="String">
<var>${administrador}</var>
<arg>${usuario['administrador']}</arg>
<doc>Converts string to title case.</doc>
<msg timestamp="20220624 16:06:34.730" level="INFO">${administrador} = False</msg>
<status status="PASS" starttime="20220624 16:06:34.730" endtime="20220624 16:06:34.730"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${administrador}</var>
<arg>${administrador}== False</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:34.730" level="INFO">${administrador} = True</msg>
<status status="PASS" starttime="20220624 16:06:34.730" endtime="20220624 16:06:34.731"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${administrador}</var>
<arg>${administrador}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20220624 16:06:34.731" level="INFO">${administrador} = True</msg>
<status status="PASS" starttime="20220624 16:06:34.731" endtime="20220624 16:06:34.731"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${administrador}</var>
<arg>${administrador}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20220624 16:06:34.731" level="INFO">${administrador} = true</msg>
<status status="PASS" starttime="20220624 16:06:34.731" endtime="20220624 16:06:34.731"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>administrador=${administrador}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.731" endtime="20220624 16:06:34.731"/>
</kw>
<msg timestamp="20220624 16:06:34.732" level="INFO">${usuario} = {'nome': 'Anne Johnston', 'email': 'bwilliams@example.net', 'password': '&amp;x8Verfx5y', 'administrador': 'true', '_id': 'd03PdUCa1bvb8AWA'}</msg>
<status status="PASS" starttime="20220624 16:06:34.729" endtime="20220624 16:06:34.732"/>
</kw>
<kw name="PUT Endpoint &quot;/usuarios/${usuario['_id']}&quot; Com Body &quot;${usuario}&quot;" library="PUT" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.733" level="INFO">Removed item with key '_id' and value 'd03PdUCa1bvb8AWA'.</msg>
<status status="PASS" starttime="20220624 16:06:34.733" endtime="20220624 16:06:34.733"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.732" endtime="20220624 16:06:34.733"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.738" level="INFO">PUT Request : url=http://localhost:3000/usuarios/d03PdUCa1bvb8AWA 
 path_url=/usuarios/d03PdUCa1bvb8AWA 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Anne+Johnston&amp;email=bwilliams%40example.net&amp;password=%26x8Verfx5y&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:34.738" level="INFO">PUT Response : url=http://localhost:3000/usuarios/d03PdUCa1bvb8AWA 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '09da44a8-fa77-42d1-af21-53809124c9ed', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:34.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.733" endtime="20220624 16:06:34.738"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.738" endtime="20220624 16:06:34.740"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.740" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:34.740" endtime="20220624 16:06:34.740"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.732" endtime="20220624 16:06:34.740"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.740" endtime="20220624 16:06:34.741"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.740" endtime="20220624 16:06:34.741"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.742" endtime="20220624 16:06:34.742"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.741" endtime="20220624 16:06:34.742"/>
</kw>
<tag>Atualizar_Privelio_Usuario</tag>
<tag>PUT</tag>
<tag>PUT_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.713" endtime="20220624 16:06:34.744"/>
</test>
<doc>Arquivo De Requisições Do Tipo PUT DA API Do EndPoint Usuarios</doc>
<status status="PASS" starttime="20220624 16:06:34.585" endtime="20220624 16:06:34.744"/>
</suite>
<suite id="s1-s2-s4" name="04 usuarios DELETE" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\02_usuarios\04_usuarios_DELETE.robot">
<test id="s1-s2-s4-t1" name="Cenario: Deletar Usuario Cadastrado" line="9">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.758" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.758" endtime="20220624 16:06:34.758"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.758" endtime="20220624 16:06:34.758"/>
</kw>
<kw name="Cadastrar Novo Usuario Administrador &quot;false&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.759" level="INFO">${nome} = Kenneth Phelps</msg>
<status status="PASS" starttime="20220624 16:06:34.758" endtime="20220624 16:06:34.759"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.759" level="INFO">${email} = jspencer@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.759" endtime="20220624 16:06:34.759"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.759" level="INFO">${senha} = 87%RAhkF!p</msg>
<status status="PASS" starttime="20220624 16:06:34.759" endtime="20220624 16:06:34.759"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.760" level="INFO">&amp;{usuario} = { nome=Kenneth Phelps | email=jspencer@example.com | password=87%RAhkF!p | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:34.760" endtime="20220624 16:06:34.760"/>
</kw>
<msg timestamp="20220624 16:06:34.760" level="INFO">${usuario} = {'nome': 'Kenneth Phelps', 'email': 'jspencer@example.com', 'password': '87%RAhkF!p', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:34.758" endtime="20220624 16:06:34.760"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.760" endtime="20220624 16:06:34.761"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.767" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '92', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Kenneth+Phelps&amp;email=jspencer%40example.com&amp;password=87%25RAhkF%21p&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:34.767" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f9e4ccf4-c3c6-424c-809c-1c7c93ecb8c0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "4T0q9I8Dki5Xs3n9"
} 
 </msg>
<msg timestamp="20220624 16:06:34.767" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.761" endtime="20220624 16:06:34.767"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.768" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.767" endtime="20220624 16:06:34.768"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.769" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '4T0q9I8Dki5Xs3n9'}</msg>
<status status="PASS" starttime="20220624 16:06:34.768" endtime="20220624 16:06:34.769"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.760" endtime="20220624 16:06:34.769"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.769" endtime="20220624 16:06:34.770"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.769" endtime="20220624 16:06:34.770"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.770" endtime="20220624 16:06:34.771"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.770" endtime="20220624 16:06:34.771"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.771" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.771" endtime="20220624 16:06:34.771"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.771" endtime="20220624 16:06:34.772"/>
</kw>
<msg timestamp="20220624 16:06:34.772" level="INFO">${usuario} = {'nome': 'Kenneth Phelps', 'email': 'jspencer@example.com', 'password': '87%RAhkF!p', 'administrador': 'false', '_id': '4T0q9I8Dki5Xs3n9'}</msg>
<status status="PASS" starttime="20220624 16:06:34.758" endtime="20220624 16:06:34.772"/>
</kw>
<kw name="DELETE Endpoint &quot;/usuarios/${usuario['_id']}&quot;" library="DELETE" sourcename="DELETE Endpoint &quot;${endpoint}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.778" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/4T0q9I8Dki5Xs3n9 
 path_url=/usuarios/4T0q9I8Dki5Xs3n9 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.778" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/4T0q9I8Dki5Xs3n9 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2ef63d5e-aa81-4044-9ef3-1f5d084b8f03', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:34.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.773" endtime="20220624 16:06:34.779"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.779" endtime="20220624 16:06:34.779"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.780" level="INFO">${response_body} = {'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:34.779" endtime="20220624 16:06:34.780"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.772" endtime="20220624 16:06:34.780"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.780" endtime="20220624 16:06:34.781"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.780" endtime="20220624 16:06:34.781"/>
</kw>
<kw name="Validar Mensagem &quot;Registro excluído com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.782" endtime="20220624 16:06:34.782"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.781" endtime="20220624 16:06:34.782"/>
</kw>
<kw name="Validar Se O Usuario Foi Removido &quot;${usuario['_id']}&quot;" library="usuarios_keywords" sourcename="Validar Se O Usuario Foi Removido &quot;${usuario['_id']}&quot;">
<kw name="GET Endpoint &quot;/usuarios/${usuario['_id']}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.786" level="INFO">GET Request : url=http://localhost:3000/usuarios/4T0q9I8Dki5Xs3n9 
 path_url=/usuarios/4T0q9I8Dki5Xs3n9 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.786" level="INFO">GET Response : url=http://localhost:3000/usuarios/4T0q9I8Dki5Xs3n9 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cc56e849-911d-4f4f-9670-0751d8c60db8', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg timestamp="20220624 16:06:34.786" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.783" endtime="20220624 16:06:34.786"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.787" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.786" endtime="20220624 16:06:34.787"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.787" level="INFO">${response_body} = {'message': 'Usuário não encontrado'}</msg>
<status status="PASS" starttime="20220624 16:06:34.787" endtime="20220624 16:06:34.787"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.783" endtime="20220624 16:06:34.787"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>Usuário não encontrado</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.787" endtime="20220624 16:06:34.788"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.783" endtime="20220624 16:06:34.788"/>
</kw>
<tag>Deletar_Usuario_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.756" endtime="20220624 16:06:34.788"/>
</test>
<test id="s1-s2-s4-t2" name="Cenario: Deletar Usuario Nao Cadastrado" line="18">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.791" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.790" endtime="20220624 16:06:34.791"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.790" endtime="20220624 16:06:34.791"/>
</kw>
<kw name="DELETE Endpoint &quot;/usuarios/${usuario_nao_cadastrado}&quot;" library="DELETE" sourcename="DELETE Endpoint &quot;${endpoint}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.795" level="INFO">DELETE Request : url=http://localhost:3000/usuarios/NaoExisto 
 path_url=/usuarios/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.795" level="INFO">DELETE Response : url=http://localhost:3000/usuarios/NaoExisto 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd1e666ea-66fc-4445-81b6-8b043bd93167', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20220624 16:06:34.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.792" endtime="20220624 16:06:34.795"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.795" endtime="20220624 16:06:34.796"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.796" level="INFO">${response_body} = {'message': 'Nenhum registro excluído'}</msg>
<status status="PASS" starttime="20220624 16:06:34.796" endtime="20220624 16:06:34.797"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.791" endtime="20220624 16:06:34.797"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.797" endtime="20220624 16:06:34.798"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.797" endtime="20220624 16:06:34.798"/>
</kw>
<kw name="Validar Mensagem &quot;Nenhum registro excluído&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.798" endtime="20220624 16:06:34.799"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.798" endtime="20220624 16:06:34.799"/>
</kw>
<tag>Deletar_Usuario_Nao_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Usuarios</tag>
<tag>Usuarios</tag>
<status status="PASS" starttime="20220624 16:06:34.790" endtime="20220624 16:06:34.800"/>
</test>
<doc>Arquivo De Requisições Do Tipo DELETE DA API Do EndPoint Usuarios</doc>
<status status="PASS" starttime="20220624 16:06:34.745" endtime="20220624 16:06:34.801"/>
</suite>
<status status="PASS" starttime="20220624 16:06:34.332" endtime="20220624 16:06:34.803"/>
</suite>
<suite id="s1-s3" name="03 Produtos" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\03_produtos">
<suite id="s1-s3-s1" name="01 produtos GET" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\03_produtos\01_produtos_GET.robot">
<test id="s1-s3-s1-t1" name="Cenario: Listar Todos Os Produtos Cadastrados" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.819" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.819" endtime="20220624 16:06:34.819"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.818" endtime="20220624 16:06:34.819"/>
</kw>
<kw name="Cadastar Novo Produto" library="produtos_keywords">
<kw name="Pegar Produto Nao Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${lista_de_produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.824" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.824" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fdb389de-bfa1-4611-9474-cd4ade6d6186', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '6053', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 23,
    "produtos": [
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 998,
            "preco": 39,
            "_id": "nCwNCrDsvlkZa8Zw"
        },
        {
            "nome": "Ergo Screen E-II",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm",
            "quantidade": 998,
            "preco": 285,
            "_id": "rypUQQwSXjyk3c63"
        },
        {
            "nome": "Cerdik Phone 7",
            "descricao": "7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of active use), white or black",
            "quantidade": 998,
            "preco": 549,
            "_id": "sBU6QOj9dSzUd9LE"
        },
        {
            "nome": "Universal card reader",
            "descricao": "Universal card reader",
            "quantidade": 998,
            "preco": 14,
            "_id": "vF7r7dBj4AgssVDy"
        }
    ]
} 
 </msg>
<msg timestamp="20220624 16:06:34.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.820" endtime="20220624 16:06:34.825"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.825" endtime="20220624 16:06:34.825"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.826" level="INFO">${response_body} = {'quantidade': 23, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:34.825" endtime="20220624 16:06:34.826"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.820" endtime="20220624 16:06:34.826"/>
</kw>
<msg timestamp="20220624 16:06:34.827" level="INFO">${lista_de_produtos} = {'quantidade': 23, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:34.820" endtime="20220624 16:06:34.827"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:34.827" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:34.828" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:34.827" endtime="20220624 16:06:34.828"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:34.829" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:34.828" endtime="20220624 16:06:34.829"/>
</kw>
<msg timestamp="20220624 16:06:34.829" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:34.827" endtime="20220624 16:06:34.829"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_itens}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:34.830" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:34.830" level="INFO">${quantidade_de_itens} = 122</msg>
<status status="PASS" starttime="20220624 16:06:34.829" endtime="20220624 16:06:34.830"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_de_itens}</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.831" endtime="20220624 16:06:34.831"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.831" endtime="20220624 16:06:34.831"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.831" endtime="20220624 16:06:34.831"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.830" endtime="20220624 16:06:34.831"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.830" endtime="20220624 16:06:34.831"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.832" endtime="20220624 16:06:34.832"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.832" endtime="20220624 16:06:34.832"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.832" endtime="20220624 16:06:34.832"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.831" endtime="20220624 16:06:34.832"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.831" endtime="20220624 16:06:34.832"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.833" endtime="20220624 16:06:34.833"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.833" endtime="20220624 16:06:34.833"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.833" endtime="20220624 16:06:34.833"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.832" endtime="20220624 16:06:34.833"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.832" endtime="20220624 16:06:34.833"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.834" endtime="20220624 16:06:34.834"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.834" endtime="20220624 16:06:34.834"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.834" endtime="20220624 16:06:34.834"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.833" endtime="20220624 16:06:34.834"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.833" endtime="20220624 16:06:34.834"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.836" level="INFO">${produto} = {'nome': 'USB Stick', 'descricao': 'USB 2.0 High-Speed 64 GB', 'quantidade': 999, 'preco': 35}</msg>
<status status="PASS" starttime="20220624 16:06:34.835" endtime="20220624 16:06:34.836"/>
</kw>
<break>
<status status="PASS" starttime="20220624 16:06:34.836" endtime="20220624 16:06:34.836"/>
</break>
<status status="PASS" starttime="20220624 16:06:34.835" endtime="20220624 16:06:34.836"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.834" endtime="20220624 16:06:34.836"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.834" endtime="20220624 16:06:34.836"/>
</iter>
<status status="PASS" starttime="20220624 16:06:34.830" endtime="20220624 16:06:34.836"/>
</for>
<msg timestamp="20220624 16:06:34.836" level="INFO">${produto} = {'nome': 'USB Stick', 'descricao': 'USB 2.0 High-Speed 64 GB', 'quantidade': 999, 'preco': 35}</msg>
<status status="PASS" starttime="20220624 16:06:34.820" endtime="20220624 16:06:34.836"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.838" level="INFO">${nome} = Lauren Brooks</msg>
<status status="PASS" starttime="20220624 16:06:34.837" endtime="20220624 16:06:34.838"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.838" level="INFO">${email} = hubbardadam@example.com</msg>
<status status="PASS" starttime="20220624 16:06:34.838" endtime="20220624 16:06:34.838"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.838" level="INFO">${senha} = $_kb9SE^*w</msg>
<status status="PASS" starttime="20220624 16:06:34.838" endtime="20220624 16:06:34.838"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.839" level="INFO">&amp;{usuario} = { nome=Lauren Brooks | email=hubbardadam@example.com | password=$_kb9SE^*w | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:34.838" endtime="20220624 16:06:34.839"/>
</kw>
<msg timestamp="20220624 16:06:34.839" level="INFO">${usuario} = {'nome': 'Lauren Brooks', 'email': 'hubbardadam@example.com', 'password': '$_kb9SE^*w', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:34.837" endtime="20220624 16:06:34.839"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.839" endtime="20220624 16:06:34.840"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.846" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '95', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Lauren+Brooks&amp;email=hubbardadam%40example.com&amp;password=%24_kb9SE%5E%2Aw&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:34.846" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f99a221e-6e98-4451-837e-269592b7ccb7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "bu7UpuWWTHnOyJzi"
} 
 </msg>
<msg timestamp="20220624 16:06:34.846" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.840" endtime="20220624 16:06:34.846"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.846" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.846" endtime="20220624 16:06:34.846"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.847" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'bu7UpuWWTHnOyJzi'}</msg>
<status status="PASS" starttime="20220624 16:06:34.846" endtime="20220624 16:06:34.847"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.839" endtime="20220624 16:06:34.847"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.847" endtime="20220624 16:06:34.848"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.847" endtime="20220624 16:06:34.848"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.849" endtime="20220624 16:06:34.849"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.848" endtime="20220624 16:06:34.849"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.850" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.849" endtime="20220624 16:06:34.850"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.850" endtime="20220624 16:06:34.850"/>
</kw>
<msg timestamp="20220624 16:06:34.850" level="INFO">${usuario_valido} = {'nome': 'Lauren Brooks', 'email': 'hubbardadam@example.com', 'password': '$_kb9SE^*w', 'administrador': 'true', '_id': 'bu7UpuWWTHnOyJzi'}</msg>
<status status="PASS" starttime="20220624 16:06:34.837" endtime="20220624 16:06:34.850"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.851" level="INFO">Removed item with key 'nome' and value 'Lauren Brooks'.</msg>
<msg timestamp="20220624 16:06:34.851" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:34.851" level="INFO">Removed item with key '_id' and value 'bu7UpuWWTHnOyJzi'.</msg>
<status status="PASS" starttime="20220624 16:06:34.851" endtime="20220624 16:06:34.851"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.851" endtime="20220624 16:06:34.851"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.854" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '57', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=hubbardadam%40example.com&amp;password=%24_kb9SE%5E%2Aw 
 </msg>
<msg timestamp="20220624 16:06:34.855" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bd6dd597-2361-4724-9622-4da666fd9380', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '285', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1YmJhcmRhZGFtQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIkX2tiOVNFXip3IiwiaWF0IjoxNjU2MDk3NTk0LCJleHAiOjE2NTYwOTgxOTR9.CAZzQv0nVAJ5p0KHscJEAVBio2WAbfBfN2j1gHpaDxE"
} 
 </msg>
<msg timestamp="20220624 16:06:34.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.852" endtime="20220624 16:06:34.855"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.855" endtime="20220624 16:06:34.855"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.856" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1YmJhcmRhZGFtQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIkX2tiOVNFXip3IiwiaWF0IjoxNjU2MDk...</msg>
<status status="PASS" starttime="20220624 16:06:34.855" endtime="20220624 16:06:34.856"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.851" endtime="20220624 16:06:34.856"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.856" endtime="20220624 16:06:34.857"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.856" endtime="20220624 16:06:34.857"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.857" endtime="20220624 16:06:34.858"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.857" endtime="20220624 16:06:34.858"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.859" level="INFO">Length is 212</msg>
<status status="PASS" starttime="20220624 16:06:34.858" endtime="20220624 16:06:34.859"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.858" endtime="20220624 16:06:34.859"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.859" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1YmJhcmRhZGFtQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIkX2tiOVNFXip3IiwiaWF0IjoxNjU2MDk3NTk0LCJleHAiOjE2NTYwOTgxOTR9.CAZzQv0nVAJ5p0K...</msg>
<status status="PASS" starttime="20220624 16:06:34.859" endtime="20220624 16:06:34.859"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.860" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1YmJhcmRhZGFtQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIkX2tiOVNFXip3IiwiaWF0IjoxNjU2MDk3NTk0LCJleHAiOjE2NTYwOTgxOTR9.CAZzQv0nVAJ5...</msg>
<status status="PASS" starttime="20220624 16:06:34.859" endtime="20220624 16:06:34.860"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.836" endtime="20220624 16:06:34.860"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.860" endtime="20220624 16:06:34.860"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.871" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1YmJhcmRhZGFtQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIkX2tiOVNFXip3IiwiaWF0IjoxNjU2MDk3NTk0LCJleHAiOjE2NTYwOTgxOTR9.CAZzQv0nVAJ5p0KHscJEAVBio2WAbfBfN2j1gHpaDxE', 'Content-Length': '73', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=USB+Stick&amp;descricao=USB+2.0+High-Speed+64+GB&amp;quantidade=999&amp;preco=35 
 </msg>
<msg timestamp="20220624 16:06:34.871" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fc9fb076-91ce-4f24-9b0c-78261f4347ee', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Dx9dkgTndSJTuL1W"
} 
 </msg>
<msg timestamp="20220624 16:06:34.871" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.860" endtime="20220624 16:06:34.871"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.871" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.871" endtime="20220624 16:06:34.871"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.872" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'Dx9dkgTndSJTuL1W'}</msg>
<status status="PASS" starttime="20220624 16:06:34.871" endtime="20220624 16:06:34.872"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.860" endtime="20220624 16:06:34.872"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.872" endtime="20220624 16:06:34.873"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.872" endtime="20220624 16:06:34.873"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.873" endtime="20220624 16:06:34.874"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.873" endtime="20220624 16:06:34.874"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.875" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.875" endtime="20220624 16:06:34.875"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.874" endtime="20220624 16:06:34.875"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.819" endtime="20220624 16:06:34.875"/>
</kw>
<kw name="Get Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.879" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.879" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'eec476f4-0d87-4530-aeea-813b844fb46e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '6254', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 24,
    "produtos": [
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 998,
            "preco": 39,
            "_id": "nCwNCrDsvlkZa8Zw"
        },
        {
            "nome": "Ergo Screen E-II",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm",
            "quantidade": 998,
            "preco": 285,
            "_id": "rypUQQwSXjyk3c63"
        },
        {
            "nome": "Cerdik Phone 7",
            "descricao": "7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of active use), white or black",
            "quantidade": 998,
            "preco": 549,
            "_id": "sBU6QOj9dSzUd9LE"
        },
        {
            "nome": "Universal card reader",
            "descricao": "Universal card reader",
            "quantidade": 998,
            "preco": 14,
            "_id": "vF7r7dBj4AgssVDy"
        }
    ]
} 
 </msg>
<msg timestamp="20220624 16:06:34.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.876" endtime="20220624 16:06:34.879"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.879" endtime="20220624 16:06:34.880"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.880" level="INFO">${response_body} = {'quantidade': 24, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:34.880" endtime="20220624 16:06:34.880"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.876" endtime="20220624 16:06:34.880"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.881" endtime="20220624 16:06:34.882"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.881" endtime="20220624 16:06:34.882"/>
</kw>
<kw name="Validar Quantidade De Produtos &gt; 0" library="resource" sourcename="Validar Quantidade De ${item} ${operador} ${quantidade}">
<kw name="Should Be True" library="BuiltIn">
<arg>${response_body['quantidade']} ${operador} ${quantidade}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.883" endtime="20220624 16:06:34.883"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.882" endtime="20220624 16:06:34.883"/>
</kw>
<tag>Buscar_Todos_Produtos</tag>
<tag>GET</tag>
<tag>GET_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:34.818" endtime="20220624 16:06:34.884"/>
</test>
<test id="s1-s3-s1-t2" name="Cenario: Buscar Produto Cadastrado" line="17">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.886" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.885" endtime="20220624 16:06:34.886"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.885" endtime="20220624 16:06:34.886"/>
</kw>
<kw name="Cadastar Novo Produto" library="produtos_keywords">
<kw name="Pegar Produto Nao Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${lista_de_produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.890" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.890" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0edc24e2-1dbe-4fe1-889e-062ea1deeefd', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '6254', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 24,
    "produtos": [
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 998,
            "preco": 39,
            "_id": "nCwNCrDsvlkZa8Zw"
        },
        {
            "nome": "Ergo Screen E-II",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm",
            "quantidade": 998,
            "preco": 285,
            "_id": "rypUQQwSXjyk3c63"
        },
        {
            "nome": "Cerdik Phone 7",
            "descricao": "7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of active use), white or black",
            "quantidade": 998,
            "preco": 549,
            "_id": "sBU6QOj9dSzUd9LE"
        },
        {
            "nome": "Universal card reader",
            "descricao": "Universal card reader",
            "quantidade": 998,
            "preco": 14,
            "_id": "vF7r7dBj4AgssVDy"
        }
    ]
} 
 </msg>
<msg timestamp="20220624 16:06:34.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.887" endtime="20220624 16:06:34.891"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.891" endtime="20220624 16:06:34.891"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.892" level="INFO">${response_body} = {'quantidade': 24, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:34.891" endtime="20220624 16:06:34.892"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.887" endtime="20220624 16:06:34.892"/>
</kw>
<msg timestamp="20220624 16:06:34.893" level="INFO">${lista_de_produtos} = {'quantidade': 24, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:34.886" endtime="20220624 16:06:34.893"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:34.893" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:34.894" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:34.893" endtime="20220624 16:06:34.894"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:34.895" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:34.894" endtime="20220624 16:06:34.895"/>
</kw>
<msg timestamp="20220624 16:06:34.895" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:34.893" endtime="20220624 16:06:34.895"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_itens}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:34.896" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:34.896" level="INFO">${quantidade_de_itens} = 122</msg>
<status status="PASS" starttime="20220624 16:06:34.895" endtime="20220624 16:06:34.896"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_de_itens}</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.897" endtime="20220624 16:06:34.897"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.897" endtime="20220624 16:06:34.897"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.897" endtime="20220624 16:06:34.897"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.896" endtime="20220624 16:06:34.897"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.896" endtime="20220624 16:06:34.897"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.898" endtime="20220624 16:06:34.898"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.898" endtime="20220624 16:06:34.898"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.898" endtime="20220624 16:06:34.898"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.897" endtime="20220624 16:06:34.898"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.897" endtime="20220624 16:06:34.898"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.900" endtime="20220624 16:06:34.900"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.900" endtime="20220624 16:06:34.900"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.900" endtime="20220624 16:06:34.900"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.898" endtime="20220624 16:06:34.900"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.898" endtime="20220624 16:06:34.900"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.902" endtime="20220624 16:06:34.902"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.902" endtime="20220624 16:06:34.902"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.901" endtime="20220624 16:06:34.902"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.900" endtime="20220624 16:06:34.902"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.900" endtime="20220624 16:06:34.902"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.903" endtime="20220624 16:06:34.904"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.904" endtime="20220624 16:06:34.904"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.903" endtime="20220624 16:06:34.904"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.902" endtime="20220624 16:06:34.904"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.902" endtime="20220624 16:06:34.904"/>
</iter>
<iter>
<var name="${i}">5</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.905" endtime="20220624 16:06:34.905"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.905" endtime="20220624 16:06:34.905"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.905" endtime="20220624 16:06:34.906"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.904" endtime="20220624 16:06:34.906"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.904" endtime="20220624 16:06:34.906"/>
</iter>
<iter>
<var name="${i}">6</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.907" endtime="20220624 16:06:34.907"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.907" endtime="20220624 16:06:34.908"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.907" endtime="20220624 16:06:34.908"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.906" endtime="20220624 16:06:34.908"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.906" endtime="20220624 16:06:34.908"/>
</iter>
<iter>
<var name="${i}">7</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.909" endtime="20220624 16:06:34.909"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.909" endtime="20220624 16:06:34.909"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.909" endtime="20220624 16:06:34.910"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.908" endtime="20220624 16:06:34.910"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.908" endtime="20220624 16:06:34.910"/>
</iter>
<iter>
<var name="${i}">8</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.911" endtime="20220624 16:06:34.911"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.911" endtime="20220624 16:06:34.911"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.911" endtime="20220624 16:06:34.911"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.910" endtime="20220624 16:06:34.912"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.910" endtime="20220624 16:06:34.912"/>
</iter>
<iter>
<var name="${i}">9</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.913" endtime="20220624 16:06:34.913"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.913" endtime="20220624 16:06:34.913"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.913" endtime="20220624 16:06:34.913"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.912" endtime="20220624 16:06:34.913"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.912" endtime="20220624 16:06:34.913"/>
</iter>
<iter>
<var name="${i}">10</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.915" endtime="20220624 16:06:34.915"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.915" endtime="20220624 16:06:34.915"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.915" endtime="20220624 16:06:34.915"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.914" endtime="20220624 16:06:34.915"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.914" endtime="20220624 16:06:34.915"/>
</iter>
<iter>
<var name="${i}">11</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.916" endtime="20220624 16:06:34.916"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.916" endtime="20220624 16:06:34.916"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.916" endtime="20220624 16:06:34.916"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.915" endtime="20220624 16:06:34.916"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.915" endtime="20220624 16:06:34.916"/>
</iter>
<iter>
<var name="${i}">12</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.917" endtime="20220624 16:06:34.917"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.917" endtime="20220624 16:06:34.917"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.917" endtime="20220624 16:06:34.917"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.916" endtime="20220624 16:06:34.917"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.916" endtime="20220624 16:06:34.917"/>
</iter>
<iter>
<var name="${i}">13</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.918" endtime="20220624 16:06:34.918"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.918" endtime="20220624 16:06:34.918"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.918" endtime="20220624 16:06:34.918"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.917" endtime="20220624 16:06:34.918"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.917" endtime="20220624 16:06:34.918"/>
</iter>
<iter>
<var name="${i}">14</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.919" endtime="20220624 16:06:34.919"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.919" endtime="20220624 16:06:34.919"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.919" endtime="20220624 16:06:34.919"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.918" endtime="20220624 16:06:34.919"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.918" endtime="20220624 16:06:34.919"/>
</iter>
<iter>
<var name="${i}">15</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.920" endtime="20220624 16:06:34.920"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.920" endtime="20220624 16:06:34.920"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.920" endtime="20220624 16:06:34.920"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.919" endtime="20220624 16:06:34.920"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.919" endtime="20220624 16:06:34.920"/>
</iter>
<iter>
<var name="${i}">16</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.921" endtime="20220624 16:06:34.921"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.921" endtime="20220624 16:06:34.921"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.921" endtime="20220624 16:06:34.921"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.920" endtime="20220624 16:06:34.921"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.920" endtime="20220624 16:06:34.921"/>
</iter>
<iter>
<var name="${i}">17</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.922" endtime="20220624 16:06:34.922"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.922" endtime="20220624 16:06:34.922"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.922" endtime="20220624 16:06:34.922"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.921" endtime="20220624 16:06:34.922"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.921" endtime="20220624 16:06:34.922"/>
</iter>
<iter>
<var name="${i}">18</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.923" endtime="20220624 16:06:34.923"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.923" endtime="20220624 16:06:34.923"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.923" endtime="20220624 16:06:34.923"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.922" endtime="20220624 16:06:34.923"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.922" endtime="20220624 16:06:34.923"/>
</iter>
<iter>
<var name="${i}">19</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.924" endtime="20220624 16:06:34.924"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.924" endtime="20220624 16:06:34.924"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.924" endtime="20220624 16:06:34.924"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.923" endtime="20220624 16:06:34.924"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.923" endtime="20220624 16:06:34.924"/>
</iter>
<iter>
<var name="${i}">20</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.925" endtime="20220624 16:06:34.925"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.925" endtime="20220624 16:06:34.925"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.925" endtime="20220624 16:06:34.925"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.924" endtime="20220624 16:06:34.925"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.924" endtime="20220624 16:06:34.925"/>
</iter>
<iter>
<var name="${i}">21</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.926" endtime="20220624 16:06:34.926"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.926" endtime="20220624 16:06:34.926"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.926" endtime="20220624 16:06:34.926"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.925" endtime="20220624 16:06:34.926"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.925" endtime="20220624 16:06:34.926"/>
</iter>
<iter>
<var name="${i}">22</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.927" endtime="20220624 16:06:34.927"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.927" endtime="20220624 16:06:34.927"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.927" endtime="20220624 16:06:34.927"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.926" endtime="20220624 16:06:34.927"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.926" endtime="20220624 16:06:34.927"/>
</iter>
<iter>
<var name="${i}">23</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:34.928" endtime="20220624 16:06:34.928"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:34.928" endtime="20220624 16:06:34.928"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:34.928" endtime="20220624 16:06:34.928"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.927" endtime="20220624 16:06:34.928"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.927" endtime="20220624 16:06:34.928"/>
</iter>
<iter>
<var name="${i}">24</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.930" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 999, 'preco': 299}</msg>
<status status="PASS" starttime="20220624 16:06:34.929" endtime="20220624 16:06:34.930"/>
</kw>
<break>
<status status="PASS" starttime="20220624 16:06:34.930" endtime="20220624 16:06:34.930"/>
</break>
<status status="PASS" starttime="20220624 16:06:34.929" endtime="20220624 16:06:34.930"/>
</branch>
<status status="PASS" starttime="20220624 16:06:34.928" endtime="20220624 16:06:34.930"/>
</if>
<status status="PASS" starttime="20220624 16:06:34.928" endtime="20220624 16:06:34.930"/>
</iter>
<status status="PASS" starttime="20220624 16:06:34.896" endtime="20220624 16:06:34.930"/>
</for>
<msg timestamp="20220624 16:06:34.930" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 999, 'preco': 299}</msg>
<status status="PASS" starttime="20220624 16:06:34.886" endtime="20220624 16:06:34.930"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:34.932" level="INFO">${nome} = Bryan Knapp</msg>
<status status="PASS" starttime="20220624 16:06:34.931" endtime="20220624 16:06:34.932"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:34.932" level="INFO">${email} = kmoses@example.org</msg>
<status status="PASS" starttime="20220624 16:06:34.932" endtime="20220624 16:06:34.932"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:34.932" level="INFO">${senha} = +5Adc7!ue3</msg>
<status status="PASS" starttime="20220624 16:06:34.932" endtime="20220624 16:06:34.932"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.933" level="INFO">&amp;{usuario} = { nome=Bryan Knapp | email=kmoses@example.org | password=+5Adc7!ue3 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:34.932" endtime="20220624 16:06:34.933"/>
</kw>
<msg timestamp="20220624 16:06:34.933" level="INFO">${usuario} = {'nome': 'Bryan Knapp', 'email': 'kmoses@example.org', 'password': '+5Adc7!ue3', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:34.931" endtime="20220624 16:06:34.933"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.933" endtime="20220624 16:06:34.934"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.938" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '86', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Bryan+Knapp&amp;email=kmoses%40example.org&amp;password=%2B5Adc7%21ue3&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:34.938" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '69b066a3-2615-4d03-af6e-d2b7e0aa852b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "R3DrYvazck89DUFw"
} 
 </msg>
<msg timestamp="20220624 16:06:34.938" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.934" endtime="20220624 16:06:34.938"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.939" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.938" endtime="20220624 16:06:34.939"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.939" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'R3DrYvazck89DUFw'}</msg>
<status status="PASS" starttime="20220624 16:06:34.939" endtime="20220624 16:06:34.939"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.933" endtime="20220624 16:06:34.940"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.940" endtime="20220624 16:06:34.941"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.940" endtime="20220624 16:06:34.941"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.941" endtime="20220624 16:06:34.942"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.941" endtime="20220624 16:06:34.942"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.942" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.942" endtime="20220624 16:06:34.942"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:34.942" endtime="20220624 16:06:34.943"/>
</kw>
<msg timestamp="20220624 16:06:34.943" level="INFO">${usuario_valido} = {'nome': 'Bryan Knapp', 'email': 'kmoses@example.org', 'password': '+5Adc7!ue3', 'administrador': 'true', '_id': 'R3DrYvazck89DUFw'}</msg>
<status status="PASS" starttime="20220624 16:06:34.931" endtime="20220624 16:06:34.943"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:34.943" level="INFO">Removed item with key 'nome' and value 'Bryan Knapp'.</msg>
<msg timestamp="20220624 16:06:34.943" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:34.943" level="INFO">Removed item with key '_id' and value 'R3DrYvazck89DUFw'.</msg>
<status status="PASS" starttime="20220624 16:06:34.943" endtime="20220624 16:06:34.943"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.944" endtime="20220624 16:06:34.944"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.947" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=kmoses%40example.org&amp;password=%2B5Adc7%21ue3 
 </msg>
<msg timestamp="20220624 16:06:34.947" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b04a680-873e-4afb-95ce-7bc986cdb11d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '279', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imttb3Nlc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiKzVBZGM3IXVlMyIsImlhdCI6MTY1NjA5NzU5NCwiZXhwIjoxNjU2MDk4MTk0fQ.QuCXNSbfHsOeq0q-JWGqAlr0rnFovj7Z3e2Fw7gpNNI"
} 
 </msg>
<msg timestamp="20220624 16:06:34.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.944" endtime="20220624 16:06:34.947"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.947" endtime="20220624 16:06:34.947"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.948" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imttb3Nlc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiKzVBZGM3IXVlMyIsImlhdCI6MTY1NjA5NzU5NCw...</msg>
<status status="PASS" starttime="20220624 16:06:34.948" endtime="20220624 16:06:34.948"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.943" endtime="20220624 16:06:34.948"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.949" endtime="20220624 16:06:34.949"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.948" endtime="20220624 16:06:34.949"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.950" endtime="20220624 16:06:34.950"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.949" endtime="20220624 16:06:34.950"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.951" level="INFO">Length is 206</msg>
<status status="PASS" starttime="20220624 16:06:34.950" endtime="20220624 16:06:34.951"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.950" endtime="20220624 16:06:34.951"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:34.952" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imttb3Nlc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiKzVBZGM3IXVlMyIsImlhdCI6MTY1NjA5NzU5NCwiZXhwIjoxNjU2MDk4MTk0fQ.QuCXNSbfHsOeq0q-JWGqA...</msg>
<status status="PASS" starttime="20220624 16:06:34.951" endtime="20220624 16:06:34.952"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.952" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imttb3Nlc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiKzVBZGM3IXVlMyIsImlhdCI6MTY1NjA5NzU5NCwiZXhwIjoxNjU2MDk4MTk0fQ.QuCXNSbfHsOeq0q-JW...</msg>
<status status="PASS" starttime="20220624 16:06:34.952" endtime="20220624 16:06:34.952"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.930" endtime="20220624 16:06:34.952"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:34.953" endtime="20220624 16:06:34.953"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.962" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imttb3Nlc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiKzVBZGM3IXVlMyIsImlhdCI6MTY1NjA5NzU5NCwiZXhwIjoxNjU2MDk4MTk0fQ.QuCXNSbfHsOeq0q-JWGqAlr0rnFovj7Z3e2Fw7gpNNI', 'Content-Length': '110', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=ITelO+Vault&amp;descricao=Digital+Organizer+with+State-of-the-Art+Storage+Encryption&amp;quantidade=999&amp;preco=299 
 </msg>
<msg timestamp="20220624 16:06:34.962" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e7dde87f-0d1f-4b07-b973-24b1f50b263b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ZRsnfqcRCQFu3p3R"
} 
 </msg>
<msg timestamp="20220624 16:06:34.962" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.953" endtime="20220624 16:06:34.962"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.963" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.962" endtime="20220624 16:06:34.963"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.963" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ZRsnfqcRCQFu3p3R'}</msg>
<status status="PASS" starttime="20220624 16:06:34.963" endtime="20220624 16:06:34.963"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.952" endtime="20220624 16:06:34.963"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.964" endtime="20220624 16:06:34.964"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.963" endtime="20220624 16:06:34.964"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.965" endtime="20220624 16:06:34.965"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.964" endtime="20220624 16:06:34.965"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:34.966" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:34.966" endtime="20220624 16:06:34.966"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.966" endtime="20220624 16:06:34.966"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.886" endtime="20220624 16:06:34.966"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.971" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.971" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '69e3ef7e-f411-4cfb-9665-b0b911bcbfbd', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '6492', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 25,
    "produtos": [
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 998,
            "preco": 39,
            "_id": "nCwNCrDsvlkZa8Zw"
        },
        {
            "nome": "Ergo Screen E-II",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm",
            "quantidade": 998,
            "preco": 285,
            "_id": "rypUQQwSXjyk3c63"
        },
        {
            "nome": "Cerdik Phone 7",
            "descricao": "7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of active use), white or black",
            "quantidade": 998,
            "preco": 549,
            "_id": "sBU6QOj9dSzUd9LE"
        },
        {
            "nome": "Universal card reader",
            "descricao": "Universal card reader",
            "quantidade": 998,
            "preco": 14,
            "_id": "vF7r7dBj4AgssVDy"
        }
    ]
} 
 </msg>
<msg timestamp="20220624 16:06:34.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.968" endtime="20220624 16:06:34.971"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.971" endtime="20220624 16:06:34.972"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.972" level="INFO">${response_body} = {'quantidade': 25, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:34.972" endtime="20220624 16:06:34.972"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.968" endtime="20220624 16:06:34.972"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.973" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:34.973" endtime="20220624 16:06:34.973"/>
</kw>
<msg timestamp="20220624 16:06:34.973" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:34.968" endtime="20220624 16:06:34.973"/>
</kw>
<kw name="Get Endpoint &quot;/produtos/${produto['_id']}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.977" level="INFO">GET Request : url=http://localhost:3000/produtos/vF7r7dBj4AgssVDy 
 path_url=/produtos/vF7r7dBj4AgssVDy 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.977" level="INFO">GET Response : url=http://localhost:3000/produtos/vF7r7dBj4AgssVDy 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ac857ff6-9d83-4695-ad35-8de1c41416ee', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '152', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Universal card reader",
    "descricao": "Universal card reader",
    "quantidade": 998,
    "preco": 14,
    "_id": "vF7r7dBj4AgssVDy"
} 
 </msg>
<msg timestamp="20220624 16:06:34.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.974" endtime="20220624 16:06:34.977"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.978" endtime="20220624 16:06:34.978"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.979" level="INFO">${response_body} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:34.978" endtime="20220624 16:06:34.979"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.974" endtime="20220624 16:06:34.979"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.979" endtime="20220624 16:06:34.980"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.979" endtime="20220624 16:06:34.980"/>
</kw>
<kw name="Validar Quantidade De Produtos &gt; 0" library="resource" sourcename="Validar Quantidade De ${item} ${operador} ${quantidade}">
<kw name="Should Be True" library="BuiltIn">
<arg>${response_body['quantidade']} ${operador} ${quantidade}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.981" endtime="20220624 16:06:34.981"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.980" endtime="20220624 16:06:34.981"/>
</kw>
<tag>Buscar_Produto_Cadastrado</tag>
<tag>GET</tag>
<tag>GET_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:34.885" endtime="20220624 16:06:34.981"/>
</test>
<test id="s1-s3-s1-t3" name="Cenario: Tentar Buscar Produto Nao Cadastrado" line="26">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:34.983" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:34.983" endtime="20220624 16:06:34.983"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.983" endtime="20220624 16:06:34.983"/>
</kw>
<kw name="Get Endpoint &quot;/produtos/NaoCadastrado&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:34.987" level="INFO">GET Request : url=http://localhost:3000/produtos/NaoCadastrado 
 path_url=/produtos/NaoCadastrado 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:34.987" level="INFO">GET Response : url=http://localhost:3000/produtos/NaoCadastrado 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd645b53b-d395-47e2-9e22-728cec771178', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '44', 'Date': 'Fri, 24 Jun 2022 19:06:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Produto não encontrado"
} 
 </msg>
<msg timestamp="20220624 16:06:34.987" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.984" endtime="20220624 16:06:34.987"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.988" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:34.988" endtime="20220624 16:06:34.988"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:34.989" level="INFO">${response_body} = {'message': 'Produto não encontrado'}</msg>
<status status="PASS" starttime="20220624 16:06:34.988" endtime="20220624 16:06:34.989"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.984" endtime="20220624 16:06:34.989"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:34.990" endtime="20220624 16:06:34.990"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.989" endtime="20220624 16:06:34.990"/>
</kw>
<kw name="Validar Mensagem &quot;Produto não encontrado&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:34.991" endtime="20220624 16:06:34.992"/>
</kw>
<status status="PASS" starttime="20220624 16:06:34.991" endtime="20220624 16:06:34.992"/>
</kw>
<tag>Buscar_Produto_Nao_Cadastrado</tag>
<tag>GET</tag>
<tag>GET_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:34.982" endtime="20220624 16:06:34.992"/>
</test>
<doc>Arquivo De Requisições Do Tipo GET Do EndPoint Produtos</doc>
<status status="PASS" starttime="20220624 16:06:34.806" endtime="20220624 16:06:34.993"/>
</suite>
<suite id="s1-s3-s2" name="02 produtos POST" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\03_produtos\02_produtos_POST.robot">
<test id="s1-s3-s2-t1" name="Cenario: Cadastrar Produto Valido" line="11">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.007" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.006" endtime="20220624 16:06:35.007"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.006" endtime="20220624 16:06:35.007"/>
</kw>
<kw name="Pegar Produto Nao Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${lista_de_produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.012" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.012" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b0b0ec3f-f661-4b54-819b-810be5e08d06', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '6492', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 25,
    "produtos": [
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 998,
            "preco": 39,
            "_id": "nCwNCrDsvlkZa8Zw"
        },
        {
            "nome": "Ergo Screen E-II",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm",
            "quantidade": 998,
            "preco": 285,
            "_id": "rypUQQwSXjyk3c63"
        },
        {
            "nome": "Cerdik Phone 7",
            "descricao": "7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of active use), white or black",
            "quantidade": 998,
            "preco": 549,
            "_id": "sBU6QOj9dSzUd9LE"
        },
        {
            "nome": "Universal card reader",
            "descricao": "Universal card reader",
            "quantidade": 998,
            "preco": 14,
            "_id": "vF7r7dBj4AgssVDy"
        }
    ]
} 
 </msg>
<msg timestamp="20220624 16:06:35.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.008" endtime="20220624 16:06:35.012"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.012" endtime="20220624 16:06:35.013"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.014" level="INFO">${response_body} = {'quantidade': 25, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:35.013" endtime="20220624 16:06:35.014"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.008" endtime="20220624 16:06:35.014"/>
</kw>
<msg timestamp="20220624 16:06:35.014" level="INFO">${lista_de_produtos} = {'quantidade': 25, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:35.008" endtime="20220624 16:06:35.014"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:35.015" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:35.015" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:35.015" endtime="20220624 16:06:35.015"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:35.016" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.015" endtime="20220624 16:06:35.016"/>
</kw>
<msg timestamp="20220624 16:06:35.017" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.014" endtime="20220624 16:06:35.017"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_itens}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:35.017" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:35.017" level="INFO">${quantidade_de_itens} = 122</msg>
<status status="PASS" starttime="20220624 16:06:35.017" endtime="20220624 16:06:35.017"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_de_itens}</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.018" endtime="20220624 16:06:35.018"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.018" endtime="20220624 16:06:35.018"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.018" endtime="20220624 16:06:35.018"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.017" endtime="20220624 16:06:35.018"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.017" endtime="20220624 16:06:35.018"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.019" endtime="20220624 16:06:35.019"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.019" endtime="20220624 16:06:35.019"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.019" endtime="20220624 16:06:35.019"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.018" endtime="20220624 16:06:35.019"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.018" endtime="20220624 16:06:35.019"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.020" endtime="20220624 16:06:35.020"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.020" endtime="20220624 16:06:35.020"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.020" endtime="20220624 16:06:35.020"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.019" endtime="20220624 16:06:35.020"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.019" endtime="20220624 16:06:35.020"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.021" endtime="20220624 16:06:35.021"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.021" endtime="20220624 16:06:35.021"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.021" endtime="20220624 16:06:35.021"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.020" endtime="20220624 16:06:35.021"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.020" endtime="20220624 16:06:35.021"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.022" endtime="20220624 16:06:35.022"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.022" endtime="20220624 16:06:35.022"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.022" endtime="20220624 16:06:35.022"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.021" endtime="20220624 16:06:35.022"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.021" endtime="20220624 16:06:35.022"/>
</iter>
<iter>
<var name="${i}">5</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.023" endtime="20220624 16:06:35.023"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.023" endtime="20220624 16:06:35.023"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.023" endtime="20220624 16:06:35.023"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.022" endtime="20220624 16:06:35.023"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.022" endtime="20220624 16:06:35.024"/>
</iter>
<iter>
<var name="${i}">6</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.025" endtime="20220624 16:06:35.025"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.025" endtime="20220624 16:06:35.025"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.024" endtime="20220624 16:06:35.025"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.024" endtime="20220624 16:06:35.025"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.024" endtime="20220624 16:06:35.025"/>
</iter>
<iter>
<var name="${i}">7</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.026" endtime="20220624 16:06:35.026"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.026" endtime="20220624 16:06:35.026"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.026" endtime="20220624 16:06:35.026"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.025" endtime="20220624 16:06:35.026"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.025" endtime="20220624 16:06:35.026"/>
</iter>
<iter>
<var name="${i}">8</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.027" endtime="20220624 16:06:35.027"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.027" endtime="20220624 16:06:35.027"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.027" endtime="20220624 16:06:35.027"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.026" endtime="20220624 16:06:35.027"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.026" endtime="20220624 16:06:35.027"/>
</iter>
<iter>
<var name="${i}">9</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.028" endtime="20220624 16:06:35.028"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.028" endtime="20220624 16:06:35.028"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.028" endtime="20220624 16:06:35.028"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.027" endtime="20220624 16:06:35.028"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.027" endtime="20220624 16:06:35.028"/>
</iter>
<iter>
<var name="${i}">10</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.029" endtime="20220624 16:06:35.029"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.029" endtime="20220624 16:06:35.029"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.029" endtime="20220624 16:06:35.029"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.028" endtime="20220624 16:06:35.029"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.028" endtime="20220624 16:06:35.029"/>
</iter>
<iter>
<var name="${i}">11</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.030" endtime="20220624 16:06:35.030"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.030" endtime="20220624 16:06:35.030"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.030" endtime="20220624 16:06:35.030"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.029" endtime="20220624 16:06:35.030"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.029" endtime="20220624 16:06:35.030"/>
</iter>
<iter>
<var name="${i}">12</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.031" endtime="20220624 16:06:35.031"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.031" endtime="20220624 16:06:35.031"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.031" endtime="20220624 16:06:35.031"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.030" endtime="20220624 16:06:35.031"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.030" endtime="20220624 16:06:35.031"/>
</iter>
<iter>
<var name="${i}">13</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.032" endtime="20220624 16:06:35.032"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.032" endtime="20220624 16:06:35.032"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.032" endtime="20220624 16:06:35.032"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.031" endtime="20220624 16:06:35.032"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.031" endtime="20220624 16:06:35.032"/>
</iter>
<iter>
<var name="${i}">14</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.033" endtime="20220624 16:06:35.033"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.033" endtime="20220624 16:06:35.033"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.033" endtime="20220624 16:06:35.033"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.032" endtime="20220624 16:06:35.033"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.032" endtime="20220624 16:06:35.033"/>
</iter>
<iter>
<var name="${i}">15</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.034" endtime="20220624 16:06:35.034"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.034" endtime="20220624 16:06:35.034"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.034" endtime="20220624 16:06:35.034"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.033" endtime="20220624 16:06:35.034"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.033" endtime="20220624 16:06:35.034"/>
</iter>
<iter>
<var name="${i}">16</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.035" endtime="20220624 16:06:35.035"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.035" endtime="20220624 16:06:35.035"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.035" endtime="20220624 16:06:35.035"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.034" endtime="20220624 16:06:35.035"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.034" endtime="20220624 16:06:35.035"/>
</iter>
<iter>
<var name="${i}">17</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.036" endtime="20220624 16:06:35.036"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.036" endtime="20220624 16:06:35.036"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.036" endtime="20220624 16:06:35.036"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.035" endtime="20220624 16:06:35.036"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.035" endtime="20220624 16:06:35.036"/>
</iter>
<iter>
<var name="${i}">18</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.037" endtime="20220624 16:06:35.037"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.037" endtime="20220624 16:06:35.037"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.037" endtime="20220624 16:06:35.037"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.036" endtime="20220624 16:06:35.037"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.036" endtime="20220624 16:06:35.037"/>
</iter>
<iter>
<var name="${i}">19</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.038" endtime="20220624 16:06:35.038"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.038" endtime="20220624 16:06:35.038"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.038" endtime="20220624 16:06:35.038"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.037" endtime="20220624 16:06:35.038"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.037" endtime="20220624 16:06:35.038"/>
</iter>
<iter>
<var name="${i}">20</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.039" endtime="20220624 16:06:35.039"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.039" endtime="20220624 16:06:35.039"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.039" endtime="20220624 16:06:35.039"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.038" endtime="20220624 16:06:35.039"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.038" endtime="20220624 16:06:35.039"/>
</iter>
<iter>
<var name="${i}">21</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.040" endtime="20220624 16:06:35.040"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.040" endtime="20220624 16:06:35.040"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.040" endtime="20220624 16:06:35.040"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.039" endtime="20220624 16:06:35.040"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.039" endtime="20220624 16:06:35.040"/>
</iter>
<iter>
<var name="${i}">22</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.041" endtime="20220624 16:06:35.041"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.041" endtime="20220624 16:06:35.041"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.041" endtime="20220624 16:06:35.041"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.040" endtime="20220624 16:06:35.041"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.040" endtime="20220624 16:06:35.041"/>
</iter>
<iter>
<var name="${i}">23</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.042" endtime="20220624 16:06:35.042"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.042" endtime="20220624 16:06:35.042"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.042" endtime="20220624 16:06:35.042"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.041" endtime="20220624 16:06:35.042"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.041" endtime="20220624 16:06:35.042"/>
</iter>
<iter>
<var name="${i}">24</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.043" endtime="20220624 16:06:35.043"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.043" endtime="20220624 16:06:35.043"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.043" endtime="20220624 16:06:35.043"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.042" endtime="20220624 16:06:35.043"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.042" endtime="20220624 16:06:35.043"/>
</iter>
<iter>
<var name="${i}">25</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.045" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430}</msg>
<status status="PASS" starttime="20220624 16:06:35.044" endtime="20220624 16:06:35.045"/>
</kw>
<break>
<status status="PASS" starttime="20220624 16:06:35.045" endtime="20220624 16:06:35.045"/>
</break>
<status status="PASS" starttime="20220624 16:06:35.044" endtime="20220624 16:06:35.045"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.043" endtime="20220624 16:06:35.045"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.043" endtime="20220624 16:06:35.045"/>
</iter>
<status status="PASS" starttime="20220624 16:06:35.017" endtime="20220624 16:06:35.045"/>
</for>
<msg timestamp="20220624 16:06:35.046" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430}</msg>
<status status="PASS" starttime="20220624 16:06:35.008" endtime="20220624 16:06:35.046"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.047" level="INFO">${nome} = Jaime Brown</msg>
<status status="PASS" starttime="20220624 16:06:35.047" endtime="20220624 16:06:35.047"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.047" level="INFO">${email} = wongsusan@example.net</msg>
<status status="PASS" starttime="20220624 16:06:35.047" endtime="20220624 16:06:35.047"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.048" level="INFO">${senha} = _X9WNLzmR^</msg>
<status status="PASS" starttime="20220624 16:06:35.048" endtime="20220624 16:06:35.048"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.048" level="INFO">&amp;{usuario} = { nome=Jaime Brown | email=wongsusan@example.net | password=_X9WNLzmR^ | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.048" endtime="20220624 16:06:35.048"/>
</kw>
<msg timestamp="20220624 16:06:35.048" level="INFO">${usuario} = {'nome': 'Jaime Brown', 'email': 'wongsusan@example.net', 'password': '_X9WNLzmR^', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.046" endtime="20220624 16:06:35.048"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.049" endtime="20220624 16:06:35.049"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.054" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '87', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Jaime+Brown&amp;email=wongsusan%40example.net&amp;password=_X9WNLzmR%5E&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.054" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a0c60ecb-7a2d-4340-9579-a4cd5c115531', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "BStfTQ9z1Tqm3JKU"
} 
 </msg>
<msg timestamp="20220624 16:06:35.054" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.049" endtime="20220624 16:06:35.054"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.055" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.054" endtime="20220624 16:06:35.055"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.055" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'BStfTQ9z1Tqm3JKU'}</msg>
<status status="PASS" starttime="20220624 16:06:35.055" endtime="20220624 16:06:35.055"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.049" endtime="20220624 16:06:35.056"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.056" endtime="20220624 16:06:35.057"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.056" endtime="20220624 16:06:35.057"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.057" endtime="20220624 16:06:35.058"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.057" endtime="20220624 16:06:35.058"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.058" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.058" endtime="20220624 16:06:35.058"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.058" endtime="20220624 16:06:35.059"/>
</kw>
<msg timestamp="20220624 16:06:35.059" level="INFO">${usuario_valido} = {'nome': 'Jaime Brown', 'email': 'wongsusan@example.net', 'password': '_X9WNLzmR^', 'administrador': 'true', '_id': 'BStfTQ9z1Tqm3JKU'}</msg>
<status status="PASS" starttime="20220624 16:06:35.046" endtime="20220624 16:06:35.059"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.059" level="INFO">Removed item with key 'nome' and value 'Jaime Brown'.</msg>
<msg timestamp="20220624 16:06:35.059" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.059" level="INFO">Removed item with key '_id' and value 'BStfTQ9z1Tqm3JKU'.</msg>
<status status="PASS" starttime="20220624 16:06:35.059" endtime="20220624 16:06:35.059"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.060" endtime="20220624 16:06:35.060"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.063" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=wongsusan%40example.net&amp;password=_X9WNLzmR%5E 
 </msg>
<msg timestamp="20220624 16:06:35.063" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9fe8f54a-a52a-4ec1-a964-8b0477155c6d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '283', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvbmdzdXNhbkBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1g5V05Mem1SXiIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.AJeJNxwAVq5V0CxD4VjJRVlpLi76iZLi2YbrjKUVJFQ"
} 
 </msg>
<msg timestamp="20220624 16:06:35.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.060" endtime="20220624 16:06:35.063"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.063" endtime="20220624 16:06:35.064"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.064" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvbmdzdXNhbkBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1g5V05Mem1SXiIsImlhdCI6MTY1NjA5NzU...</msg>
<status status="PASS" starttime="20220624 16:06:35.064" endtime="20220624 16:06:35.064"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.059" endtime="20220624 16:06:35.064"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.065" endtime="20220624 16:06:35.065"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.064" endtime="20220624 16:06:35.065"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.066" endtime="20220624 16:06:35.066"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.065" endtime="20220624 16:06:35.066"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.067" level="INFO">Length is 210</msg>
<status status="PASS" starttime="20220624 16:06:35.066" endtime="20220624 16:06:35.067"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.066" endtime="20220624 16:06:35.067"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.068" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvbmdzdXNhbkBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1g5V05Mem1SXiIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.AJeJNxwAVq5V0CxD4...</msg>
<status status="PASS" starttime="20220624 16:06:35.067" endtime="20220624 16:06:35.068"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.068" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvbmdzdXNhbkBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1g5V05Mem1SXiIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.AJeJNxwAVq5V0C...</msg>
<status status="PASS" starttime="20220624 16:06:35.068" endtime="20220624 16:06:35.068"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.046" endtime="20220624 16:06:35.068"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.069" endtime="20220624 16:06:35.069"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.079" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvbmdzdXNhbkBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1g5V05Mem1SXiIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.AJeJNxwAVq5V0CxD4VjJRVlpLi76iZLi2YbrjKUVJFQ', 'Content-Length': '125', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flat+XXL&amp;descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;quantidade=999&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:35.079" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1e4b640e-4943-4925-8296-e0f4347fb2ad', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ySuPFbSBgrUrfwM7"
} 
 </msg>
<msg timestamp="20220624 16:06:35.079" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.069" endtime="20220624 16:06:35.079"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.080" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.079" endtime="20220624 16:06:35.080"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.080" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.080" endtime="20220624 16:06:35.080"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.068" endtime="20220624 16:06:35.080"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.081" endtime="20220624 16:06:35.082"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.081" endtime="20220624 16:06:35.082"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.083" endtime="20220624 16:06:35.084"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.083" endtime="20220624 16:06:35.084"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.085" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.085" endtime="20220624 16:06:35.085"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.084" endtime="20220624 16:06:35.085"/>
</kw>
<tag>Cadastar_Produto_Valido</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.006" endtime="20220624 16:06:35.086"/>
</test>
<test id="s1-s3-s2-t2" name="Cenario: Cadastrar 20 Produtos" line="20">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.088" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.088" endtime="20220624 16:06:35.088"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.087" endtime="20220624 16:06:35.088"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:35.089" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:35.089" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:35.089" endtime="20220624 16:06:35.089"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:35.090" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.090" endtime="20220624 16:06:35.090"/>
</kw>
<msg timestamp="20220624 16:06:35.091" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.088" endtime="20220624 16:06:35.091"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_json}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:35.092" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:35.092" level="INFO">${quantidade_json} = 122</msg>
<status status="PASS" starttime="20220624 16:06:35.091" endtime="20220624 16:06:35.092"/>
</kw>
<kw name="Quantidade De Produtos" library="produtos_keywords">
<var>${quantidade_ja_cadastrada}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.096" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.096" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a4ff49c0-166d-47d1-8f13-97964ec73a58', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '6735', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 26,
    "produtos": [
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 998,
            "preco": 39,
            "_id": "nCwNCrDsvlkZa8Zw"
        },
        {
            "nome": "Ergo Screen E-II",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm",
            "quantidade": 998,
            "preco": 285,
            "_id": "rypUQQwSXjyk3c63"
        },
        {
            "nome": "Cerdik Phone 7",
            "descricao": "7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of active use), white or black",
            "quantidade": 998,
            "preco": 549,
            "_id": "sBU6QOj9dSzUd9LE"
        },
        {
            "nome": "Universal card reader",
            "descricao": "Universal card reader",
            "quantidade": 998,
            "preco": 14,
            "_id": "vF7r7dBj4AgssVDy"
        },
        {
            "nome": "Flat XXL",
            "descricao": "Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm",
            "quantidade": 999,
            "preco": 1430,
            "_id": "ySuPFbSBgrUrfwM7"
        }
    ]
} 
 </msg>
<msg timestamp="20220624 16:06:35.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.093" endtime="20220624 16:06:35.096"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.097" endtime="20220624 16:06:35.097"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.098" level="INFO">${response_body} = {'quantidade': 26, 'produtos': [{'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:35.097" endtime="20220624 16:06:35.098"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.092" endtime="20220624 16:06:35.098"/>
</kw>
<msg timestamp="20220624 16:06:35.098" level="INFO">${quantidade_ja_cadastrada} = 26</msg>
<status status="PASS" starttime="20220624 16:06:35.092" endtime="20220624 16:06:35.098"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.101" level="INFO">${nome} = Jacob Flores</msg>
<status status="PASS" starttime="20220624 16:06:35.100" endtime="20220624 16:06:35.101"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.101" level="INFO">${email} = regina47@example.org</msg>
<status status="PASS" starttime="20220624 16:06:35.101" endtime="20220624 16:06:35.101"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.101" level="INFO">${senha} = #05H86cPc+</msg>
<status status="PASS" starttime="20220624 16:06:35.101" endtime="20220624 16:06:35.101"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.102" level="INFO">&amp;{usuario} = { nome=Jacob Flores | email=regina47@example.org | password=#05H86cPc+ | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.101" endtime="20220624 16:06:35.102"/>
</kw>
<msg timestamp="20220624 16:06:35.102" level="INFO">${usuario} = {'nome': 'Jacob Flores', 'email': 'regina47@example.org', 'password': '#05H86cPc+', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.099" endtime="20220624 16:06:35.102"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.102" endtime="20220624 16:06:35.103"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.107" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Jacob+Flores&amp;email=regina47%40example.org&amp;password=%2305H86cPc%2B&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.107" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '563213ed-527e-44dc-b84b-46b00c31f00e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "HcFZRKUpLWLAbBz1"
} 
 </msg>
<msg timestamp="20220624 16:06:35.107" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.103" endtime="20220624 16:06:35.107"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.108" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.108" endtime="20220624 16:06:35.108"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.109" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'HcFZRKUpLWLAbBz1'}</msg>
<status status="PASS" starttime="20220624 16:06:35.108" endtime="20220624 16:06:35.109"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.102" endtime="20220624 16:06:35.109"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.109" endtime="20220624 16:06:35.110"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.109" endtime="20220624 16:06:35.110"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.110" endtime="20220624 16:06:35.111"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.110" endtime="20220624 16:06:35.111"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.111" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.111" endtime="20220624 16:06:35.111"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.111" endtime="20220624 16:06:35.112"/>
</kw>
<msg timestamp="20220624 16:06:35.112" level="INFO">${usuario_valido} = {'nome': 'Jacob Flores', 'email': 'regina47@example.org', 'password': '#05H86cPc+', 'administrador': 'true', '_id': 'HcFZRKUpLWLAbBz1'}</msg>
<status status="PASS" starttime="20220624 16:06:35.099" endtime="20220624 16:06:35.112"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.112" level="INFO">Removed item with key 'nome' and value 'Jacob Flores'.</msg>
<msg timestamp="20220624 16:06:35.112" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.112" level="INFO">Removed item with key '_id' and value 'HcFZRKUpLWLAbBz1'.</msg>
<status status="PASS" starttime="20220624 16:06:35.112" endtime="20220624 16:06:35.112"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.113" endtime="20220624 16:06:35.113"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.116" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=regina47%40example.org&amp;password=%2305H86cPc%2B 
 </msg>
<msg timestamp="20220624 16:06:35.116" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e5647349-e982-46ce-b934-c5de227f52b3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '281', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs"
} 
 </msg>
<msg timestamp="20220624 16:06:35.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.113" endtime="20220624 16:06:35.116"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.116" endtime="20220624 16:06:35.117"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.117" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk...</msg>
<status status="PASS" starttime="20220624 16:06:35.117" endtime="20220624 16:06:35.117"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.113" endtime="20220624 16:06:35.117"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.118" endtime="20220624 16:06:35.118"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.117" endtime="20220624 16:06:35.118"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.119" endtime="20220624 16:06:35.119"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.118" endtime="20220624 16:06:35.119"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.120" level="INFO">Length is 208</msg>
<status status="PASS" starttime="20220624 16:06:35.120" endtime="20220624 16:06:35.120"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.119" endtime="20220624 16:06:35.120"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.121" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-L...</msg>
<status status="PASS" starttime="20220624 16:06:35.120" endtime="20220624 16:06:35.121"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.121" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jz...</msg>
<status status="PASS" starttime="20220624 16:06:35.121" endtime="20220624 16:06:35.121"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.099" endtime="20220624 16:06:35.121"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>20</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.122" endtime="20220624 16:06:35.122"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.122" endtime="20220624 16:06:35.122"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.122" endtime="20220624 16:06:35.122"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.122" endtime="20220624 16:06:35.123"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.123" endtime="20220624 16:06:35.124"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.134" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '107', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Ergonomic+Keyboard&amp;descricao=Ergonomic+USB+Keyboard+for+Desktop%2C+Plug%26Play&amp;quantidade=999&amp;preco=14 
 </msg>
<msg timestamp="20220624 16:06:35.134" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0c408b37-9820-4802-8947-9392177ba504', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "QGdxANGY4iYthlwM"
} 
 </msg>
<msg timestamp="20220624 16:06:35.134" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.124" endtime="20220624 16:06:35.134"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.134" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.134" endtime="20220624 16:06:35.134"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.135" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:35.134" endtime="20220624 16:06:35.135"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.123" endtime="20220624 16:06:35.135"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.135" endtime="20220624 16:06:35.136"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.135" endtime="20220624 16:06:35.136"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.136" endtime="20220624 16:06:35.137"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.136" endtime="20220624 16:06:35.137"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.138" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.137" endtime="20220624 16:06:35.138"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.137" endtime="20220624 16:06:35.138"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.122" endtime="20220624 16:06:35.138"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.138" endtime="20220624 16:06:35.138"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.138" endtime="20220624 16:06:35.138"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.138" endtime="20220624 16:06:35.138"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.138" endtime="20220624 16:06:35.139"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.139" endtime="20220624 16:06:35.140"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.151" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '141', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Smartphone+Beta&amp;descricao=5+Megapixel+Camera%2C+Wi-Fi+802.11+b%2Fg%2Fn%2C+Bluetooth%2C+GPS+Available-GPS+support&amp;quantidade=999&amp;preco=30 
 </msg>
<msg timestamp="20220624 16:06:35.151" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '578899f6-5b86-442e-8e3f-3787675ae814', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "EnPI6sCHtD7UoWQQ"
} 
 </msg>
<msg timestamp="20220624 16:06:35.151" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.140" endtime="20220624 16:06:35.151"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.151" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.151" endtime="20220624 16:06:35.151"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.152" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'EnPI6sCHtD7UoWQQ'}</msg>
<status status="PASS" starttime="20220624 16:06:35.152" endtime="20220624 16:06:35.152"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.139" endtime="20220624 16:06:35.152"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.153" endtime="20220624 16:06:35.153"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.152" endtime="20220624 16:06:35.153"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.153" endtime="20220624 16:06:35.154"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.153" endtime="20220624 16:06:35.154"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.155" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.155" endtime="20220624 16:06:35.155"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.154" endtime="20220624 16:06:35.155"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.138" endtime="20220624 16:06:35.155"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.155" endtime="20220624 16:06:35.155"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.155" endtime="20220624 16:06:35.155"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.155" endtime="20220624 16:06:35.155"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.156" endtime="20220624 16:06:35.156"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.157" endtime="20220624 16:06:35.157"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.166" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '169', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Notebook+Basic+17&amp;descricao=Notebook+Basic+17+with+2%2C80+GHz+quad+core%2C+17%22+LCD%2C+4+GB+DDR3+RAM%2C+500+GB+Hard+Disc%2C+Windows+8+Pro&amp;quantidade=999&amp;preco=1249 
 </msg>
<msg timestamp="20220624 16:06:35.166" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '72eb40c8-20f0-410c-ba7c-2a92fb6aaff0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ikLmmmBskYjtYPNo"
} 
 </msg>
<msg timestamp="20220624 16:06:35.166" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.157" endtime="20220624 16:06:35.166"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.167" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.167" endtime="20220624 16:06:35.167"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.167" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ikLmmmBskYjtYPNo'}</msg>
<status status="PASS" starttime="20220624 16:06:35.167" endtime="20220624 16:06:35.168"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.156" endtime="20220624 16:06:35.168"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.168" endtime="20220624 16:06:35.168"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.168" endtime="20220624 16:06:35.168"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.169" endtime="20220624 16:06:35.170"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.169" endtime="20220624 16:06:35.170"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.170" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.170" endtime="20220624 16:06:35.170"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.170" endtime="20220624 16:06:35.170"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.155" endtime="20220624 16:06:35.171"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.171" endtime="20220624 16:06:35.171"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.171" endtime="20220624 16:06:35.171"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.171" endtime="20220624 16:06:35.171"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.171" endtime="20220624 16:06:35.171"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.172" endtime="20220624 16:06:35.172"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.182" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '100', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Hurricane+GX&amp;descricao=Hurricane+GX%3A+PCI-E+691+GFLOPS+game-optimized&amp;quantidade=999&amp;preco=101 
 </msg>
<msg timestamp="20220624 16:06:35.182" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '53e2fe5e-497b-45a1-b3bc-49c4d163f6e4', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "k7RwzHsvxWkz58Nr"
} 
 </msg>
<msg timestamp="20220624 16:06:35.182" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.172" endtime="20220624 16:06:35.182"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.183" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.182" endtime="20220624 16:06:35.183"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.183" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'k7RwzHsvxWkz58Nr'}</msg>
<status status="PASS" starttime="20220624 16:06:35.183" endtime="20220624 16:06:35.183"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.171" endtime="20220624 16:06:35.183"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.184" endtime="20220624 16:06:35.184"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.183" endtime="20220624 16:06:35.184"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.185" endtime="20220624 16:06:35.185"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.184" endtime="20220624 16:06:35.185"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.186" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.186" endtime="20220624 16:06:35.186"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.185" endtime="20220624 16:06:35.186"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.171" endtime="20220624 16:06:35.186"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.187" endtime="20220624 16:06:35.187"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.187" endtime="20220624 16:06:35.187"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.186" endtime="20220624 16:06:35.187"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.187" endtime="20220624 16:06:35.187"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.188" endtime="20220624 16:06:35.188"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.197" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '99', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Beam+Breaker+B-3&amp;descricao=1080p%2C+DLP+max.+12%2C3+Meter%2C+3D-ready&amp;quantidade=999&amp;preco=889 
 </msg>
<msg timestamp="20220624 16:06:35.198" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd48d719b-534f-4aa2-9896-03f23f76b28f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "tEyF4402lspTNQCb"
} 
 </msg>
<msg timestamp="20220624 16:06:35.198" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.188" endtime="20220624 16:06:35.198"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.198" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.198" endtime="20220624 16:06:35.198"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.199" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'tEyF4402lspTNQCb'}</msg>
<status status="PASS" starttime="20220624 16:06:35.198" endtime="20220624 16:06:35.199"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.187" endtime="20220624 16:06:35.199"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.199" endtime="20220624 16:06:35.200"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.199" endtime="20220624 16:06:35.200"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.200" endtime="20220624 16:06:35.201"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.200" endtime="20220624 16:06:35.201"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.202" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.201" endtime="20220624 16:06:35.202"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.201" endtime="20220624 16:06:35.202"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.186" endtime="20220624 16:06:35.202"/>
</iter>
<iter>
<var name="${i}">5</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.202" endtime="20220624 16:06:35.202"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.202" endtime="20220624 16:06:35.202"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.202" endtime="20220624 16:06:35.202"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.202" endtime="20220624 16:06:35.203"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.203" endtime="20220624 16:06:35.204"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.213" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '148', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Server+Basic&amp;descricao=Dual+socket%2C+quad-core+processing+server+with+1333+MHz+Front+Side+Bus+with+10Gb+connectivity&amp;quantidade=999&amp;preco=5000 
 </msg>
<msg timestamp="20220624 16:06:35.213" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b5e3031-dbec-4a5c-81fb-243edf666ac3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "3SZBJdzB87fc4ego"
} 
 </msg>
<msg timestamp="20220624 16:06:35.213" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.204" endtime="20220624 16:06:35.213"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.213" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.213" endtime="20220624 16:06:35.213"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.214" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '3SZBJdzB87fc4ego'}</msg>
<status status="PASS" starttime="20220624 16:06:35.213" endtime="20220624 16:06:35.214"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.203" endtime="20220624 16:06:35.214"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.214" endtime="20220624 16:06:35.215"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.214" endtime="20220624 16:06:35.215"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.215" endtime="20220624 16:06:35.216"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.215" endtime="20220624 16:06:35.216"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.217" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.216" endtime="20220624 16:06:35.217"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.216" endtime="20220624 16:06:35.217"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.202" endtime="20220624 16:06:35.217"/>
</iter>
<iter>
<var name="${i}">6</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.217" endtime="20220624 16:06:35.217"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.217" endtime="20220624 16:06:35.217"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.217" endtime="20220624 16:06:35.217"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.217" endtime="20220624 16:06:35.218"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.219" endtime="20220624 16:06:35.219"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.229" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '147', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=ITelO+FlexTop+I6300c&amp;descricao=Notebook+with+2%2C80+GHz+dual+core%2C+8+GB+DDR3+SDRAM%2C+500+GB+Hard+Disc%2C+Windows+8&amp;quantidade=999&amp;preco=799 
 </msg>
<msg timestamp="20220624 16:06:35.229" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '566cd9cd-6993-4fd8-a70e-bf0a840a9a56', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "I7runwlH7VqYXvW4"
} 
 </msg>
<msg timestamp="20220624 16:06:35.229" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.219" endtime="20220624 16:06:35.229"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.230" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.229" endtime="20220624 16:06:35.230"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.230" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'I7runwlH7VqYXvW4'}</msg>
<status status="PASS" starttime="20220624 16:06:35.230" endtime="20220624 16:06:35.230"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.218" endtime="20220624 16:06:35.230"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.231" endtime="20220624 16:06:35.231"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.231" endtime="20220624 16:06:35.231"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.232" endtime="20220624 16:06:35.233"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.231" endtime="20220624 16:06:35.233"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.233" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.233" endtime="20220624 16:06:35.233"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.233" endtime="20220624 16:06:35.234"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.217" endtime="20220624 16:06:35.234"/>
</iter>
<iter>
<var name="${i}">7</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.234" endtime="20220624 16:06:35.234"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.234" endtime="20220624 16:06:35.234"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.234" endtime="20220624 16:06:35.234"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.234" endtime="20220624 16:06:35.234"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.235" endtime="20220624 16:06:35.235"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.245" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '105', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=PC+Lock&amp;descricao=Robust+3m+anti-burglary+protection+for+your+laptop+computer&amp;quantidade=999&amp;preco=8 
 </msg>
<msg timestamp="20220624 16:06:35.245" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '861e11e8-86ed-42cd-96a9-9df5351f5b88', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "GlZXPUNWt8islmer"
} 
 </msg>
<msg timestamp="20220624 16:06:35.245" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.236" endtime="20220624 16:06:35.245"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.245" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.245" endtime="20220624 16:06:35.245"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.246" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:35.245" endtime="20220624 16:06:35.246"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.235" endtime="20220624 16:06:35.246"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.246" endtime="20220624 16:06:35.247"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.246" endtime="20220624 16:06:35.247"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.247" endtime="20220624 16:06:35.248"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.247" endtime="20220624 16:06:35.248"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.249" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.248" endtime="20220624 16:06:35.249"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.248" endtime="20220624 16:06:35.249"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.234" endtime="20220624 16:06:35.249"/>
</iter>
<iter>
<var name="${i}">8</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.249" endtime="20220624 16:06:35.249"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.249" endtime="20220624 16:06:35.249"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.249" endtime="20220624 16:06:35.249"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.249" endtime="20220624 16:06:35.250"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.250" endtime="20220624 16:06:35.251"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.260" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '73', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flyer&amp;descricao=Flyer+for+our+product+palette&amp;quantidade=999&amp;preco=1 
 </msg>
<msg timestamp="20220624 16:06:35.260" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ad2ebe50-bcd1-44cf-a2ed-c9e4ad0e9cf9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ahZuij7poMV9daxr"
} 
 </msg>
<msg timestamp="20220624 16:06:35.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.251" endtime="20220624 16:06:35.260"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.260" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.260" endtime="20220624 16:06:35.261"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.261" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:35.261" endtime="20220624 16:06:35.261"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.250" endtime="20220624 16:06:35.261"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.262" endtime="20220624 16:06:35.262"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.261" endtime="20220624 16:06:35.262"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.262" endtime="20220624 16:06:35.263"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.262" endtime="20220624 16:06:35.263"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.264" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.264" endtime="20220624 16:06:35.264"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.264" endtime="20220624 16:06:35.264"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.249" endtime="20220624 16:06:35.264"/>
</iter>
<iter>
<var name="${i}">9</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.265" endtime="20220624 16:06:35.265"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.265" endtime="20220624 16:06:35.265"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.264" endtime="20220624 16:06:35.265"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.265" endtime="20220624 16:06:35.265"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.266" endtime="20220624 16:06:35.266"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.276" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '109', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Smart+Design&amp;descricao=Complete+package%2C+1+User%2C+Image+editing%2C+processing&amp;quantidade=999&amp;preco=79 
 </msg>
<msg timestamp="20220624 16:06:35.276" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6349a98c-1510-4ba5-80eb-e5d6fdb688a3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ftkkuY0qIIn3MBPk"
} 
 </msg>
<msg timestamp="20220624 16:06:35.276" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.266" endtime="20220624 16:06:35.276"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.276" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.276" endtime="20220624 16:06:35.276"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.277" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:35.276" endtime="20220624 16:06:35.277"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.265" endtime="20220624 16:06:35.277"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.277" endtime="20220624 16:06:35.278"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.277" endtime="20220624 16:06:35.278"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.278" endtime="20220624 16:06:35.279"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.278" endtime="20220624 16:06:35.279"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.280" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.280" endtime="20220624 16:06:35.280"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.279" endtime="20220624 16:06:35.280"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.264" endtime="20220624 16:06:35.280"/>
</iter>
<iter>
<var name="${i}">10</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.280" endtime="20220624 16:06:35.280"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.280" endtime="20220624 16:06:35.280"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.280" endtime="20220624 16:06:35.280"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.281" endtime="20220624 16:06:35.281"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.282" endtime="20220624 16:06:35.282"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.292" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '122', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Power+Pro+Player+80&amp;descricao=MP3-Player+with+80+GB+SSD+and+Color+Display%2C+can+play+movies&amp;quantidade=999&amp;preco=299 
 </msg>
<msg timestamp="20220624 16:06:35.292" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c9dc37a1-e16c-4d40-9ff1-b1bf9dad9e6b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "O00lW65c7tzOcrGU"
} 
 </msg>
<msg timestamp="20220624 16:06:35.292" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.282" endtime="20220624 16:06:35.292"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.292" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.292" endtime="20220624 16:06:35.292"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.293" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:35.292" endtime="20220624 16:06:35.293"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.281" endtime="20220624 16:06:35.293"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.293" endtime="20220624 16:06:35.294"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.293" endtime="20220624 16:06:35.294"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.294" endtime="20220624 16:06:35.295"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.294" endtime="20220624 16:06:35.295"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.296" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.295" endtime="20220624 16:06:35.296"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.295" endtime="20220624 16:06:35.296"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.280" endtime="20220624 16:06:35.296"/>
</iter>
<iter>
<var name="${i}">11</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.296" endtime="20220624 16:06:35.296"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.296" endtime="20220624 16:06:35.296"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.296" endtime="20220624 16:06:35.296"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.296" endtime="20220624 16:06:35.297"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.297" endtime="20220624 16:06:35.298"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.307" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '163', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=PC+Power+Station&amp;descricao=PC+Power+Station+with+3%2C4+Ghz+quad-core%2C+32+GB+DDR3+SDRAM%2C+feels+like+Available+PC%2C+Windows+8+Pro&amp;quantidade=999&amp;preco=2399 
 </msg>
<msg timestamp="20220624 16:06:35.307" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '90a859a2-a20d-4d57-af0e-efe56f1ef969', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "RhTxSnY2aSwilmOB"
} 
 </msg>
<msg timestamp="20220624 16:06:35.307" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.298" endtime="20220624 16:06:35.307"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.308" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.307" endtime="20220624 16:06:35.308"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.308" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'RhTxSnY2aSwilmOB'}</msg>
<status status="PASS" starttime="20220624 16:06:35.308" endtime="20220624 16:06:35.308"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.297" endtime="20220624 16:06:35.308"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.309" endtime="20220624 16:06:35.309"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.309" endtime="20220624 16:06:35.309"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.310" endtime="20220624 16:06:35.310"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.309" endtime="20220624 16:06:35.310"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.311" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.311" endtime="20220624 16:06:35.311"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.310" endtime="20220624 16:06:35.311"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.296" endtime="20220624 16:06:35.311"/>
</iter>
<iter>
<var name="${i}">12</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.312" endtime="20220624 16:06:35.312"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.311" endtime="20220624 16:06:35.312"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.311" endtime="20220624 16:06:35.312"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.312" endtime="20220624 16:06:35.312"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.313" endtime="20220624 16:06:35.313"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.322" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '145', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=ITelO+Vault+Net&amp;descricao=Digital+Organizer+with+State-of-the-Art+Encryption+for+Storage+and+Network+Communications&amp;quantidade=999&amp;preco=459 
 </msg>
<msg timestamp="20220624 16:06:35.323" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '69ccbfa5-1feb-447e-9668-42e30d51be59', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "FCfDTwwdXcVf14BM"
} 
 </msg>
<msg timestamp="20220624 16:06:35.323" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.313" endtime="20220624 16:06:35.323"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.323" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.323" endtime="20220624 16:06:35.323"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.324" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:35.323" endtime="20220624 16:06:35.324"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.312" endtime="20220624 16:06:35.324"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.324" endtime="20220624 16:06:35.325"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.324" endtime="20220624 16:06:35.325"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.325" endtime="20220624 16:06:35.326"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.325" endtime="20220624 16:06:35.326"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.327" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.326" endtime="20220624 16:06:35.327"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.326" endtime="20220624 16:06:35.327"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.311" endtime="20220624 16:06:35.327"/>
</iter>
<iter>
<var name="${i}">13</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.327" endtime="20220624 16:06:35.327"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.327" endtime="20220624 16:06:35.327"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.327" endtime="20220624 16:06:35.327"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.327" endtime="20220624 16:06:35.328"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.328" endtime="20220624 16:06:35.328"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.338" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '165', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Gaming+Monster+Pro&amp;descricao=3%2C4+Ghz+quad+core%2C+16+GB+DDR3+SDRAM%2C+4000+GB+Hard+Disc%2C+Graphic+Card%3A+Hurricane+GX%2C+Windows+8&amp;quantidade=999&amp;preco=1700 
 </msg>
<msg timestamp="20220624 16:06:35.338" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'de2bc50e-295e-43e5-b5dc-97fd059491f8', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "AiU2jNoXJmOd3bDF"
} 
 </msg>
<msg timestamp="20220624 16:06:35.338" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.329" endtime="20220624 16:06:35.338"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.338" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.338" endtime="20220624 16:06:35.338"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.339" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'AiU2jNoXJmOd3bDF'}</msg>
<status status="PASS" starttime="20220624 16:06:35.338" endtime="20220624 16:06:35.339"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.328" endtime="20220624 16:06:35.339"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.340" endtime="20220624 16:06:35.340"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.339" endtime="20220624 16:06:35.340"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.340" endtime="20220624 16:06:35.341"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.340" endtime="20220624 16:06:35.341"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.342" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.342" endtime="20220624 16:06:35.342"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.341" endtime="20220624 16:06:35.342"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.327" endtime="20220624 16:06:35.342"/>
</iter>
<iter>
<var name="${i}">14</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.342" endtime="20220624 16:06:35.342"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.342" endtime="20220624 16:06:35.342"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.342" endtime="20220624 16:06:35.342"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.343" endtime="20220624 16:06:35.343"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.344" endtime="20220624 16:06:35.344"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.363" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '104', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Lovely+Sound+5.1+Wireless&amp;descricao=5.1+Headset%2C+40+Hz-20+kHz%2C+Wireless&amp;quantidade=999&amp;preco=49 
 </msg>
<msg timestamp="20220624 16:06:35.363" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '64419e98-20fb-48cd-b948-bb786db1e78e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "k2sDlx1dQOYwsV12"
} 
 </msg>
<msg timestamp="20220624 16:06:35.363" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.344" endtime="20220624 16:06:35.363"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.363" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.363" endtime="20220624 16:06:35.363"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.364" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'k2sDlx1dQOYwsV12'}</msg>
<status status="PASS" starttime="20220624 16:06:35.363" endtime="20220624 16:06:35.364"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.343" endtime="20220624 16:06:35.364"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.364" endtime="20220624 16:06:35.365"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.364" endtime="20220624 16:06:35.365"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.365" endtime="20220624 16:06:35.366"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.365" endtime="20220624 16:06:35.367"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.367" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.367" endtime="20220624 16:06:35.367"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.367" endtime="20220624 16:06:35.368"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.342" endtime="20220624 16:06:35.368"/>
</iter>
<iter>
<var name="${i}">15</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.368" endtime="20220624 16:06:35.368"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.368" endtime="20220624 16:06:35.368"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.368" endtime="20220624 16:06:35.368"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.368" endtime="20220624 16:06:35.368"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.369" endtime="20220624 16:06:35.369"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.379" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '169', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Record+Movie&amp;descricao=160+GB+HDD%2C+CD-RW%2C+DVD%2BR%2FRW%2C+DVD-R%2FRW%2C+MPEG+2+%28Video-DVD%29%2C+MPEG+4%2C+VCD%2C+SVCD%2C+DivX%2C+Xvid&amp;quantidade=999&amp;preco=288 
 </msg>
<msg timestamp="20220624 16:06:35.379" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5468fe32-e83c-4ccc-b1e1-501787ebaec3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "JwKn0Q6ngqhxLTEi"
} 
 </msg>
<msg timestamp="20220624 16:06:35.379" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.370" endtime="20220624 16:06:35.379"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.380" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.380" endtime="20220624 16:06:35.380"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.381" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:35.380" endtime="20220624 16:06:35.381"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.369" endtime="20220624 16:06:35.381"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.381" endtime="20220624 16:06:35.382"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.381" endtime="20220624 16:06:35.382"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.382" endtime="20220624 16:06:35.383"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.382" endtime="20220624 16:06:35.383"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.384" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.384" endtime="20220624 16:06:35.384"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.383" endtime="20220624 16:06:35.384"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.368" endtime="20220624 16:06:35.384"/>
</iter>
<iter>
<var name="${i}">16</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.385" endtime="20220624 16:06:35.385"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.385" endtime="20220624 16:06:35.385"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.384" endtime="20220624 16:06:35.385"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.385" endtime="20220624 16:06:35.385"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.386" endtime="20220624 16:06:35.386"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.396" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '199', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Maxi+Tablet&amp;descricao=10.1-inch+Multitouch+HD+Screen+%281280+x+800%29%2C+16GB+Internal+Memory%2C+Wireless+N+Wi-Fi%3B+Bluetooth%2C+GPS+Enabled%2C+1GHz+Dual-Core+Processor&amp;quantidade=999&amp;preco=749 
 </msg>
<msg timestamp="20220624 16:06:35.396" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f17cc0ae-2f2e-4d3b-85f3-3edce48e65c0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ZRzOB3olwrZP7xEa"
} 
 </msg>
<msg timestamp="20220624 16:06:35.396" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.386" endtime="20220624 16:06:35.396"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.397" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.396" endtime="20220624 16:06:35.397"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.398" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ZRzOB3olwrZP7xEa'}</msg>
<status status="PASS" starttime="20220624 16:06:35.397" endtime="20220624 16:06:35.398"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.385" endtime="20220624 16:06:35.398"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.399" endtime="20220624 16:06:35.399"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.398" endtime="20220624 16:06:35.399"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.399" endtime="20220624 16:06:35.400"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.399" endtime="20220624 16:06:35.400"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.401" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.401" endtime="20220624 16:06:35.401"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.401" endtime="20220624 16:06:35.402"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.384" endtime="20220624 16:06:35.402"/>
</iter>
<iter>
<var name="${i}">17</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.402" endtime="20220624 16:06:35.402"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.402" endtime="20220624 16:06:35.402"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.402" endtime="20220624 16:06:35.402"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.402" endtime="20220624 16:06:35.402"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.403" endtime="20220624 16:06:35.403"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.414" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '107', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Sound+Booster&amp;descricao=PC+multimedia+speakers+-+optimized+for+Blutooth%2FA2DP&amp;quantidade=999&amp;preco=45 
 </msg>
<msg timestamp="20220624 16:06:35.414" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '943f6259-4b60-4165-80a1-bba11e89fc75', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "qe7RSBXih8PwxPl8"
} 
 </msg>
<msg timestamp="20220624 16:06:35.414" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.403" endtime="20220624 16:06:35.414"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.415" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.415" endtime="20220624 16:06:35.415"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.416" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'qe7RSBXih8PwxPl8'}</msg>
<status status="PASS" starttime="20220624 16:06:35.415" endtime="20220624 16:06:35.416"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.403" endtime="20220624 16:06:35.416"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.416" endtime="20220624 16:06:35.417"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.416" endtime="20220624 16:06:35.417"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.417" endtime="20220624 16:06:35.418"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.417" endtime="20220624 16:06:35.418"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.419" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.418" endtime="20220624 16:06:35.419"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.418" endtime="20220624 16:06:35.419"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.402" endtime="20220624 16:06:35.419"/>
</iter>
<iter>
<var name="${i}">18</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.419" endtime="20220624 16:06:35.419"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.419" endtime="20220624 16:06:35.419"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.419" endtime="20220624 16:06:35.419"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.419" endtime="20220624 16:06:35.419"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.420" endtime="20220624 16:06:35.420"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.430" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '116', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Platinberry&amp;descricao=Our+new+multifunctional+Handheld+with+phone+function+in+platinum&amp;quantidade=999&amp;preco=549 
 </msg>
<msg timestamp="20220624 16:06:35.430" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f4acd9f4-5a4b-4173-8036-1377d470b0e9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "INAYXR7KbRCo2DKf"
} 
 </msg>
<msg timestamp="20220624 16:06:35.431" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.420" endtime="20220624 16:06:35.431"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.431" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.431" endtime="20220624 16:06:35.431"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.432" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'INAYXR7KbRCo2DKf'}</msg>
<status status="PASS" starttime="20220624 16:06:35.431" endtime="20220624 16:06:35.432"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.420" endtime="20220624 16:06:35.432"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.432" endtime="20220624 16:06:35.432"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.432" endtime="20220624 16:06:35.432"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.433" endtime="20220624 16:06:35.434"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.433" endtime="20220624 16:06:35.434"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.434" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.434" endtime="20220624 16:06:35.434"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.434" endtime="20220624 16:06:35.434"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.419" endtime="20220624 16:06:35.434"/>
</iter>
<iter>
<var name="${i}">19</var>
<if>
<branch type="IF" condition="${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}">
<kw name="Log To Console" library="BuiltIn">
<arg>Não Existem Mais Produtos Para Cadastrar</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.435" endtime="20220624 16:06:35.435"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:35.435" endtime="20220624 16:06:35.435"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.435" endtime="20220624 16:06:35.435"/>
</if>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${quantidade_ja_cadastrada}+${i} &gt;= ${quantidade_json}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.435" endtime="20220624 16:06:35.435"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produtos['produtos'][${quantidade_ja_cadastrada}+${i}]}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.436" endtime="20220624 16:06:35.436"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.448" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZ2luYTQ3QGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIjMDVIODZjUGMrIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.2enxQQIYPcEEd7jzZ-Li6-4sGDhfItyWYlLuYRAV9gs', 'Content-Length': '126', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Ergo+Screen+E-I&amp;descricao=Optimum+Hi-Resolution+max.+1920+x+1080+%40+85Hz%2C+Dot+Pitch%3A+0.27mm&amp;quantidade=999&amp;preco=230 
 </msg>
<msg timestamp="20220624 16:06:35.449" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e9106504-bef3-4a50-acf0-7c637d8a1d0e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "lhIaAKnyLoxLw9NE"
} 
 </msg>
<msg timestamp="20220624 16:06:35.449" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.436" endtime="20220624 16:06:35.449"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.449" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.449" endtime="20220624 16:06:35.449"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.450" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'lhIaAKnyLoxLw9NE'}</msg>
<status status="PASS" starttime="20220624 16:06:35.449" endtime="20220624 16:06:35.450"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.435" endtime="20220624 16:06:35.450"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.450" endtime="20220624 16:06:35.451"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.450" endtime="20220624 16:06:35.451"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.451" endtime="20220624 16:06:35.452"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.451" endtime="20220624 16:06:35.452"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.453" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.452" endtime="20220624 16:06:35.453"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.452" endtime="20220624 16:06:35.453"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.435" endtime="20220624 16:06:35.453"/>
</iter>
<status status="PASS" starttime="20220624 16:06:35.122" endtime="20220624 16:06:35.453"/>
</for>
<tag>Cadastar_20_Produtos</tag>
<tag>POST</tag>
<tag>POST_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:35.087" endtime="20220624 16:06:35.454"/>
</test>
<test id="s1-s3-s2-t3" name="Cenario: Tentar Cadastrar Produto Valido Nao Administrador" line="37">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.456" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.455" endtime="20220624 16:06:35.456"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.455" endtime="20220624 16:06:35.456"/>
</kw>
<kw name="Pegar Produto Nao Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${lista_de_produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.461" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.461" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cff989a9-b98e-4f09-a136-e833a77f3503', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.457" endtime="20220624 16:06:35.461"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.461" endtime="20220624 16:06:35.462"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.463" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.462" endtime="20220624 16:06:35.463"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.457" endtime="20220624 16:06:35.463"/>
</kw>
<msg timestamp="20220624 16:06:35.463" level="INFO">${lista_de_produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.456" endtime="20220624 16:06:35.463"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:35.464" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:35.464" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:35.463" endtime="20220624 16:06:35.464"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:35.465" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.464" endtime="20220624 16:06:35.465"/>
</kw>
<msg timestamp="20220624 16:06:35.465" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.463" endtime="20220624 16:06:35.465"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_itens}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:35.466" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:35.466" level="INFO">${quantidade_de_itens} = 122</msg>
<status status="PASS" starttime="20220624 16:06:35.465" endtime="20220624 16:06:35.466"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_de_itens}</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.467" endtime="20220624 16:06:35.467"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.467" endtime="20220624 16:06:35.467"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.467" endtime="20220624 16:06:35.467"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.466" endtime="20220624 16:06:35.467"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.466" endtime="20220624 16:06:35.467"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.468" endtime="20220624 16:06:35.468"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.468" endtime="20220624 16:06:35.468"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.468" endtime="20220624 16:06:35.468"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.467" endtime="20220624 16:06:35.468"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.467" endtime="20220624 16:06:35.468"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.469" endtime="20220624 16:06:35.469"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.469" endtime="20220624 16:06:35.469"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.469" endtime="20220624 16:06:35.469"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.468" endtime="20220624 16:06:35.469"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.468" endtime="20220624 16:06:35.469"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.470" endtime="20220624 16:06:35.470"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.470" endtime="20220624 16:06:35.470"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.470" endtime="20220624 16:06:35.470"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.470" endtime="20220624 16:06:35.471"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.470" endtime="20220624 16:06:35.471"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.471" endtime="20220624 16:06:35.472"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.472" endtime="20220624 16:06:35.472"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.471" endtime="20220624 16:06:35.472"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.471" endtime="20220624 16:06:35.472"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.471" endtime="20220624 16:06:35.472"/>
</iter>
<iter>
<var name="${i}">5</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.473" endtime="20220624 16:06:35.473"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.473" endtime="20220624 16:06:35.473"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.472" endtime="20220624 16:06:35.473"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.472" endtime="20220624 16:06:35.473"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.472" endtime="20220624 16:06:35.473"/>
</iter>
<iter>
<var name="${i}">6</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.474" endtime="20220624 16:06:35.474"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.474" endtime="20220624 16:06:35.474"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.474" endtime="20220624 16:06:35.474"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.473" endtime="20220624 16:06:35.474"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.473" endtime="20220624 16:06:35.474"/>
</iter>
<iter>
<var name="${i}">7</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.475" endtime="20220624 16:06:35.475"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.475" endtime="20220624 16:06:35.475"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.475" endtime="20220624 16:06:35.475"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.474" endtime="20220624 16:06:35.475"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.474" endtime="20220624 16:06:35.475"/>
</iter>
<iter>
<var name="${i}">8</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.476" endtime="20220624 16:06:35.476"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.476" endtime="20220624 16:06:35.476"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.476" endtime="20220624 16:06:35.477"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.476" endtime="20220624 16:06:35.477"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.475" endtime="20220624 16:06:35.477"/>
</iter>
<iter>
<var name="${i}">9</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.478" endtime="20220624 16:06:35.478"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.478" endtime="20220624 16:06:35.478"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.478" endtime="20220624 16:06:35.478"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.477" endtime="20220624 16:06:35.478"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.477" endtime="20220624 16:06:35.478"/>
</iter>
<iter>
<var name="${i}">10</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.479" endtime="20220624 16:06:35.479"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.479" endtime="20220624 16:06:35.479"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.479" endtime="20220624 16:06:35.479"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.478" endtime="20220624 16:06:35.479"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.478" endtime="20220624 16:06:35.479"/>
</iter>
<iter>
<var name="${i}">11</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.480" endtime="20220624 16:06:35.480"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.480" endtime="20220624 16:06:35.480"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.480" endtime="20220624 16:06:35.480"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.479" endtime="20220624 16:06:35.480"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.479" endtime="20220624 16:06:35.480"/>
</iter>
<iter>
<var name="${i}">12</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.481" endtime="20220624 16:06:35.481"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.481" endtime="20220624 16:06:35.481"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.481" endtime="20220624 16:06:35.481"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.480" endtime="20220624 16:06:35.481"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.480" endtime="20220624 16:06:35.481"/>
</iter>
<iter>
<var name="${i}">13</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.482" endtime="20220624 16:06:35.482"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.482" endtime="20220624 16:06:35.482"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.482" endtime="20220624 16:06:35.482"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.481" endtime="20220624 16:06:35.482"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.481" endtime="20220624 16:06:35.482"/>
</iter>
<iter>
<var name="${i}">14</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.483" endtime="20220624 16:06:35.483"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.483" endtime="20220624 16:06:35.483"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.483" endtime="20220624 16:06:35.483"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.482" endtime="20220624 16:06:35.483"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.482" endtime="20220624 16:06:35.483"/>
</iter>
<iter>
<var name="${i}">15</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.484" endtime="20220624 16:06:35.484"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.484" endtime="20220624 16:06:35.484"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.484" endtime="20220624 16:06:35.484"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.483" endtime="20220624 16:06:35.484"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.483" endtime="20220624 16:06:35.484"/>
</iter>
<iter>
<var name="${i}">16</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.485" endtime="20220624 16:06:35.485"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.486" endtime="20220624 16:06:35.486"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.485" endtime="20220624 16:06:35.486"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.485" endtime="20220624 16:06:35.486"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.485" endtime="20220624 16:06:35.486"/>
</iter>
<iter>
<var name="${i}">17</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.487" endtime="20220624 16:06:35.487"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.487" endtime="20220624 16:06:35.487"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.486" endtime="20220624 16:06:35.487"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.486" endtime="20220624 16:06:35.487"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.486" endtime="20220624 16:06:35.487"/>
</iter>
<iter>
<var name="${i}">18</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.488" endtime="20220624 16:06:35.488"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.488" endtime="20220624 16:06:35.488"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.488" endtime="20220624 16:06:35.488"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.487" endtime="20220624 16:06:35.488"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.487" endtime="20220624 16:06:35.488"/>
</iter>
<iter>
<var name="${i}">19</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.489" endtime="20220624 16:06:35.489"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.489" endtime="20220624 16:06:35.489"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.489" endtime="20220624 16:06:35.489"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.488" endtime="20220624 16:06:35.489"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.488" endtime="20220624 16:06:35.489"/>
</iter>
<iter>
<var name="${i}">20</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.490" endtime="20220624 16:06:35.490"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.490" endtime="20220624 16:06:35.490"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.490" endtime="20220624 16:06:35.490"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.489" endtime="20220624 16:06:35.490"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.489" endtime="20220624 16:06:35.490"/>
</iter>
<iter>
<var name="${i}">21</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.491" endtime="20220624 16:06:35.491"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.491" endtime="20220624 16:06:35.491"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.491" endtime="20220624 16:06:35.491"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.490" endtime="20220624 16:06:35.492"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.490" endtime="20220624 16:06:35.492"/>
</iter>
<iter>
<var name="${i}">22</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.493" endtime="20220624 16:06:35.493"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.493" endtime="20220624 16:06:35.493"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.493" endtime="20220624 16:06:35.493"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.492" endtime="20220624 16:06:35.493"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.492" endtime="20220624 16:06:35.493"/>
</iter>
<iter>
<var name="${i}">23</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.494" endtime="20220624 16:06:35.494"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.494" endtime="20220624 16:06:35.494"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.494" endtime="20220624 16:06:35.494"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.493" endtime="20220624 16:06:35.494"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.493" endtime="20220624 16:06:35.494"/>
</iter>
<iter>
<var name="${i}">24</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.495" endtime="20220624 16:06:35.495"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.495" endtime="20220624 16:06:35.495"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.495" endtime="20220624 16:06:35.496"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.495" endtime="20220624 16:06:35.496"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.494" endtime="20220624 16:06:35.496"/>
</iter>
<iter>
<var name="${i}">25</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.497" endtime="20220624 16:06:35.497"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.497" endtime="20220624 16:06:35.497"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.496" endtime="20220624 16:06:35.497"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.496" endtime="20220624 16:06:35.497"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.496" endtime="20220624 16:06:35.497"/>
</iter>
<iter>
<var name="${i}">26</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.498" endtime="20220624 16:06:35.498"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.498" endtime="20220624 16:06:35.498"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.498" endtime="20220624 16:06:35.498"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.497" endtime="20220624 16:06:35.498"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.497" endtime="20220624 16:06:35.498"/>
</iter>
<iter>
<var name="${i}">27</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.499" endtime="20220624 16:06:35.499"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.499" endtime="20220624 16:06:35.499"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.499" endtime="20220624 16:06:35.499"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.498" endtime="20220624 16:06:35.499"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.498" endtime="20220624 16:06:35.499"/>
</iter>
<iter>
<var name="${i}">28</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.500" endtime="20220624 16:06:35.500"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.500" endtime="20220624 16:06:35.500"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.500" endtime="20220624 16:06:35.500"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.499" endtime="20220624 16:06:35.500"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.499" endtime="20220624 16:06:35.500"/>
</iter>
<iter>
<var name="${i}">29</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.501" endtime="20220624 16:06:35.501"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.501" endtime="20220624 16:06:35.501"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.501" endtime="20220624 16:06:35.501"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.500" endtime="20220624 16:06:35.501"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.500" endtime="20220624 16:06:35.501"/>
</iter>
<iter>
<var name="${i}">30</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.502" endtime="20220624 16:06:35.502"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.502" endtime="20220624 16:06:35.502"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.502" endtime="20220624 16:06:35.502"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.501" endtime="20220624 16:06:35.502"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.501" endtime="20220624 16:06:35.502"/>
</iter>
<iter>
<var name="${i}">31</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.503" endtime="20220624 16:06:35.503"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.503" endtime="20220624 16:06:35.503"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.503" endtime="20220624 16:06:35.503"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.502" endtime="20220624 16:06:35.504"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.502" endtime="20220624 16:06:35.504"/>
</iter>
<iter>
<var name="${i}">32</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.504" endtime="20220624 16:06:35.505"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.505" endtime="20220624 16:06:35.505"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.504" endtime="20220624 16:06:35.505"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.504" endtime="20220624 16:06:35.505"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.504" endtime="20220624 16:06:35.505"/>
</iter>
<iter>
<var name="${i}">33</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.506" endtime="20220624 16:06:35.506"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.506" endtime="20220624 16:06:35.506"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.505" endtime="20220624 16:06:35.506"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.505" endtime="20220624 16:06:35.506"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.505" endtime="20220624 16:06:35.506"/>
</iter>
<iter>
<var name="${i}">34</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.507" endtime="20220624 16:06:35.507"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.507" endtime="20220624 16:06:35.507"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.507" endtime="20220624 16:06:35.507"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.506" endtime="20220624 16:06:35.507"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.506" endtime="20220624 16:06:35.507"/>
</iter>
<iter>
<var name="${i}">35</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.508" endtime="20220624 16:06:35.508"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.508" endtime="20220624 16:06:35.508"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.508" endtime="20220624 16:06:35.508"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.507" endtime="20220624 16:06:35.508"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.507" endtime="20220624 16:06:35.509"/>
</iter>
<iter>
<var name="${i}">36</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.509" endtime="20220624 16:06:35.510"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.510" endtime="20220624 16:06:35.510"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.509" endtime="20220624 16:06:35.510"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.509" endtime="20220624 16:06:35.510"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.509" endtime="20220624 16:06:35.510"/>
</iter>
<iter>
<var name="${i}">37</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.511" endtime="20220624 16:06:35.511"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.511" endtime="20220624 16:06:35.511"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.510" endtime="20220624 16:06:35.511"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.510" endtime="20220624 16:06:35.511"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.510" endtime="20220624 16:06:35.511"/>
</iter>
<iter>
<var name="${i}">38</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.512" endtime="20220624 16:06:35.512"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.512" endtime="20220624 16:06:35.512"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.512" endtime="20220624 16:06:35.512"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.511" endtime="20220624 16:06:35.512"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.511" endtime="20220624 16:06:35.512"/>
</iter>
<iter>
<var name="${i}">39</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.513" endtime="20220624 16:06:35.513"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.513" endtime="20220624 16:06:35.513"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.513" endtime="20220624 16:06:35.513"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.512" endtime="20220624 16:06:35.513"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.512" endtime="20220624 16:06:35.513"/>
</iter>
<iter>
<var name="${i}">40</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.514" endtime="20220624 16:06:35.514"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.514" endtime="20220624 16:06:35.514"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.514" endtime="20220624 16:06:35.514"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.513" endtime="20220624 16:06:35.514"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.513" endtime="20220624 16:06:35.514"/>
</iter>
<iter>
<var name="${i}">41</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.515" endtime="20220624 16:06:35.515"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.515" endtime="20220624 16:06:35.515"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.515" endtime="20220624 16:06:35.515"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.514" endtime="20220624 16:06:35.515"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.514" endtime="20220624 16:06:35.515"/>
</iter>
<iter>
<var name="${i}">42</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.516" endtime="20220624 16:06:35.516"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.516" endtime="20220624 16:06:35.516"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.516" endtime="20220624 16:06:35.516"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.515" endtime="20220624 16:06:35.516"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.515" endtime="20220624 16:06:35.516"/>
</iter>
<iter>
<var name="${i}">43</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.517" endtime="20220624 16:06:35.517"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.517" endtime="20220624 16:06:35.517"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.517" endtime="20220624 16:06:35.517"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.516" endtime="20220624 16:06:35.517"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.516" endtime="20220624 16:06:35.517"/>
</iter>
<iter>
<var name="${i}">44</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.518" endtime="20220624 16:06:35.518"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.518" endtime="20220624 16:06:35.518"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.518" endtime="20220624 16:06:35.518"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.517" endtime="20220624 16:06:35.518"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.517" endtime="20220624 16:06:35.518"/>
</iter>
<iter>
<var name="${i}">45</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.519" endtime="20220624 16:06:35.519"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.519" endtime="20220624 16:06:35.519"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.519" endtime="20220624 16:06:35.519"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.518" endtime="20220624 16:06:35.519"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.518" endtime="20220624 16:06:35.519"/>
</iter>
<iter>
<var name="${i}">46</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.521" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:35.520" endtime="20220624 16:06:35.521"/>
</kw>
<break>
<status status="PASS" starttime="20220624 16:06:35.521" endtime="20220624 16:06:35.521"/>
</break>
<status status="PASS" starttime="20220624 16:06:35.520" endtime="20220624 16:06:35.521"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.519" endtime="20220624 16:06:35.521"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.519" endtime="20220624 16:06:35.521"/>
</iter>
<status status="PASS" starttime="20220624 16:06:35.466" endtime="20220624 16:06:35.521"/>
</for>
<msg timestamp="20220624 16:06:35.522" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:35.456" endtime="20220624 16:06:35.522"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.524" level="INFO">${nome} = Leon Banks DVM</msg>
<status status="PASS" starttime="20220624 16:06:35.523" endtime="20220624 16:06:35.524"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.524" level="INFO">${email} = paulariley@example.com</msg>
<status status="PASS" starttime="20220624 16:06:35.524" endtime="20220624 16:06:35.524"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.524" level="INFO">${senha} = ^7Q&amp;plz^!9</msg>
<status status="PASS" starttime="20220624 16:06:35.524" endtime="20220624 16:06:35.524"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.525" level="INFO">&amp;{usuario} = { nome=Leon Banks DVM | email=paulariley@example.com | password=^7Q&amp;plz^!9 | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:35.525" endtime="20220624 16:06:35.525"/>
</kw>
<msg timestamp="20220624 16:06:35.525" level="INFO">${usuario} = {'nome': 'Leon Banks DVM', 'email': 'paulariley@example.com', 'password': '^7Q&amp;plz^!9', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:35.523" endtime="20220624 16:06:35.525"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.526" endtime="20220624 16:06:35.526"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.531" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '98', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Leon+Banks+DVM&amp;email=paulariley%40example.com&amp;password=%5E7Q%26plz%5E%219&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:35.531" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c288e355-5ec1-428b-a26a-580123408d42', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "KW4TkbTbK3lRmze4"
} 
 </msg>
<msg timestamp="20220624 16:06:35.531" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.526" endtime="20220624 16:06:35.531"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.532" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.531" endtime="20220624 16:06:35.532"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.532" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'KW4TkbTbK3lRmze4'}</msg>
<status status="PASS" starttime="20220624 16:06:35.532" endtime="20220624 16:06:35.533"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.525" endtime="20220624 16:06:35.533"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.533" endtime="20220624 16:06:35.534"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.533" endtime="20220624 16:06:35.534"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.534" endtime="20220624 16:06:35.535"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.534" endtime="20220624 16:06:35.535"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.535" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.535" endtime="20220624 16:06:35.535"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.535" endtime="20220624 16:06:35.536"/>
</kw>
<msg timestamp="20220624 16:06:35.536" level="INFO">${usuario_valido} = {'nome': 'Leon Banks DVM', 'email': 'paulariley@example.com', 'password': '^7Q&amp;plz^!9', 'administrador': 'false', '_id': 'KW4TkbTbK3lRmze4'}</msg>
<status status="PASS" starttime="20220624 16:06:35.523" endtime="20220624 16:06:35.536"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.536" level="INFO">Removed item with key 'nome' and value 'Leon Banks DVM'.</msg>
<msg timestamp="20220624 16:06:35.536" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:35.536" level="INFO">Removed item with key '_id' and value 'KW4TkbTbK3lRmze4'.</msg>
<status status="PASS" starttime="20220624 16:06:35.536" endtime="20220624 16:06:35.536"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.537" endtime="20220624 16:06:35.537"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.542" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '58', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=paulariley%40example.com&amp;password=%5E7Q%26plz%5E%219 
 </msg>
<msg timestamp="20220624 16:06:35.542" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd98aabd1-fbbd-4a46-b3cb-8cc43b6f25ae', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '284', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdWxhcmlsZXlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Il43USZwbHpeITkiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.2IKHEWt_eyh1qDWrkVtrbryKeMQDwq4TFD0OzZY51IE"
} 
 </msg>
<msg timestamp="20220624 16:06:35.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.537" endtime="20220624 16:06:35.542"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.542" endtime="20220624 16:06:35.543"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.543" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdWxhcmlsZXlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Il43USZwbHpeITkiLCJpYXQiOjE2NTYwOTc...</msg>
<status status="PASS" starttime="20220624 16:06:35.543" endtime="20220624 16:06:35.543"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.536" endtime="20220624 16:06:35.543"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.544" endtime="20220624 16:06:35.544"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.543" endtime="20220624 16:06:35.545"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.545" endtime="20220624 16:06:35.545"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.545" endtime="20220624 16:06:35.545"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.546" level="INFO">Length is 211</msg>
<status status="PASS" starttime="20220624 16:06:35.546" endtime="20220624 16:06:35.546"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.545" endtime="20220624 16:06:35.546"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.547" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdWxhcmlsZXlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Il43USZwbHpeITkiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.2IKHEWt_eyh1qDWr...</msg>
<status status="PASS" starttime="20220624 16:06:35.546" endtime="20220624 16:06:35.547"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.547" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdWxhcmlsZXlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Il43USZwbHpeITkiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.2IKHEWt_eyh1q...</msg>
<status status="PASS" starttime="20220624 16:06:35.547" endtime="20220624 16:06:35.547"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.522" endtime="20220624 16:06:35.547"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.548" endtime="20220624 16:06:35.548"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.551" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdWxhcmlsZXlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Il43USZwbHpeITkiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.2IKHEWt_eyh1qDWrkVtrbryKeMQDwq4TFD0OzZY51IE', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=ITelo+MusicStick&amp;descricao=64+GB+USB+Music-on-Available-Stick&amp;quantidade=999&amp;preco=45 
 </msg>
<msg timestamp="20220624 16:06:35.551" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=403, reason=Forbidden 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e5a16edd-e00a-4d9c-ab02-adb16c42d470', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Rota exclusiva para administradores"
} 
 </msg>
<msg timestamp="20220624 16:06:35.552" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.548" endtime="20220624 16:06:35.552"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.552" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.552" endtime="20220624 16:06:35.552"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.553" level="INFO">${response_body} = {'message': 'Rota exclusiva para administradores'}</msg>
<status status="PASS" starttime="20220624 16:06:35.552" endtime="20220624 16:06:35.553"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.548" endtime="20220624 16:06:35.553"/>
</kw>
<kw name="Validar Mensagem &quot;Rota exclusiva para administradores&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.553" endtime="20220624 16:06:35.554"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.553" endtime="20220624 16:06:35.554"/>
</kw>
<kw name="Validar Status Code &quot;403&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.555" endtime="20220624 16:06:35.555"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.554" endtime="20220624 16:06:35.556"/>
</kw>
<tag>Cadastar_Produto_Valido_Nao_Administrador</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.455" endtime="20220624 16:06:35.556"/>
</test>
<test id="s1-s3-s2-t4" name="Cenario: Tentar Cadastar Produto Nao Autenticado" line="45">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.558" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.558" endtime="20220624 16:06:35.558"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.558" endtime="20220624 16:06:35.558"/>
</kw>
<kw name="Pegar Produto Nao Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${lista_de_produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.563" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.563" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3c05ff3c-b666-4a7f-b5dd-00fabc81c1fe', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.559" endtime="20220624 16:06:35.563"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.563" endtime="20220624 16:06:35.564"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.565" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.564" endtime="20220624 16:06:35.565"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.559" endtime="20220624 16:06:35.565"/>
</kw>
<msg timestamp="20220624 16:06:35.566" level="INFO">${lista_de_produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.559" endtime="20220624 16:06:35.566"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:35.566" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:35.567" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:35.566" endtime="20220624 16:06:35.567"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:35.567" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.567" endtime="20220624 16:06:35.567"/>
</kw>
<msg timestamp="20220624 16:06:35.568" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.566" endtime="20220624 16:06:35.568"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_itens}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:35.568" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:35.568" level="INFO">${quantidade_de_itens} = 122</msg>
<status status="PASS" starttime="20220624 16:06:35.568" endtime="20220624 16:06:35.568"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_de_itens}</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.569" endtime="20220624 16:06:35.569"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.569" endtime="20220624 16:06:35.569"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.569" endtime="20220624 16:06:35.569"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.569" endtime="20220624 16:06:35.570"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.569" endtime="20220624 16:06:35.570"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.571" endtime="20220624 16:06:35.571"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.571" endtime="20220624 16:06:35.571"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.570" endtime="20220624 16:06:35.571"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.570" endtime="20220624 16:06:35.571"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.570" endtime="20220624 16:06:35.571"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.572" endtime="20220624 16:06:35.572"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.572" endtime="20220624 16:06:35.572"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.572" endtime="20220624 16:06:35.572"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.571" endtime="20220624 16:06:35.572"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.571" endtime="20220624 16:06:35.572"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.573" endtime="20220624 16:06:35.573"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.573" endtime="20220624 16:06:35.573"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.573" endtime="20220624 16:06:35.573"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.572" endtime="20220624 16:06:35.573"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.572" endtime="20220624 16:06:35.573"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.574" endtime="20220624 16:06:35.574"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.574" endtime="20220624 16:06:35.574"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.574" endtime="20220624 16:06:35.574"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.573" endtime="20220624 16:06:35.574"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.573" endtime="20220624 16:06:35.574"/>
</iter>
<iter>
<var name="${i}">5</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.575" endtime="20220624 16:06:35.575"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.575" endtime="20220624 16:06:35.575"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.575" endtime="20220624 16:06:35.575"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.574" endtime="20220624 16:06:35.575"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.574" endtime="20220624 16:06:35.575"/>
</iter>
<iter>
<var name="${i}">6</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.576" endtime="20220624 16:06:35.576"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.576" endtime="20220624 16:06:35.576"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.576" endtime="20220624 16:06:35.576"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.575" endtime="20220624 16:06:35.576"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.575" endtime="20220624 16:06:35.576"/>
</iter>
<iter>
<var name="${i}">7</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.577" endtime="20220624 16:06:35.577"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.577" endtime="20220624 16:06:35.577"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.577" endtime="20220624 16:06:35.577"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.576" endtime="20220624 16:06:35.577"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.576" endtime="20220624 16:06:35.577"/>
</iter>
<iter>
<var name="${i}">8</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.578" endtime="20220624 16:06:35.578"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.578" endtime="20220624 16:06:35.578"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.578" endtime="20220624 16:06:35.578"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.577" endtime="20220624 16:06:35.578"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.577" endtime="20220624 16:06:35.578"/>
</iter>
<iter>
<var name="${i}">9</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.579" endtime="20220624 16:06:35.579"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.579" endtime="20220624 16:06:35.579"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.579" endtime="20220624 16:06:35.579"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.578" endtime="20220624 16:06:35.579"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.578" endtime="20220624 16:06:35.579"/>
</iter>
<iter>
<var name="${i}">10</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.580" endtime="20220624 16:06:35.580"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.580" endtime="20220624 16:06:35.580"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.580" endtime="20220624 16:06:35.580"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.579" endtime="20220624 16:06:35.580"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.579" endtime="20220624 16:06:35.580"/>
</iter>
<iter>
<var name="${i}">11</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.581" endtime="20220624 16:06:35.581"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.581" endtime="20220624 16:06:35.581"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.581" endtime="20220624 16:06:35.581"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.581" endtime="20220624 16:06:35.581"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.581" endtime="20220624 16:06:35.582"/>
</iter>
<iter>
<var name="${i}">12</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.582" endtime="20220624 16:06:35.582"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.583" endtime="20220624 16:06:35.583"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.582" endtime="20220624 16:06:35.583"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.582" endtime="20220624 16:06:35.583"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.582" endtime="20220624 16:06:35.583"/>
</iter>
<iter>
<var name="${i}">13</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.584" endtime="20220624 16:06:35.584"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.584" endtime="20220624 16:06:35.584"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.583" endtime="20220624 16:06:35.584"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.583" endtime="20220624 16:06:35.584"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.583" endtime="20220624 16:06:35.584"/>
</iter>
<iter>
<var name="${i}">14</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.585" endtime="20220624 16:06:35.585"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.585" endtime="20220624 16:06:35.585"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.584" endtime="20220624 16:06:35.585"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.584" endtime="20220624 16:06:35.585"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.584" endtime="20220624 16:06:35.585"/>
</iter>
<iter>
<var name="${i}">15</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.586" endtime="20220624 16:06:35.586"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.586" endtime="20220624 16:06:35.586"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.586" endtime="20220624 16:06:35.586"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.585" endtime="20220624 16:06:35.586"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.585" endtime="20220624 16:06:35.586"/>
</iter>
<iter>
<var name="${i}">16</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.587" endtime="20220624 16:06:35.587"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.587" endtime="20220624 16:06:35.587"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.587" endtime="20220624 16:06:35.587"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.586" endtime="20220624 16:06:35.587"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.586" endtime="20220624 16:06:35.587"/>
</iter>
<iter>
<var name="${i}">17</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.588" endtime="20220624 16:06:35.588"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.588" endtime="20220624 16:06:35.588"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.588" endtime="20220624 16:06:35.588"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.587" endtime="20220624 16:06:35.588"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.587" endtime="20220624 16:06:35.588"/>
</iter>
<iter>
<var name="${i}">18</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.589" endtime="20220624 16:06:35.589"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.589" endtime="20220624 16:06:35.589"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.589" endtime="20220624 16:06:35.589"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.588" endtime="20220624 16:06:35.589"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.588" endtime="20220624 16:06:35.589"/>
</iter>
<iter>
<var name="${i}">19</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.590" endtime="20220624 16:06:35.590"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.590" endtime="20220624 16:06:35.590"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.590" endtime="20220624 16:06:35.590"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.589" endtime="20220624 16:06:35.590"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.589" endtime="20220624 16:06:35.590"/>
</iter>
<iter>
<var name="${i}">20</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.591" endtime="20220624 16:06:35.591"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.591" endtime="20220624 16:06:35.591"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.591" endtime="20220624 16:06:35.591"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.590" endtime="20220624 16:06:35.591"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.590" endtime="20220624 16:06:35.591"/>
</iter>
<iter>
<var name="${i}">21</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.592" endtime="20220624 16:06:35.592"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.592" endtime="20220624 16:06:35.592"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.592" endtime="20220624 16:06:35.592"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.591" endtime="20220624 16:06:35.592"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.591" endtime="20220624 16:06:35.592"/>
</iter>
<iter>
<var name="${i}">22</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.593" endtime="20220624 16:06:35.593"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.593" endtime="20220624 16:06:35.593"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.593" endtime="20220624 16:06:35.593"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.592" endtime="20220624 16:06:35.593"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.592" endtime="20220624 16:06:35.593"/>
</iter>
<iter>
<var name="${i}">23</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.594" endtime="20220624 16:06:35.594"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.594" endtime="20220624 16:06:35.594"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.594" endtime="20220624 16:06:35.594"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.594" endtime="20220624 16:06:35.594"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.594" endtime="20220624 16:06:35.595"/>
</iter>
<iter>
<var name="${i}">24</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.595" endtime="20220624 16:06:35.595"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.595" endtime="20220624 16:06:35.596"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.595" endtime="20220624 16:06:35.596"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.595" endtime="20220624 16:06:35.596"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.595" endtime="20220624 16:06:35.596"/>
</iter>
<iter>
<var name="${i}">25</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.597" endtime="20220624 16:06:35.597"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.597" endtime="20220624 16:06:35.597"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.597" endtime="20220624 16:06:35.597"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.596" endtime="20220624 16:06:35.597"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.596" endtime="20220624 16:06:35.597"/>
</iter>
<iter>
<var name="${i}">26</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.598" endtime="20220624 16:06:35.598"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.598" endtime="20220624 16:06:35.598"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.598" endtime="20220624 16:06:35.598"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.597" endtime="20220624 16:06:35.598"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.597" endtime="20220624 16:06:35.598"/>
</iter>
<iter>
<var name="${i}">27</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.599" endtime="20220624 16:06:35.599"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.599" endtime="20220624 16:06:35.599"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.599" endtime="20220624 16:06:35.599"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.598" endtime="20220624 16:06:35.599"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.598" endtime="20220624 16:06:35.599"/>
</iter>
<iter>
<var name="${i}">28</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.600" endtime="20220624 16:06:35.600"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.600" endtime="20220624 16:06:35.600"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.600" endtime="20220624 16:06:35.600"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.599" endtime="20220624 16:06:35.600"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.599" endtime="20220624 16:06:35.600"/>
</iter>
<iter>
<var name="${i}">29</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.601" endtime="20220624 16:06:35.601"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.601" endtime="20220624 16:06:35.601"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.601" endtime="20220624 16:06:35.601"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.600" endtime="20220624 16:06:35.601"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.600" endtime="20220624 16:06:35.601"/>
</iter>
<iter>
<var name="${i}">30</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.602" endtime="20220624 16:06:35.602"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.602" endtime="20220624 16:06:35.602"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.602" endtime="20220624 16:06:35.602"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.601" endtime="20220624 16:06:35.602"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.601" endtime="20220624 16:06:35.602"/>
</iter>
<iter>
<var name="${i}">31</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.603" endtime="20220624 16:06:35.603"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.603" endtime="20220624 16:06:35.603"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.603" endtime="20220624 16:06:35.603"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.602" endtime="20220624 16:06:35.603"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.602" endtime="20220624 16:06:35.603"/>
</iter>
<iter>
<var name="${i}">32</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.604" endtime="20220624 16:06:35.604"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.604" endtime="20220624 16:06:35.604"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.604" endtime="20220624 16:06:35.604"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.603" endtime="20220624 16:06:35.604"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.603" endtime="20220624 16:06:35.604"/>
</iter>
<iter>
<var name="${i}">33</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.605" endtime="20220624 16:06:35.605"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.605" endtime="20220624 16:06:35.605"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.605" endtime="20220624 16:06:35.605"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.604" endtime="20220624 16:06:35.605"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.604" endtime="20220624 16:06:35.605"/>
</iter>
<iter>
<var name="${i}">34</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.606" endtime="20220624 16:06:35.606"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.606" endtime="20220624 16:06:35.606"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.606" endtime="20220624 16:06:35.606"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.605" endtime="20220624 16:06:35.606"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.605" endtime="20220624 16:06:35.606"/>
</iter>
<iter>
<var name="${i}">35</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.607" endtime="20220624 16:06:35.607"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.607" endtime="20220624 16:06:35.607"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.607" endtime="20220624 16:06:35.607"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.606" endtime="20220624 16:06:35.607"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.606" endtime="20220624 16:06:35.607"/>
</iter>
<iter>
<var name="${i}">36</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.608" endtime="20220624 16:06:35.608"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.608" endtime="20220624 16:06:35.608"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.608" endtime="20220624 16:06:35.608"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.607" endtime="20220624 16:06:35.608"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.607" endtime="20220624 16:06:35.608"/>
</iter>
<iter>
<var name="${i}">37</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.609" endtime="20220624 16:06:35.609"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.609" endtime="20220624 16:06:35.609"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.609" endtime="20220624 16:06:35.609"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.608" endtime="20220624 16:06:35.609"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.608" endtime="20220624 16:06:35.609"/>
</iter>
<iter>
<var name="${i}">38</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.610" endtime="20220624 16:06:35.610"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.610" endtime="20220624 16:06:35.610"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.610" endtime="20220624 16:06:35.610"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.610" endtime="20220624 16:06:35.610"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.610" endtime="20220624 16:06:35.611"/>
</iter>
<iter>
<var name="${i}">39</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.611" endtime="20220624 16:06:35.611"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.612" endtime="20220624 16:06:35.612"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.611" endtime="20220624 16:06:35.612"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.611" endtime="20220624 16:06:35.612"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.611" endtime="20220624 16:06:35.612"/>
</iter>
<iter>
<var name="${i}">40</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.613" endtime="20220624 16:06:35.613"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.613" endtime="20220624 16:06:35.613"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.612" endtime="20220624 16:06:35.613"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.612" endtime="20220624 16:06:35.613"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.612" endtime="20220624 16:06:35.613"/>
</iter>
<iter>
<var name="${i}">41</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.614" endtime="20220624 16:06:35.614"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.614" endtime="20220624 16:06:35.614"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.613" endtime="20220624 16:06:35.614"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.613" endtime="20220624 16:06:35.614"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.613" endtime="20220624 16:06:35.614"/>
</iter>
<iter>
<var name="${i}">42</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.615" endtime="20220624 16:06:35.615"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.615" endtime="20220624 16:06:35.615"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.615" endtime="20220624 16:06:35.615"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.614" endtime="20220624 16:06:35.615"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.614" endtime="20220624 16:06:35.615"/>
</iter>
<iter>
<var name="${i}">43</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.616" endtime="20220624 16:06:35.616"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.616" endtime="20220624 16:06:35.616"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.616" endtime="20220624 16:06:35.616"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.615" endtime="20220624 16:06:35.616"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.615" endtime="20220624 16:06:35.616"/>
</iter>
<iter>
<var name="${i}">44</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.617" endtime="20220624 16:06:35.617"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.617" endtime="20220624 16:06:35.617"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.617" endtime="20220624 16:06:35.617"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.616" endtime="20220624 16:06:35.617"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.616" endtime="20220624 16:06:35.617"/>
</iter>
<iter>
<var name="${i}">45</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.618" endtime="20220624 16:06:35.618"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.618" endtime="20220624 16:06:35.618"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.618" endtime="20220624 16:06:35.618"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.617" endtime="20220624 16:06:35.618"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.617" endtime="20220624 16:06:35.618"/>
</iter>
<iter>
<var name="${i}">46</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.620" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:35.619" endtime="20220624 16:06:35.620"/>
</kw>
<break>
<status status="PASS" starttime="20220624 16:06:35.620" endtime="20220624 16:06:35.620"/>
</break>
<status status="PASS" starttime="20220624 16:06:35.619" endtime="20220624 16:06:35.620"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.618" endtime="20220624 16:06:35.620"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.618" endtime="20220624 16:06:35.620"/>
</iter>
<status status="PASS" starttime="20220624 16:06:35.568" endtime="20220624 16:06:35.620"/>
</for>
<msg timestamp="20220624 16:06:35.620" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:35.559" endtime="20220624 16:06:35.620"/>
</kw>
<kw name="POST EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.621" endtime="20220624 16:06:35.621"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.624" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=ITelo+MusicStick&amp;descricao=64+GB+USB+Music-on-Available-Stick&amp;quantidade=999&amp;preco=45 
 </msg>
<msg timestamp="20220624 16:06:35.624" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'df241dd5-d744-4fd6-9e25-e091d9e8729a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:35.624" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.621" endtime="20220624 16:06:35.624"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.625" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.624" endtime="20220624 16:06:35.625"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.625" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:35.625" endtime="20220624 16:06:35.625"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.621" endtime="20220624 16:06:35.625"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.626" endtime="20220624 16:06:35.627"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.626" endtime="20220624 16:06:35.627"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.628" endtime="20220624 16:06:35.628"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.627" endtime="20220624 16:06:35.628"/>
</kw>
<tag>Cadastar_Produto_Nao_Autenticado</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.557" endtime="20220624 16:06:35.629"/>
</test>
<test id="s1-s3-s2-t5" name="Cenario: Tentar Cadastrar Produto Com Token Invalido" line="52">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.631" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.631" endtime="20220624 16:06:35.631"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.630" endtime="20220624 16:06:35.631"/>
</kw>
<kw name="Pegar Produto Nao Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${lista_de_produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.636" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.636" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f2bf1459-722f-4295-a1c4-53f6c7475818', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.632" endtime="20220624 16:06:35.636"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.636" endtime="20220624 16:06:35.637"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.638" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.637" endtime="20220624 16:06:35.638"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.632" endtime="20220624 16:06:35.638"/>
</kw>
<msg timestamp="20220624 16:06:35.638" level="INFO">${lista_de_produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.632" endtime="20220624 16:06:35.638"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:35.639" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:35.639" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:35.638" endtime="20220624 16:06:35.639"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:35.640" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.639" endtime="20220624 16:06:35.640"/>
</kw>
<msg timestamp="20220624 16:06:35.640" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:35.638" endtime="20220624 16:06:35.640"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_itens}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:35.641" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:35.641" level="INFO">${quantidade_de_itens} = 122</msg>
<status status="PASS" starttime="20220624 16:06:35.641" endtime="20220624 16:06:35.641"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_de_itens}</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.642" endtime="20220624 16:06:35.642"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.642" endtime="20220624 16:06:35.642"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.642" endtime="20220624 16:06:35.642"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.641" endtime="20220624 16:06:35.642"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.641" endtime="20220624 16:06:35.642"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.643" endtime="20220624 16:06:35.643"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.643" endtime="20220624 16:06:35.643"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.643" endtime="20220624 16:06:35.643"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.642" endtime="20220624 16:06:35.643"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.642" endtime="20220624 16:06:35.643"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.644" endtime="20220624 16:06:35.644"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.644" endtime="20220624 16:06:35.644"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.644" endtime="20220624 16:06:35.644"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.643" endtime="20220624 16:06:35.644"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.643" endtime="20220624 16:06:35.644"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.645" endtime="20220624 16:06:35.645"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.645" endtime="20220624 16:06:35.645"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.645" endtime="20220624 16:06:35.645"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.644" endtime="20220624 16:06:35.645"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.644" endtime="20220624 16:06:35.645"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.646" endtime="20220624 16:06:35.646"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.646" endtime="20220624 16:06:35.646"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.646" endtime="20220624 16:06:35.646"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.645" endtime="20220624 16:06:35.646"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.645" endtime="20220624 16:06:35.646"/>
</iter>
<iter>
<var name="${i}">5</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.647" endtime="20220624 16:06:35.647"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.647" endtime="20220624 16:06:35.647"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.647" endtime="20220624 16:06:35.648"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.647" endtime="20220624 16:06:35.648"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.647" endtime="20220624 16:06:35.648"/>
</iter>
<iter>
<var name="${i}">6</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.648" endtime="20220624 16:06:35.649"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.649" endtime="20220624 16:06:35.649"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.648" endtime="20220624 16:06:35.649"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.648" endtime="20220624 16:06:35.649"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.648" endtime="20220624 16:06:35.649"/>
</iter>
<iter>
<var name="${i}">7</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.650" endtime="20220624 16:06:35.650"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.650" endtime="20220624 16:06:35.650"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.649" endtime="20220624 16:06:35.650"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.649" endtime="20220624 16:06:35.650"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.649" endtime="20220624 16:06:35.650"/>
</iter>
<iter>
<var name="${i}">8</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.651" endtime="20220624 16:06:35.651"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.651" endtime="20220624 16:06:35.651"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.651" endtime="20220624 16:06:35.651"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.650" endtime="20220624 16:06:35.651"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.650" endtime="20220624 16:06:35.651"/>
</iter>
<iter>
<var name="${i}">9</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.652" endtime="20220624 16:06:35.652"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.652" endtime="20220624 16:06:35.652"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.652" endtime="20220624 16:06:35.652"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.651" endtime="20220624 16:06:35.652"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.651" endtime="20220624 16:06:35.652"/>
</iter>
<iter>
<var name="${i}">10</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.653" endtime="20220624 16:06:35.653"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.653" endtime="20220624 16:06:35.653"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.653" endtime="20220624 16:06:35.653"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.652" endtime="20220624 16:06:35.653"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.652" endtime="20220624 16:06:35.653"/>
</iter>
<iter>
<var name="${i}">11</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.654" endtime="20220624 16:06:35.654"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.654" endtime="20220624 16:06:35.654"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.654" endtime="20220624 16:06:35.654"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.653" endtime="20220624 16:06:35.654"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.653" endtime="20220624 16:06:35.654"/>
</iter>
<iter>
<var name="${i}">12</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.655" endtime="20220624 16:06:35.655"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.655" endtime="20220624 16:06:35.655"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.655" endtime="20220624 16:06:35.655"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.654" endtime="20220624 16:06:35.655"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.654" endtime="20220624 16:06:35.655"/>
</iter>
<iter>
<var name="${i}">13</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.656" endtime="20220624 16:06:35.656"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.656" endtime="20220624 16:06:35.656"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.656" endtime="20220624 16:06:35.656"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.655" endtime="20220624 16:06:35.656"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.655" endtime="20220624 16:06:35.656"/>
</iter>
<iter>
<var name="${i}">14</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.657" endtime="20220624 16:06:35.657"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.657" endtime="20220624 16:06:35.657"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.657" endtime="20220624 16:06:35.657"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.656" endtime="20220624 16:06:35.657"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.656" endtime="20220624 16:06:35.657"/>
</iter>
<iter>
<var name="${i}">15</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.658" endtime="20220624 16:06:35.658"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.658" endtime="20220624 16:06:35.658"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.658" endtime="20220624 16:06:35.658"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.658" endtime="20220624 16:06:35.658"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.657" endtime="20220624 16:06:35.659"/>
</iter>
<iter>
<var name="${i}">16</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.659" endtime="20220624 16:06:35.659"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.660" endtime="20220624 16:06:35.660"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.659" endtime="20220624 16:06:35.660"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.659" endtime="20220624 16:06:35.660"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.659" endtime="20220624 16:06:35.660"/>
</iter>
<iter>
<var name="${i}">17</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.661" endtime="20220624 16:06:35.661"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.661" endtime="20220624 16:06:35.661"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.660" endtime="20220624 16:06:35.661"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.660" endtime="20220624 16:06:35.661"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.660" endtime="20220624 16:06:35.661"/>
</iter>
<iter>
<var name="${i}">18</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.662" endtime="20220624 16:06:35.662"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.662" endtime="20220624 16:06:35.662"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.661" endtime="20220624 16:06:35.662"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.661" endtime="20220624 16:06:35.662"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.661" endtime="20220624 16:06:35.662"/>
</iter>
<iter>
<var name="${i}">19</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.663" endtime="20220624 16:06:35.663"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.663" endtime="20220624 16:06:35.663"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.663" endtime="20220624 16:06:35.663"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.662" endtime="20220624 16:06:35.663"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.662" endtime="20220624 16:06:35.663"/>
</iter>
<iter>
<var name="${i}">20</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.664" endtime="20220624 16:06:35.664"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.664" endtime="20220624 16:06:35.664"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.664" endtime="20220624 16:06:35.664"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.663" endtime="20220624 16:06:35.664"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.663" endtime="20220624 16:06:35.664"/>
</iter>
<iter>
<var name="${i}">21</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.665" endtime="20220624 16:06:35.665"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.665" endtime="20220624 16:06:35.665"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.665" endtime="20220624 16:06:35.665"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.664" endtime="20220624 16:06:35.665"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.664" endtime="20220624 16:06:35.665"/>
</iter>
<iter>
<var name="${i}">22</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.666" endtime="20220624 16:06:35.666"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.666" endtime="20220624 16:06:35.666"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.666" endtime="20220624 16:06:35.666"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.665" endtime="20220624 16:06:35.666"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.665" endtime="20220624 16:06:35.666"/>
</iter>
<iter>
<var name="${i}">23</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.667" endtime="20220624 16:06:35.667"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.667" endtime="20220624 16:06:35.667"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.667" endtime="20220624 16:06:35.667"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.666" endtime="20220624 16:06:35.667"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.666" endtime="20220624 16:06:35.667"/>
</iter>
<iter>
<var name="${i}">24</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.668" endtime="20220624 16:06:35.668"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.668" endtime="20220624 16:06:35.668"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.668" endtime="20220624 16:06:35.668"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.667" endtime="20220624 16:06:35.668"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.667" endtime="20220624 16:06:35.668"/>
</iter>
<iter>
<var name="${i}">25</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.669" endtime="20220624 16:06:35.669"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.669" endtime="20220624 16:06:35.669"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.669" endtime="20220624 16:06:35.669"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.668" endtime="20220624 16:06:35.669"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.668" endtime="20220624 16:06:35.669"/>
</iter>
<iter>
<var name="${i}">26</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.670" endtime="20220624 16:06:35.670"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.670" endtime="20220624 16:06:35.670"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.670" endtime="20220624 16:06:35.670"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.669" endtime="20220624 16:06:35.670"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.669" endtime="20220624 16:06:35.670"/>
</iter>
<iter>
<var name="${i}">27</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.671" endtime="20220624 16:06:35.671"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.671" endtime="20220624 16:06:35.671"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.671" endtime="20220624 16:06:35.671"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.671" endtime="20220624 16:06:35.671"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.670" endtime="20220624 16:06:35.672"/>
</iter>
<iter>
<var name="${i}">28</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.672" endtime="20220624 16:06:35.673"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.673" endtime="20220624 16:06:35.673"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.672" endtime="20220624 16:06:35.673"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.672" endtime="20220624 16:06:35.673"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.672" endtime="20220624 16:06:35.673"/>
</iter>
<iter>
<var name="${i}">29</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.674" endtime="20220624 16:06:35.674"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.674" endtime="20220624 16:06:35.674"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.674" endtime="20220624 16:06:35.674"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.673" endtime="20220624 16:06:35.674"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.673" endtime="20220624 16:06:35.674"/>
</iter>
<iter>
<var name="${i}">30</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.675" endtime="20220624 16:06:35.675"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.675" endtime="20220624 16:06:35.675"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.675" endtime="20220624 16:06:35.675"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.674" endtime="20220624 16:06:35.675"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.674" endtime="20220624 16:06:35.675"/>
</iter>
<iter>
<var name="${i}">31</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.676" endtime="20220624 16:06:35.676"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.676" endtime="20220624 16:06:35.676"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.676" endtime="20220624 16:06:35.676"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.675" endtime="20220624 16:06:35.676"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.675" endtime="20220624 16:06:35.676"/>
</iter>
<iter>
<var name="${i}">32</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.677" endtime="20220624 16:06:35.677"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.677" endtime="20220624 16:06:35.677"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.677" endtime="20220624 16:06:35.677"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.676" endtime="20220624 16:06:35.677"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.676" endtime="20220624 16:06:35.677"/>
</iter>
<iter>
<var name="${i}">33</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.678" endtime="20220624 16:06:35.678"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.678" endtime="20220624 16:06:35.678"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.678" endtime="20220624 16:06:35.678"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.677" endtime="20220624 16:06:35.678"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.677" endtime="20220624 16:06:35.678"/>
</iter>
<iter>
<var name="${i}">34</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.679" endtime="20220624 16:06:35.679"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.679" endtime="20220624 16:06:35.679"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.679" endtime="20220624 16:06:35.679"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.678" endtime="20220624 16:06:35.679"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.678" endtime="20220624 16:06:35.679"/>
</iter>
<iter>
<var name="${i}">35</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.680" endtime="20220624 16:06:35.680"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.680" endtime="20220624 16:06:35.680"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.680" endtime="20220624 16:06:35.680"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.680" endtime="20220624 16:06:35.680"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.679" endtime="20220624 16:06:35.680"/>
</iter>
<iter>
<var name="${i}">36</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.682" endtime="20220624 16:06:35.682"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.682" endtime="20220624 16:06:35.682"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.681" endtime="20220624 16:06:35.682"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.681" endtime="20220624 16:06:35.682"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.681" endtime="20220624 16:06:35.682"/>
</iter>
<iter>
<var name="${i}">37</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.683" endtime="20220624 16:06:35.683"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.683" endtime="20220624 16:06:35.683"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.682" endtime="20220624 16:06:35.683"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.682" endtime="20220624 16:06:35.683"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.682" endtime="20220624 16:06:35.683"/>
</iter>
<iter>
<var name="${i}">38</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.684" endtime="20220624 16:06:35.684"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.684" endtime="20220624 16:06:35.684"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.683" endtime="20220624 16:06:35.684"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.683" endtime="20220624 16:06:35.684"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.683" endtime="20220624 16:06:35.684"/>
</iter>
<iter>
<var name="${i}">39</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.685" endtime="20220624 16:06:35.685"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.685" endtime="20220624 16:06:35.685"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.685" endtime="20220624 16:06:35.685"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.684" endtime="20220624 16:06:35.685"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.684" endtime="20220624 16:06:35.685"/>
</iter>
<iter>
<var name="${i}">40</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.686" endtime="20220624 16:06:35.686"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.686" endtime="20220624 16:06:35.686"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.686" endtime="20220624 16:06:35.686"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.685" endtime="20220624 16:06:35.686"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.685" endtime="20220624 16:06:35.686"/>
</iter>
<iter>
<var name="${i}">41</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.687" endtime="20220624 16:06:35.687"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.687" endtime="20220624 16:06:35.687"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.687" endtime="20220624 16:06:35.687"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.686" endtime="20220624 16:06:35.687"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.686" endtime="20220624 16:06:35.687"/>
</iter>
<iter>
<var name="${i}">42</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.688" endtime="20220624 16:06:35.688"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.688" endtime="20220624 16:06:35.688"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.688" endtime="20220624 16:06:35.688"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.687" endtime="20220624 16:06:35.688"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.687" endtime="20220624 16:06:35.688"/>
</iter>
<iter>
<var name="${i}">43</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.689" endtime="20220624 16:06:35.689"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.689" endtime="20220624 16:06:35.689"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.689" endtime="20220624 16:06:35.689"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.688" endtime="20220624 16:06:35.689"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.688" endtime="20220624 16:06:35.689"/>
</iter>
<iter>
<var name="${i}">44</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.690" endtime="20220624 16:06:35.690"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.690" endtime="20220624 16:06:35.690"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.690" endtime="20220624 16:06:35.690"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.689" endtime="20220624 16:06:35.690"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.689" endtime="20220624 16:06:35.690"/>
</iter>
<iter>
<var name="${i}">45</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:35.691" endtime="20220624 16:06:35.691"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:35.691" endtime="20220624 16:06:35.691"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:35.691" endtime="20220624 16:06:35.691"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.690" endtime="20220624 16:06:35.691"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.690" endtime="20220624 16:06:35.691"/>
</iter>
<iter>
<var name="${i}">46</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.693" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:35.692" endtime="20220624 16:06:35.693"/>
</kw>
<break>
<status status="PASS" starttime="20220624 16:06:35.693" endtime="20220624 16:06:35.693"/>
</break>
<status status="PASS" starttime="20220624 16:06:35.692" endtime="20220624 16:06:35.693"/>
</branch>
<status status="PASS" starttime="20220624 16:06:35.691" endtime="20220624 16:06:35.693"/>
</if>
<status status="PASS" starttime="20220624 16:06:35.691" endtime="20220624 16:06:35.693"/>
</iter>
<status status="PASS" starttime="20220624 16:06:35.641" endtime="20220624 16:06:35.693"/>
</for>
<msg timestamp="20220624 16:06:35.694" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:35.631" endtime="20220624 16:06:35.694"/>
</kw>
<kw name="POST EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Com Token Invalido" library="POST" sourcename="POST EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Com Token Invalido">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.694" endtime="20220624 16:06:35.695"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{header}</var>
<arg>Authorization=Token Invalido</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.695" level="INFO">&amp;{header} = { Authorization=Token Invalido }</msg>
<status status="PASS" starttime="20220624 16:06:35.695" endtime="20220624 16:06:35.695"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.698" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Token Invalido', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=ITelo+MusicStick&amp;descricao=64+GB+USB+Music-on-Available-Stick&amp;quantidade=999&amp;preco=45 
 </msg>
<msg timestamp="20220624 16:06:35.698" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd43d5f4c-f0cf-4830-bc86-aa06babb631d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:35.698" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.695" endtime="20220624 16:06:35.698"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.698" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.698" endtime="20220624 16:06:35.698"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.700" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:35.699" endtime="20220624 16:06:35.700"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.694" endtime="20220624 16:06:35.700"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.700" endtime="20220624 16:06:35.701"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.700" endtime="20220624 16:06:35.701"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.702" endtime="20220624 16:06:35.702"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.701" endtime="20220624 16:06:35.702"/>
</kw>
<tag>Cadastar_Produto_Com_Token_Invalido</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.630" endtime="20220624 16:06:35.702"/>
</test>
<test id="s1-s3-s2-t6" name="Cenario: Tentar Cadastrar Produto Ja Cadastrado" line="61">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.705" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.704" endtime="20220624 16:06:35.705"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.704" endtime="20220624 16:06:35.705"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.709" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.709" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '074ef085-ba65-4765-bbef-b3a7a9485f04', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.705" endtime="20220624 16:06:35.710"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.710" endtime="20220624 16:06:35.710"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.711" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.710" endtime="20220624 16:06:35.711"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.705" endtime="20220624 16:06:35.711"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.713" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.711" endtime="20220624 16:06:35.713"/>
</kw>
<msg timestamp="20220624 16:06:35.713" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.705" endtime="20220624 16:06:35.713"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.713" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:35.713" endtime="20220624 16:06:35.713"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.715" level="INFO">${nome} = Renee Palmer</msg>
<status status="PASS" starttime="20220624 16:06:35.715" endtime="20220624 16:06:35.715"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.715" level="INFO">${email} = cooktony@example.com</msg>
<status status="PASS" starttime="20220624 16:06:35.715" endtime="20220624 16:06:35.715"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.716" level="INFO">${senha} = N!7ISw_MP^</msg>
<status status="PASS" starttime="20220624 16:06:35.716" endtime="20220624 16:06:35.716"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.716" level="INFO">&amp;{usuario} = { nome=Renee Palmer | email=cooktony@example.com | password=N!7ISw_MP^ | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.716" endtime="20220624 16:06:35.716"/>
</kw>
<msg timestamp="20220624 16:06:35.716" level="INFO">${usuario} = {'nome': 'Renee Palmer', 'email': 'cooktony@example.com', 'password': 'N!7ISw_MP^', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.714" endtime="20220624 16:06:35.716"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.717" endtime="20220624 16:06:35.717"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.722" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Renee+Palmer&amp;email=cooktony%40example.com&amp;password=N%217ISw_MP%5E&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.723" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '688e6a5c-7096-4b58-a8ce-a25a2b766817', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "pgFjrSJyUjgIjPUW"
} 
 </msg>
<msg timestamp="20220624 16:06:35.723" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.717" endtime="20220624 16:06:35.723"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.723" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.723" endtime="20220624 16:06:35.723"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.724" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'pgFjrSJyUjgIjPUW'}</msg>
<status status="PASS" starttime="20220624 16:06:35.723" endtime="20220624 16:06:35.724"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.716" endtime="20220624 16:06:35.724"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.724" endtime="20220624 16:06:35.725"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.724" endtime="20220624 16:06:35.725"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.726" endtime="20220624 16:06:35.726"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.725" endtime="20220624 16:06:35.726"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.727" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.726" endtime="20220624 16:06:35.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.727" endtime="20220624 16:06:35.727"/>
</kw>
<msg timestamp="20220624 16:06:35.728" level="INFO">${usuario_valido} = {'nome': 'Renee Palmer', 'email': 'cooktony@example.com', 'password': 'N!7ISw_MP^', 'administrador': 'true', '_id': 'pgFjrSJyUjgIjPUW'}</msg>
<status status="PASS" starttime="20220624 16:06:35.714" endtime="20220624 16:06:35.728"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.728" level="INFO">Removed item with key 'nome' and value 'Renee Palmer'.</msg>
<msg timestamp="20220624 16:06:35.728" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.728" level="INFO">Removed item with key '_id' and value 'pgFjrSJyUjgIjPUW'.</msg>
<status status="PASS" starttime="20220624 16:06:35.728" endtime="20220624 16:06:35.728"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.728" endtime="20220624 16:06:35.729"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.732" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=cooktony%40example.com&amp;password=N%217ISw_MP%5E 
 </msg>
<msg timestamp="20220624 16:06:35.732" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd0c1b0a8-2e8c-4f26-b1c1-a431ccc5d4f3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '281', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNvb2t0b255QGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJOITdJU3dfTVBeIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.E_HYqlNwRybT855pgiEwfoyg6jwQJhx28gB3ukbuZVc"
} 
 </msg>
<msg timestamp="20220624 16:06:35.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.729" endtime="20220624 16:06:35.732"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.732" endtime="20220624 16:06:35.732"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.733" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNvb2t0b255QGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJOITdJU3dfTVBeIiwiaWF0IjoxNjU2MDk3NTk...</msg>
<status status="PASS" starttime="20220624 16:06:35.732" endtime="20220624 16:06:35.733"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.728" endtime="20220624 16:06:35.733"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.733" endtime="20220624 16:06:35.734"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.733" endtime="20220624 16:06:35.734"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.735" endtime="20220624 16:06:35.735"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.734" endtime="20220624 16:06:35.735"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.736" level="INFO">Length is 208</msg>
<status status="PASS" starttime="20220624 16:06:35.735" endtime="20220624 16:06:35.736"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.735" endtime="20220624 16:06:35.736"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.736" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNvb2t0b255QGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJOITdJU3dfTVBeIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.E_HYqlNwRybT855pgiE...</msg>
<status status="PASS" starttime="20220624 16:06:35.736" endtime="20220624 16:06:35.737"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.737" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNvb2t0b255QGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJOITdJU3dfTVBeIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.E_HYqlNwRybT855p...</msg>
<status status="PASS" starttime="20220624 16:06:35.737" endtime="20220624 16:06:35.737"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.714" endtime="20220624 16:06:35.737"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.738" endtime="20220624 16:06:35.738"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.743" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNvb2t0b255QGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJOITdJU3dfTVBeIiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.E_HYqlNwRybT855pgiEwfoyg6jwQJhx28gB3ukbuZVc', 'Content-Length': '125', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flat+XXL&amp;descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;quantidade=999&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:35.743" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8c8eab8b-79b1-4f71-b123-6f90b7bcef16', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20220624 16:06:35.743" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.738" endtime="20220624 16:06:35.744"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.744" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.744" endtime="20220624 16:06:35.744"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.745" level="INFO">${response_body} = {'message': 'Já existe produto com esse nome'}</msg>
<status status="PASS" starttime="20220624 16:06:35.744" endtime="20220624 16:06:35.745"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.737" endtime="20220624 16:06:35.745"/>
</kw>
<kw name="Validar Mensagem &quot;Já existe produto com esse nome&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.746" endtime="20220624 16:06:35.747"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.746" endtime="20220624 16:06:35.747"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.747" endtime="20220624 16:06:35.748"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.747" endtime="20220624 16:06:35.748"/>
</kw>
<tag>Cadastar_Produto_Ja_Cadastrado</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.704" endtime="20220624 16:06:35.748"/>
</test>
<test id="s1-s3-s2-t7" name="Cenario: Tentar Cadastar Produto Com Nome Vazio" line="71">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.751" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.750" endtime="20220624 16:06:35.751"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.750" endtime="20220624 16:06:35.751"/>
</kw>
<kw name="Pegar Produto Do JSON Sem O Campo &quot;nome&quot;" library="produtos_keywords" sourcename="Pegar Produto Do JSON Sem O Campo &quot;${parametro}&quot;">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.756" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.756" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2d7e1cb6-f40d-4742-b2ca-087a2faa3dfb', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.752" endtime="20220624 16:06:35.756"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.756" endtime="20220624 16:06:35.757"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.759" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.757" endtime="20220624 16:06:35.759"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.752" endtime="20220624 16:06:35.759"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.760" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.759" endtime="20220624 16:06:35.760"/>
</kw>
<msg timestamp="20220624 16:06:35.760" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.751" endtime="20220624 16:06:35.760"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.761" level="INFO">Removed item with key 'nome' and value 'Flat XXL'.</msg>
<status status="PASS" starttime="20220624 16:06:35.760" endtime="20220624 16:06:35.761"/>
</kw>
<msg timestamp="20220624 16:06:35.761" level="INFO">${produto} = {'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.751" endtime="20220624 16:06:35.761"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.762" level="INFO">${nome} = Albert Myers</msg>
<status status="PASS" starttime="20220624 16:06:35.762" endtime="20220624 16:06:35.762"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.763" level="INFO">${email} = scottthompson@example.com</msg>
<status status="PASS" starttime="20220624 16:06:35.762" endtime="20220624 16:06:35.763"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.763" level="INFO">${senha} = kyELT$(i&amp;3</msg>
<status status="PASS" starttime="20220624 16:06:35.763" endtime="20220624 16:06:35.763"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.763" level="INFO">&amp;{usuario} = { nome=Albert Myers | email=scottthompson@example.com | password=kyELT$(i&amp;3 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.763" endtime="20220624 16:06:35.763"/>
</kw>
<msg timestamp="20220624 16:06:35.764" level="INFO">${usuario} = {'nome': 'Albert Myers', 'email': 'scottthompson@example.com', 'password': 'kyELT$(i&amp;3', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.762" endtime="20220624 16:06:35.764"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.764" endtime="20220624 16:06:35.764"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.770" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '96', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Albert+Myers&amp;email=scottthompson%40example.com&amp;password=kyELT%24%28i%263&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.770" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'aa6e3abb-18ee-4d1e-be85-d1545cda4a76', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "FQvjuyQ6VoKe9N1q"
} 
 </msg>
<msg timestamp="20220624 16:06:35.770" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.764" endtime="20220624 16:06:35.770"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.770" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.770" endtime="20220624 16:06:35.770"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.771" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'FQvjuyQ6VoKe9N1q'}</msg>
<status status="PASS" starttime="20220624 16:06:35.771" endtime="20220624 16:06:35.771"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.764" endtime="20220624 16:06:35.771"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.772" endtime="20220624 16:06:35.772"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.771" endtime="20220624 16:06:35.772"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.773" endtime="20220624 16:06:35.774"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.773" endtime="20220624 16:06:35.774"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.775" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.774" endtime="20220624 16:06:35.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.775" endtime="20220624 16:06:35.775"/>
</kw>
<msg timestamp="20220624 16:06:35.775" level="INFO">${usuario_valido} = {'nome': 'Albert Myers', 'email': 'scottthompson@example.com', 'password': 'kyELT$(i&amp;3', 'administrador': 'true', '_id': 'FQvjuyQ6VoKe9N1q'}</msg>
<status status="PASS" starttime="20220624 16:06:35.761" endtime="20220624 16:06:35.775"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.776" level="INFO">Removed item with key 'nome' and value 'Albert Myers'.</msg>
<msg timestamp="20220624 16:06:35.776" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.776" level="INFO">Removed item with key '_id' and value 'FQvjuyQ6VoKe9N1q'.</msg>
<status status="PASS" starttime="20220624 16:06:35.775" endtime="20220624 16:06:35.776"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.776" endtime="20220624 16:06:35.776"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.779" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '59', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=scottthompson%40example.com&amp;password=kyELT%24%28i%263 
 </msg>
<msg timestamp="20220624 16:06:35.780" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f7fd330a-553a-419d-b0a8-277a1785362c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '288', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNjb3R0dGhvbXBzb25AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Imt5RUxUJChpJjMiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.TuR_rRkd66BjMy_8ylHcSYkznsrOzuwtNJVraqYiriQ"
} 
 </msg>
<msg timestamp="20220624 16:06:35.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.776" endtime="20220624 16:06:35.780"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.780" endtime="20220624 16:06:35.780"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.781" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNjb3R0dGhvbXBzb25AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Imt5RUxUJChpJjMiLCJpYXQiOjE2NTY...</msg>
<status status="PASS" starttime="20220624 16:06:35.780" endtime="20220624 16:06:35.781"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.776" endtime="20220624 16:06:35.781"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.781" endtime="20220624 16:06:35.782"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.781" endtime="20220624 16:06:35.782"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.782" endtime="20220624 16:06:35.783"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.782" endtime="20220624 16:06:35.783"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.784" level="INFO">Length is 215</msg>
<status status="PASS" starttime="20220624 16:06:35.783" endtime="20220624 16:06:35.784"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.783" endtime="20220624 16:06:35.784"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.784" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNjb3R0dGhvbXBzb25AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Imt5RUxUJChpJjMiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.TuR_rRkd66Bj...</msg>
<status status="PASS" starttime="20220624 16:06:35.784" endtime="20220624 16:06:35.784"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.785" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNjb3R0dGhvbXBzb25AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Imt5RUxUJChpJjMiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.TuR_rRkd6...</msg>
<status status="PASS" starttime="20220624 16:06:35.784" endtime="20220624 16:06:35.785"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.761" endtime="20220624 16:06:35.785"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.785" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:35.785" endtime="20220624 16:06:35.785"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.785" endtime="20220624 16:06:35.785"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.789" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNjb3R0dGhvbXBzb25AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6Imt5RUxUJChpJjMiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.TuR_rRkd66BjMy_8ylHcSYkznsrOzuwtNJVraqYiriQ', 'Content-Length': '111', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;quantidade=999&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:35.789" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fee5ae8d-2af7-48a0-bdd4-2bcc648489fe', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '38', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:35.789" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.785" endtime="20220624 16:06:35.789"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.789" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.789" endtime="20220624 16:06:35.790"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.790" level="INFO">${response_body} = {'nome': 'nome é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:35.790" endtime="20220624 16:06:35.790"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.785" endtime="20220624 16:06:35.790"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.791" endtime="20220624 16:06:35.792"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.791" endtime="20220624 16:06:35.792"/>
</kw>
<kw name="Validar &quot;nome&quot; Com O Valor &quot;nome é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.793" endtime="20220624 16:06:35.794"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.793" endtime="20220624 16:06:35.794"/>
</kw>
<tag>Cadastar_Produto_Com_Nome_Vazio</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.749" endtime="20220624 16:06:35.794"/>
</test>
<test id="s1-s3-s2-t8" name="Cenario: Tentar Cadastar Produto Com Preco Vazio" line="80">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.796" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.796" endtime="20220624 16:06:35.796"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.796" endtime="20220624 16:06:35.796"/>
</kw>
<kw name="Pegar Produto Do JSON Sem O Campo &quot;preco&quot;" library="produtos_keywords" sourcename="Pegar Produto Do JSON Sem O Campo &quot;${parametro}&quot;">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.801" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.801" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7c0d7e5d-7d2c-4518-86f8-f8858bd47f5a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.797" endtime="20220624 16:06:35.801"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.801" endtime="20220624 16:06:35.802"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.803" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.802" endtime="20220624 16:06:35.803"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.797" endtime="20220624 16:06:35.803"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.804" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.803" endtime="20220624 16:06:35.804"/>
</kw>
<msg timestamp="20220624 16:06:35.804" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.797" endtime="20220624 16:06:35.804"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.804" level="INFO">Removed item with key 'preco' and value '1430'.</msg>
<status status="PASS" starttime="20220624 16:06:35.804" endtime="20220624 16:06:35.804"/>
</kw>
<msg timestamp="20220624 16:06:35.805" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.797" endtime="20220624 16:06:35.805"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.806" level="INFO">${nome} = Alison Young</msg>
<status status="PASS" starttime="20220624 16:06:35.806" endtime="20220624 16:06:35.806"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.807" level="INFO">${email} = yolanda44@example.net</msg>
<status status="PASS" starttime="20220624 16:06:35.806" endtime="20220624 16:06:35.807"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.807" level="INFO">${senha} = _V#JY#jp^8</msg>
<status status="PASS" starttime="20220624 16:06:35.807" endtime="20220624 16:06:35.807"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.807" level="INFO">&amp;{usuario} = { nome=Alison Young | email=yolanda44@example.net | password=_V#JY#jp^8 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.807" endtime="20220624 16:06:35.807"/>
</kw>
<msg timestamp="20220624 16:06:35.808" level="INFO">${usuario} = {'nome': 'Alison Young', 'email': 'yolanda44@example.net', 'password': '_V#JY#jp^8', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.806" endtime="20220624 16:06:35.808"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.808" endtime="20220624 16:06:35.808"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.814" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '92', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Alison+Young&amp;email=yolanda44%40example.net&amp;password=_V%23JY%23jp%5E8&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.814" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '17de4c04-43fa-4e5a-9bc7-5ff2d632f496', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "N3KDDbgtvypsNiAr"
} 
 </msg>
<msg timestamp="20220624 16:06:35.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.808" endtime="20220624 16:06:35.814"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.814" endtime="20220624 16:06:35.814"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.815" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'N3KDDbgtvypsNiAr'}</msg>
<status status="PASS" starttime="20220624 16:06:35.814" endtime="20220624 16:06:35.815"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.808" endtime="20220624 16:06:35.815"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.816" endtime="20220624 16:06:35.816"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.815" endtime="20220624 16:06:35.816"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.817" endtime="20220624 16:06:35.817"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.816" endtime="20220624 16:06:35.817"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.818" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.817" endtime="20220624 16:06:35.818"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.818" endtime="20220624 16:06:35.818"/>
</kw>
<msg timestamp="20220624 16:06:35.818" level="INFO">${usuario_valido} = {'nome': 'Alison Young', 'email': 'yolanda44@example.net', 'password': '_V#JY#jp^8', 'administrador': 'true', '_id': 'N3KDDbgtvypsNiAr'}</msg>
<status status="PASS" starttime="20220624 16:06:35.805" endtime="20220624 16:06:35.818"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.819" level="INFO">Removed item with key 'nome' and value 'Alison Young'.</msg>
<msg timestamp="20220624 16:06:35.819" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.819" level="INFO">Removed item with key '_id' and value 'N3KDDbgtvypsNiAr'.</msg>
<status status="PASS" starttime="20220624 16:06:35.819" endtime="20220624 16:06:35.819"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.819" endtime="20220624 16:06:35.819"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.822" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '55', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=yolanda44%40example.net&amp;password=_V%23JY%23jp%5E8 
 </msg>
<msg timestamp="20220624 16:06:35.823" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c1bc5e3f-f1f9-4671-9db7-c9601e141283', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '283', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlvbGFuZGE0NEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1YjSlkjanBeOCIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ._u8ci-23Dx1GUIb8SlfGX0XiqThnShAWg4MCG-g6HmE"
} 
 </msg>
<msg timestamp="20220624 16:06:35.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.819" endtime="20220624 16:06:35.823"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.823" endtime="20220624 16:06:35.823"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.824" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlvbGFuZGE0NEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1YjSlkjanBeOCIsImlhdCI6MTY1NjA5NzU...</msg>
<status status="PASS" starttime="20220624 16:06:35.823" endtime="20220624 16:06:35.824"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.819" endtime="20220624 16:06:35.824"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.824" endtime="20220624 16:06:35.825"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.824" endtime="20220624 16:06:35.825"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.826" endtime="20220624 16:06:35.826"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.825" endtime="20220624 16:06:35.826"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.827" level="INFO">Length is 210</msg>
<status status="PASS" starttime="20220624 16:06:35.826" endtime="20220624 16:06:35.827"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.826" endtime="20220624 16:06:35.827"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.828" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlvbGFuZGE0NEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1YjSlkjanBeOCIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ._u8ci-23Dx1GUIb8S...</msg>
<status status="PASS" starttime="20220624 16:06:35.827" endtime="20220624 16:06:35.828"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.828" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlvbGFuZGE0NEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1YjSlkjanBeOCIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ._u8ci-23Dx1GUI...</msg>
<status status="PASS" starttime="20220624 16:06:35.828" endtime="20220624 16:06:35.828"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.805" endtime="20220624 16:06:35.828"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.830" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:35.829" endtime="20220624 16:06:35.830"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.829" endtime="20220624 16:06:35.830"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.833" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlvbGFuZGE0NEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoiX1YjSlkjanBeOCIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ._u8ci-23Dx1GUIb8SlfGX0XiqThnShAWg4MCG-g6HmE', 'Content-Length': '114', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flat+XXL&amp;descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;quantidade=999 
 </msg>
<msg timestamp="20220624 16:06:35.833" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b81a09b-3f80-452e-9224-6c1dae25d89f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '40', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:35.833" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.830" endtime="20220624 16:06:35.833"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.833" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.833" endtime="20220624 16:06:35.833"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.834" level="INFO">${response_body} = {'preco': 'preco é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:35.833" endtime="20220624 16:06:35.834"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.829" endtime="20220624 16:06:35.834"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.835" endtime="20220624 16:06:35.836"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.835" endtime="20220624 16:06:35.836"/>
</kw>
<kw name="Validar &quot;preco&quot; Com O Valor &quot;preco é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.837" endtime="20220624 16:06:35.837"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.836" endtime="20220624 16:06:35.837"/>
</kw>
<tag>Cadastar_Produto_Com_Preco_Vazio</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.795" endtime="20220624 16:06:35.838"/>
</test>
<test id="s1-s3-s2-t9" name="Cenario: Tentar Cadastar Produto Com Preco Invalido" line="88">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.840" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.840" endtime="20220624 16:06:35.840"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.839" endtime="20220624 16:06:35.840"/>
</kw>
<kw name="Pegar Produto Do JSON Com o Campo &quot;preco&quot; Invalido" library="produtos_keywords" sourcename="Pegar Produto Do JSON Com o Campo &quot;${key}&quot; Invalido">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.845" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.845" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '07f32f61-bbcd-4cf9-b379-bbb1157e1064', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.841" endtime="20220624 16:06:35.846"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.846" endtime="20220624 16:06:35.846"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.847" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.846" endtime="20220624 16:06:35.847"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.841" endtime="20220624 16:06:35.847"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.848" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.847" endtime="20220624 16:06:35.848"/>
</kw>
<msg timestamp="20220624 16:06:35.848" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.841" endtime="20220624 16:06:35.848"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=1.5</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.849" endtime="20220624 16:06:35.849"/>
</kw>
<msg timestamp="20220624 16:06:35.849" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': '1.5', '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.841" endtime="20220624 16:06:35.849"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.851" level="INFO">${nome} = Mark Greene</msg>
<status status="PASS" starttime="20220624 16:06:35.850" endtime="20220624 16:06:35.851"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.851" level="INFO">${email} = tanyacarrillo@example.com</msg>
<status status="PASS" starttime="20220624 16:06:35.851" endtime="20220624 16:06:35.851"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.851" level="INFO">${senha} = qH)431$yR&amp;</msg>
<status status="PASS" starttime="20220624 16:06:35.851" endtime="20220624 16:06:35.851"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.852" level="INFO">&amp;{usuario} = { nome=Mark Greene | email=tanyacarrillo@example.com | password=qH)431$yR&amp; | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.851" endtime="20220624 16:06:35.852"/>
</kw>
<msg timestamp="20220624 16:06:35.852" level="INFO">${usuario} = {'nome': 'Mark Greene', 'email': 'tanyacarrillo@example.com', 'password': 'qH)431$yR&amp;', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.850" endtime="20220624 16:06:35.852"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.852" endtime="20220624 16:06:35.853"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.858" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '95', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Mark+Greene&amp;email=tanyacarrillo%40example.com&amp;password=qH%29431%24yR%26&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.858" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '023ca296-a463-4ad6-b9d0-191bab314bce', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "KaRALL2crfs1EeJC"
} 
 </msg>
<msg timestamp="20220624 16:06:35.859" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.853" endtime="20220624 16:06:35.859"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.859" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.859" endtime="20220624 16:06:35.859"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.860" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'KaRALL2crfs1EeJC'}</msg>
<status status="PASS" starttime="20220624 16:06:35.859" endtime="20220624 16:06:35.860"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.852" endtime="20220624 16:06:35.860"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.860" endtime="20220624 16:06:35.861"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.860" endtime="20220624 16:06:35.861"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.861" endtime="20220624 16:06:35.862"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.861" endtime="20220624 16:06:35.862"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.862" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.862" endtime="20220624 16:06:35.863"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.863" endtime="20220624 16:06:35.863"/>
</kw>
<msg timestamp="20220624 16:06:35.863" level="INFO">${usuario_valido} = {'nome': 'Mark Greene', 'email': 'tanyacarrillo@example.com', 'password': 'qH)431$yR&amp;', 'administrador': 'true', '_id': 'KaRALL2crfs1EeJC'}</msg>
<status status="PASS" starttime="20220624 16:06:35.850" endtime="20220624 16:06:35.863"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.864" level="INFO">Removed item with key 'nome' and value 'Mark Greene'.</msg>
<msg timestamp="20220624 16:06:35.864" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.864" level="INFO">Removed item with key '_id' and value 'KaRALL2crfs1EeJC'.</msg>
<status status="PASS" starttime="20220624 16:06:35.863" endtime="20220624 16:06:35.864"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.864" endtime="20220624 16:06:35.864"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.867" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '59', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=tanyacarrillo%40example.com&amp;password=qH%29431%24yR%26 
 </msg>
<msg timestamp="20220624 16:06:35.867" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7d829bb1-03b4-4c8c-a973-59ab2e0f1e89', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '288', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRhbnlhY2FycmlsbG9AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InFIKTQzMSR5UiYiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.DpOJHE33afwKp0QUGKrLQhmkzDNjlogi00UtW7wHWqY"
} 
 </msg>
<msg timestamp="20220624 16:06:35.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.864" endtime="20220624 16:06:35.868"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.868" endtime="20220624 16:06:35.868"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.869" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRhbnlhY2FycmlsbG9AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InFIKTQzMSR5UiYiLCJpYXQiOjE2NTY...</msg>
<status status="PASS" starttime="20220624 16:06:35.868" endtime="20220624 16:06:35.869"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.864" endtime="20220624 16:06:35.869"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.869" endtime="20220624 16:06:35.870"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.869" endtime="20220624 16:06:35.870"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.870" endtime="20220624 16:06:35.871"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.870" endtime="20220624 16:06:35.871"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.871" level="INFO">Length is 215</msg>
<status status="PASS" starttime="20220624 16:06:35.871" endtime="20220624 16:06:35.871"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.871" endtime="20220624 16:06:35.872"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.872" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRhbnlhY2FycmlsbG9AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InFIKTQzMSR5UiYiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.DpOJHE33afwK...</msg>
<status status="PASS" starttime="20220624 16:06:35.872" endtime="20220624 16:06:35.872"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.872" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRhbnlhY2FycmlsbG9AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InFIKTQzMSR5UiYiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.DpOJHE33a...</msg>
<status status="PASS" starttime="20220624 16:06:35.872" endtime="20220624 16:06:35.873"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.849" endtime="20220624 16:06:35.873"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.874" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:35.874" endtime="20220624 16:06:35.874"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.874" endtime="20220624 16:06:35.874"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.878" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRhbnlhY2FycmlsbG9AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InFIKTQzMSR5UiYiLCJpYXQiOjE2NTYwOTc1OTUsImV4cCI6MTY1NjA5ODE5NX0.DpOJHE33afwKp0QUGKrLQhmkzDNjlogi00UtW7wHWqY', 'Content-Length': '124', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flat+XXL&amp;descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;quantidade=999&amp;preco=1.5 
 </msg>
<msg timestamp="20220624 16:06:35.878" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2f1514a3-77e4-451a-9ddb-08e9b6b66b46', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '44', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco deve ser um inteiro"
} 
 </msg>
<msg timestamp="20220624 16:06:35.878" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.874" endtime="20220624 16:06:35.879"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.879" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.879" endtime="20220624 16:06:35.879"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.880" level="INFO">${response_body} = {'preco': 'preco deve ser um inteiro'}</msg>
<status status="PASS" starttime="20220624 16:06:35.879" endtime="20220624 16:06:35.880"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.873" endtime="20220624 16:06:35.880"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.880" endtime="20220624 16:06:35.881"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.880" endtime="20220624 16:06:35.881"/>
</kw>
<kw name="Validar &quot;preco&quot; Com O Valor &quot;preco deve ser um inteiro&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.882" endtime="20220624 16:06:35.883"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.882" endtime="20220624 16:06:35.883"/>
</kw>
<tag>Cadastar_Produto_Preco_Invalido</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.839" endtime="20220624 16:06:35.883"/>
</test>
<test id="s1-s3-s2-t10" name="Cenario: Tentar Cadastar Produto Com Descricao Vazia" line="97">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.885" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.885" endtime="20220624 16:06:35.885"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.885" endtime="20220624 16:06:35.885"/>
</kw>
<kw name="Pegar Produto Do JSON Sem O Campo &quot;descricao&quot;" library="produtos_keywords" sourcename="Pegar Produto Do JSON Sem O Campo &quot;${parametro}&quot;">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.893" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.893" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '795dedef-94f7-4d02-aacd-f8786aa211da', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.886" endtime="20220624 16:06:35.893"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.893" endtime="20220624 16:06:35.893"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.894" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.893" endtime="20220624 16:06:35.895"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.886" endtime="20220624 16:06:35.895"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.896" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.895" endtime="20220624 16:06:35.896"/>
</kw>
<msg timestamp="20220624 16:06:35.896" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.886" endtime="20220624 16:06:35.896"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.896" level="INFO">Removed item with key 'descricao' and value 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm'.</msg>
<status status="PASS" starttime="20220624 16:06:35.896" endtime="20220624 16:06:35.896"/>
</kw>
<msg timestamp="20220624 16:06:35.896" level="INFO">${produto} = {'nome': 'Flat XXL', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.885" endtime="20220624 16:06:35.896"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.899" level="INFO">${nome} = Jessica Miller</msg>
<status status="PASS" starttime="20220624 16:06:35.898" endtime="20220624 16:06:35.899"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.899" level="INFO">${email} = ysmith@example.com</msg>
<status status="PASS" starttime="20220624 16:06:35.899" endtime="20220624 16:06:35.899"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.899" level="INFO">${senha} = dc07Aavmt)</msg>
<status status="PASS" starttime="20220624 16:06:35.899" endtime="20220624 16:06:35.899"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.900" level="INFO">&amp;{usuario} = { nome=Jessica Miller | email=ysmith@example.com | password=dc07Aavmt) | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.899" endtime="20220624 16:06:35.900"/>
</kw>
<msg timestamp="20220624 16:06:35.900" level="INFO">${usuario} = {'nome': 'Jessica Miller', 'email': 'ysmith@example.com', 'password': 'dc07Aavmt)', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.898" endtime="20220624 16:06:35.900"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.900" endtime="20220624 16:06:35.900"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.906" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '87', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Jessica+Miller&amp;email=ysmith%40example.com&amp;password=dc07Aavmt%29&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.906" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f7f9bd45-4630-4d26-a79c-01ee64d6914c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1e1WNAuWmgKOxNak"
} 
 </msg>
<msg timestamp="20220624 16:06:35.906" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.901" endtime="20220624 16:06:35.906"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.907" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.907" endtime="20220624 16:06:35.907"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.908" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '1e1WNAuWmgKOxNak'}</msg>
<status status="PASS" starttime="20220624 16:06:35.907" endtime="20220624 16:06:35.908"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.900" endtime="20220624 16:06:35.908"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.908" endtime="20220624 16:06:35.909"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.908" endtime="20220624 16:06:35.909"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.909" endtime="20220624 16:06:35.910"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.909" endtime="20220624 16:06:35.910"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.910" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.910" endtime="20220624 16:06:35.910"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.910" endtime="20220624 16:06:35.911"/>
</kw>
<msg timestamp="20220624 16:06:35.911" level="INFO">${usuario_valido} = {'nome': 'Jessica Miller', 'email': 'ysmith@example.com', 'password': 'dc07Aavmt)', 'administrador': 'true', '_id': '1e1WNAuWmgKOxNak'}</msg>
<status status="PASS" starttime="20220624 16:06:35.897" endtime="20220624 16:06:35.911"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.911" level="INFO">Removed item with key 'nome' and value 'Jessica Miller'.</msg>
<msg timestamp="20220624 16:06:35.911" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.911" level="INFO">Removed item with key '_id' and value '1e1WNAuWmgKOxNak'.</msg>
<status status="PASS" starttime="20220624 16:06:35.911" endtime="20220624 16:06:35.911"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.912" endtime="20220624 16:06:35.912"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.915" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '48', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=ysmith%40example.com&amp;password=dc07Aavmt%29 
 </msg>
<msg timestamp="20220624 16:06:35.915" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'de7d7448-18f5-4b61-9895-86e89828bd6b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '279', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlzbWl0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiZGMwN0Fhdm10KSIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.ABZZ5wP6m5ds7-hR9XpxYfotkVXF_3yhmFEYFwf2CEU"
} 
 </msg>
<msg timestamp="20220624 16:06:35.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.912" endtime="20220624 16:06:35.916"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.916" endtime="20220624 16:06:35.916"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.917" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlzbWl0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiZGMwN0Fhdm10KSIsImlhdCI6MTY1NjA5NzU5NSw...</msg>
<status status="PASS" starttime="20220624 16:06:35.916" endtime="20220624 16:06:35.917"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.912" endtime="20220624 16:06:35.917"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.917" endtime="20220624 16:06:35.918"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.917" endtime="20220624 16:06:35.918"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.918" endtime="20220624 16:06:35.919"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.918" endtime="20220624 16:06:35.919"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.919" level="INFO">Length is 206</msg>
<status status="PASS" starttime="20220624 16:06:35.919" endtime="20220624 16:06:35.919"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.919" endtime="20220624 16:06:35.919"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.920" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlzbWl0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiZGMwN0Fhdm10KSIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.ABZZ5wP6m5ds7-hR9XpxY...</msg>
<status status="PASS" starttime="20220624 16:06:35.920" endtime="20220624 16:06:35.920"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.920" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlzbWl0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiZGMwN0Fhdm10KSIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.ABZZ5wP6m5ds7-hR9X...</msg>
<status status="PASS" starttime="20220624 16:06:35.920" endtime="20220624 16:06:35.920"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.897" endtime="20220624 16:06:35.921"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.923" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:35.922" endtime="20220624 16:06:35.923"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.922" endtime="20220624 16:06:35.923"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.926" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlzbWl0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiZGMwN0Fhdm10KSIsImlhdCI6MTY1NjA5NzU5NSwiZXhwIjoxNjU2MDk4MTk1fQ.ABZZ5wP6m5ds7-hR9XpxYfotkVXF_3yhmFEYFwf2CEU', 'Content-Length': '39', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flat+XXL&amp;quantidade=999&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:35.926" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '88c381d6-e71a-4284-89a6-3ad64f3a350e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "descricao": "descricao é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:35.926" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.923" endtime="20220624 16:06:35.927"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.927" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.927" endtime="20220624 16:06:35.927"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.928" level="INFO">${response_body} = {'descricao': 'descricao é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:35.927" endtime="20220624 16:06:35.928"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.922" endtime="20220624 16:06:35.928"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.928" endtime="20220624 16:06:35.929"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.928" endtime="20220624 16:06:35.929"/>
</kw>
<kw name="Validar &quot;descricao&quot; Com O Valor &quot;descricao é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.930" endtime="20220624 16:06:35.931"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.930" endtime="20220624 16:06:35.931"/>
</kw>
<tag>Cadastar_Produto_Com_Descricao_Vazia</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.884" endtime="20220624 16:06:35.931"/>
</test>
<test id="s1-s3-s2-t11" name="Cenario: Tentar Cadastar Produto Com Quantidade Vazia" line="106">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.933" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.933" endtime="20220624 16:06:35.933"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.933" endtime="20220624 16:06:35.934"/>
</kw>
<kw name="Pegar Produto Do JSON Sem O Campo &quot;quantidade&quot;" library="produtos_keywords" sourcename="Pegar Produto Do JSON Sem O Campo &quot;${parametro}&quot;">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.938" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.938" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e0071068-ac63-484d-bd77-0e03d8df5c8e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.934" endtime="20220624 16:06:35.938"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.938" endtime="20220624 16:06:35.939"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.940" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.939" endtime="20220624 16:06:35.940"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.934" endtime="20220624 16:06:35.940"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.941" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.940" endtime="20220624 16:06:35.941"/>
</kw>
<msg timestamp="20220624 16:06:35.941" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.934" endtime="20220624 16:06:35.941"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${parametro}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.941" level="INFO">Removed item with key 'quantidade' and value '999'.</msg>
<status status="PASS" starttime="20220624 16:06:35.941" endtime="20220624 16:06:35.941"/>
</kw>
<msg timestamp="20220624 16:06:35.942" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.934" endtime="20220624 16:06:35.942"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.943" level="INFO">${nome} = Christina Shah</msg>
<status status="PASS" starttime="20220624 16:06:35.943" endtime="20220624 16:06:35.943"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.944" level="INFO">${email} = lboyd@example.org</msg>
<status status="PASS" starttime="20220624 16:06:35.943" endtime="20220624 16:06:35.944"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.944" level="INFO">${senha} = ^MDrziC!k6</msg>
<status status="PASS" starttime="20220624 16:06:35.944" endtime="20220624 16:06:35.944"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.944" level="INFO">&amp;{usuario} = { nome=Christina Shah | email=lboyd@example.org | password=^MDrziC!k6 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.944" endtime="20220624 16:06:35.944"/>
</kw>
<msg timestamp="20220624 16:06:35.944" level="INFO">${usuario} = {'nome': 'Christina Shah', 'email': 'lboyd@example.org', 'password': '^MDrziC!k6', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.943" endtime="20220624 16:06:35.944"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.945" endtime="20220624 16:06:35.945"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.950" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '88', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Christina+Shah&amp;email=lboyd%40example.org&amp;password=%5EMDrziC%21k6&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.950" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a373845a-5173-4e06-a307-0eedca3a447f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "JshFU5BwpgOdtTs0"
} 
 </msg>
<msg timestamp="20220624 16:06:35.950" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.945" endtime="20220624 16:06:35.950"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.951" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.951" endtime="20220624 16:06:35.951"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.952" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'JshFU5BwpgOdtTs0'}</msg>
<status status="PASS" starttime="20220624 16:06:35.951" endtime="20220624 16:06:35.952"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.945" endtime="20220624 16:06:35.952"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.952" endtime="20220624 16:06:35.953"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.952" endtime="20220624 16:06:35.953"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.953" endtime="20220624 16:06:35.954"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.953" endtime="20220624 16:06:35.954"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.954" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.954" endtime="20220624 16:06:35.954"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.954" endtime="20220624 16:06:35.955"/>
</kw>
<msg timestamp="20220624 16:06:35.955" level="INFO">${usuario_valido} = {'nome': 'Christina Shah', 'email': 'lboyd@example.org', 'password': '^MDrziC!k6', 'administrador': 'true', '_id': 'JshFU5BwpgOdtTs0'}</msg>
<status status="PASS" starttime="20220624 16:06:35.942" endtime="20220624 16:06:35.955"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.955" level="INFO">Removed item with key 'nome' and value 'Christina Shah'.</msg>
<msg timestamp="20220624 16:06:35.955" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:35.955" level="INFO">Removed item with key '_id' and value 'JshFU5BwpgOdtTs0'.</msg>
<status status="PASS" starttime="20220624 16:06:35.955" endtime="20220624 16:06:35.955"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.956" endtime="20220624 16:06:35.956"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.959" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '49', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=lboyd%40example.org&amp;password=%5EMDrziC%21k6 
 </msg>
<msg timestamp="20220624 16:06:35.959" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ea2e1391-d9e0-439b-b7f6-7677c4ba01d6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '277', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imxib3lkQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJeTURyemlDIWs2IiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.Cv-oTC25HxXXkvO7f3A-d7vdsa9nnrb5amow9GV1Iko"
} 
 </msg>
<msg timestamp="20220624 16:06:35.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.956" endtime="20220624 16:06:35.959"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.959" endtime="20220624 16:06:35.960"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.960" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imxib3lkQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJeTURyemlDIWs2IiwiaWF0IjoxNjU2MDk3NTk1LCJ...</msg>
<status status="PASS" starttime="20220624 16:06:35.960" endtime="20220624 16:06:35.960"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.955" endtime="20220624 16:06:35.960"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.961" endtime="20220624 16:06:35.962"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.961" endtime="20220624 16:06:35.962"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.962" endtime="20220624 16:06:35.962"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.962" endtime="20220624 16:06:35.963"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.963" level="INFO">Length is 204</msg>
<status status="PASS" starttime="20220624 16:06:35.963" endtime="20220624 16:06:35.963"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.963" endtime="20220624 16:06:35.963"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.964" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imxib3lkQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJeTURyemlDIWs2IiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.Cv-oTC25HxXXkvO7f3A-d7v...</msg>
<status status="PASS" starttime="20220624 16:06:35.963" endtime="20220624 16:06:35.964"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.964" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imxib3lkQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJeTURyemlDIWs2IiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.Cv-oTC25HxXXkvO7f3A-...</msg>
<status status="PASS" starttime="20220624 16:06:35.964" endtime="20220624 16:06:35.964"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.942" endtime="20220624 16:06:35.964"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:35.966" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:35.965" endtime="20220624 16:06:35.966"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.965" endtime="20220624 16:06:35.966"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.969" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imxib3lkQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJeTURyemlDIWs2IiwiaWF0IjoxNjU2MDk3NTk1LCJleHAiOjE2NTYwOTgxOTV9.Cv-oTC25HxXXkvO7f3A-d7vdsa9nnrb5amow9GV1Iko', 'Content-Length': '110', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flat+XXL&amp;descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:35.969" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '71981f55-e52b-4f12-bdf4-56b97fde251b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": "quantidade é obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:35.969" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.966" endtime="20220624 16:06:35.969"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.970" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.969" endtime="20220624 16:06:35.970"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.970" level="INFO">${response_body} = {'quantidade': 'quantidade é obrigatório'}</msg>
<status status="PASS" starttime="20220624 16:06:35.970" endtime="20220624 16:06:35.970"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.965" endtime="20220624 16:06:35.970"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.971" endtime="20220624 16:06:35.972"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.971" endtime="20220624 16:06:35.972"/>
</kw>
<kw name="Validar &quot;quantidade&quot; Com O Valor &quot;quantidade é obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.973" endtime="20220624 16:06:35.973"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.972" endtime="20220624 16:06:35.973"/>
</kw>
<tag>Cadastar_Produto_Com_Quantidade_Vazia</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.932" endtime="20220624 16:06:35.973"/>
</test>
<test id="s1-s3-s2-t12" name="Cenario: Tentar Cadastrar Produto Com A Quantidade Invalida" line="114">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:35.976" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:35.976" endtime="20220624 16:06:35.976"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.976" endtime="20220624 16:06:35.976"/>
</kw>
<kw name="Pegar Produto Do JSON Com o Campo &quot;quantidade&quot; Invalido" library="produtos_keywords" sourcename="Pegar Produto Do JSON Com o Campo &quot;${key}&quot; Invalido">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.981" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:35.982" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'beb53233-fb34-4480-afa1-59a92ebff129', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:35.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.978" endtime="20220624 16:06:35.982"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.982" endtime="20220624 16:06:35.982"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.983" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:35.982" endtime="20220624 16:06:35.983"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.977" endtime="20220624 16:06:35.983"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.984" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.984" endtime="20220624 16:06:35.985"/>
</kw>
<msg timestamp="20220624 16:06:35.985" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.977" endtime="20220624 16:06:35.985"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=1.5</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.985" endtime="20220624 16:06:35.985"/>
</kw>
<msg timestamp="20220624 16:06:35.985" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': '1.5', 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:35.977" endtime="20220624 16:06:35.985"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:35.987" level="INFO">${nome} = Pamela Hardy</msg>
<status status="PASS" starttime="20220624 16:06:35.987" endtime="20220624 16:06:35.987"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:35.987" level="INFO">${email} = xrichardson@example.com</msg>
<status status="PASS" starttime="20220624 16:06:35.987" endtime="20220624 16:06:35.987"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:35.988" level="INFO">${senha} = (1f70RQr4*</msg>
<status status="PASS" starttime="20220624 16:06:35.987" endtime="20220624 16:06:35.988"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:35.988" level="INFO">&amp;{usuario} = { nome=Pamela Hardy | email=xrichardson@example.com | password=(1f70RQr4* | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:35.988" endtime="20220624 16:06:35.988"/>
</kw>
<msg timestamp="20220624 16:06:35.988" level="INFO">${usuario} = {'nome': 'Pamela Hardy', 'email': 'xrichardson@example.com', 'password': '(1f70RQr4*', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:35.986" endtime="20220624 16:06:35.988"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:35.989" endtime="20220624 16:06:35.989"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:35.995" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '92', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Pamela+Hardy&amp;email=xrichardson%40example.com&amp;password=%281f70RQr4%2A&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:35.995" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f8962783-fea8-4ff5-82d4-409dcb6cb610', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "M5vMRxHFEpVlK8mj"
} 
 </msg>
<msg timestamp="20220624 16:06:35.995" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.989" endtime="20220624 16:06:35.995"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.996" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:35.996" endtime="20220624 16:06:35.996"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:35.997" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'M5vMRxHFEpVlK8mj'}</msg>
<status status="PASS" starttime="20220624 16:06:35.996" endtime="20220624 16:06:35.997"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.988" endtime="20220624 16:06:35.997"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:35.997" endtime="20220624 16:06:35.998"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.997" endtime="20220624 16:06:35.998"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:35.998" endtime="20220624 16:06:35.999"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.998" endtime="20220624 16:06:35.999"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:35.999" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:35.999" endtime="20220624 16:06:35.999"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:35.999" endtime="20220624 16:06:36.000"/>
</kw>
<msg timestamp="20220624 16:06:36.000" level="INFO">${usuario_valido} = {'nome': 'Pamela Hardy', 'email': 'xrichardson@example.com', 'password': '(1f70RQr4*', 'administrador': 'true', '_id': 'M5vMRxHFEpVlK8mj'}</msg>
<status status="PASS" starttime="20220624 16:06:35.986" endtime="20220624 16:06:36.000"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.000" level="INFO">Removed item with key 'nome' and value 'Pamela Hardy'.</msg>
<msg timestamp="20220624 16:06:36.000" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.000" level="INFO">Removed item with key '_id' and value 'M5vMRxHFEpVlK8mj'.</msg>
<status status="PASS" starttime="20220624 16:06:36.000" endtime="20220624 16:06:36.000"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.001" endtime="20220624 16:06:36.001"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.004" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '55', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=xrichardson%40example.com&amp;password=%281f70RQr4%2A 
 </msg>
<msg timestamp="20220624 16:06:36.004" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4245db93-2465-4978-880b-b8e204e0398f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '285', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InhyaWNoYXJkc29uQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIoMWY3MFJRcjQqIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.UxaE3N8WHGrOk8EQZkKL3CvLge4tw_IN1OpDN2kvSBs"
} 
 </msg>
<msg timestamp="20220624 16:06:36.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.001" endtime="20220624 16:06:36.004"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.004" endtime="20220624 16:06:36.005"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.005" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InhyaWNoYXJkc29uQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIoMWY3MFJRcjQqIiwiaWF0IjoxNjU2MDk...</msg>
<status status="PASS" starttime="20220624 16:06:36.005" endtime="20220624 16:06:36.005"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.000" endtime="20220624 16:06:36.005"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.006" endtime="20220624 16:06:36.007"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.006" endtime="20220624 16:06:36.007"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.007" endtime="20220624 16:06:36.008"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.007" endtime="20220624 16:06:36.008"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.008" level="INFO">Length is 212</msg>
<status status="PASS" starttime="20220624 16:06:36.008" endtime="20220624 16:06:36.009"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.008" endtime="20220624 16:06:36.009"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.009" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InhyaWNoYXJkc29uQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIoMWY3MFJRcjQqIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.UxaE3N8WHGrOk8E...</msg>
<status status="PASS" starttime="20220624 16:06:36.009" endtime="20220624 16:06:36.009"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.010" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InhyaWNoYXJkc29uQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIoMWY3MFJRcjQqIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.UxaE3N8WHGrO...</msg>
<status status="PASS" starttime="20220624 16:06:36.009" endtime="20220624 16:06:36.010"/>
</kw>
<status status="PASS" starttime="20220624 16:06:35.986" endtime="20220624 16:06:36.010"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/produtos&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.011" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.011" endtime="20220624 16:06:36.011"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.011" endtime="20220624 16:06:36.011"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.015" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InhyaWNoYXJkc29uQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiIoMWY3MFJRcjQqIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.UxaE3N8WHGrOk8EQZkKL3CvLge4tw_IN1OpDN2kvSBs', 'Content-Length': '125', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Flat+XXL&amp;descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;quantidade=1.5&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:36.015" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b2109d44-a907-4456-98d1-50cb1ba5b70c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '54', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": "quantidade deve ser um inteiro"
} 
 </msg>
<msg timestamp="20220624 16:06:36.016" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.011" endtime="20220624 16:06:36.016"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.016" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.016" endtime="20220624 16:06:36.016"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.017" level="INFO">${response_body} = {'quantidade': 'quantidade deve ser um inteiro'}</msg>
<status status="PASS" starttime="20220624 16:06:36.016" endtime="20220624 16:06:36.017"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.010" endtime="20220624 16:06:36.017"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.017" endtime="20220624 16:06:36.018"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.017" endtime="20220624 16:06:36.018"/>
</kw>
<kw name="Validar &quot;quantidade&quot; Com O Valor &quot;quantidade deve ser um inteiro&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.019" endtime="20220624 16:06:36.019"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.019" endtime="20220624 16:06:36.019"/>
</kw>
<tag>Cadastar_Produto_Quantidade_Invalida</tag>
<tag>Cadastrar_Produto</tag>
<tag>POST</tag>
<status status="PASS" starttime="20220624 16:06:35.975" endtime="20220624 16:06:36.020"/>
</test>
<doc>Arquivo De Requisições Do Tipo POST Do EndPoint Produtos</doc>
<status status="PASS" starttime="20220624 16:06:34.995" endtime="20220624 16:06:36.021"/>
</suite>
<suite id="s1-s3-s3" name="03 produtos PUT" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\03_produtos\03_produtos_PUT.robot">
<test id="s1-s3-s3-t1" name="Cenario: Atualizar Produto Não Cadastrado" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.035" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.035" endtime="20220624 16:06:36.035"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.035" endtime="20220624 16:06:36.035"/>
</kw>
<kw name="Pegar Produto Nao Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${lista_de_produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.040" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.040" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e0e83879-420b-4137-ac49-f5dabf55b974', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11784', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
        },
        {
            "nome": "Ergo Screen E-I",
            "descricao": "Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm",
            "quantidade": 999,
            "preco": 230,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.036" endtime="20220624 16:06:36.041"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.041" endtime="20220624 16:06:36.041"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.042" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.041" endtime="20220624 16:06:36.042"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.036" endtime="20220624 16:06:36.043"/>
</kw>
<msg timestamp="20220624 16:06:36.043" level="INFO">${lista_de_produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.036" endtime="20220624 16:06:36.043"/>
</kw>
<kw name="Importar JSON" library="resource">
<var>${produtos}</var>
<arg>produtos.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${arquivio}</var>
<arg>${EXECDIR}/resources/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220624 16:06:36.043" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json"&gt;C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\resources\produtos.json&lt;/a&gt;'.</msg>
<msg timestamp="20220624 16:06:36.044" level="INFO">${arquivio} = {
    "produtos": [
        {
            "nome": "Lovely Sound 5.1",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, 3m cable",
            "quantidade": 999,
            "preco": 39
        },
...</msg>
<status status="PASS" starttime="20220624 16:06:36.043" endtime="20220624 16:06:36.044"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>json.loads(r'''${arquivio}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:36.045" level="INFO">${data} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:36.044" endtime="20220624 16:06:36.045"/>
</kw>
<msg timestamp="20220624 16:06:36.045" level="INFO">${produtos} = {'produtos': [{'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 999, 'preco': 39}, {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Ro...</msg>
<status status="PASS" starttime="20220624 16:06:36.043" endtime="20220624 16:06:36.045"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_itens}</var>
<arg>${produtos['produtos']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.046" level="INFO">Length is 122</msg>
<msg timestamp="20220624 16:06:36.046" level="INFO">${quantidade_de_itens} = 122</msg>
<status status="PASS" starttime="20220624 16:06:36.045" endtime="20220624 16:06:36.046"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_de_itens}</value>
<iter>
<var name="${i}">0</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.047" endtime="20220624 16:06:36.047"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.047" endtime="20220624 16:06:36.047"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.047" endtime="20220624 16:06:36.047"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.046" endtime="20220624 16:06:36.047"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.046" endtime="20220624 16:06:36.047"/>
</iter>
<iter>
<var name="${i}">1</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.048" endtime="20220624 16:06:36.048"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.048" endtime="20220624 16:06:36.048"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.048" endtime="20220624 16:06:36.048"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.047" endtime="20220624 16:06:36.048"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.047" endtime="20220624 16:06:36.048"/>
</iter>
<iter>
<var name="${i}">2</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.049" endtime="20220624 16:06:36.049"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.049" endtime="20220624 16:06:36.049"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.049" endtime="20220624 16:06:36.049"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.048" endtime="20220624 16:06:36.049"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.048" endtime="20220624 16:06:36.049"/>
</iter>
<iter>
<var name="${i}">3</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.050" endtime="20220624 16:06:36.050"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.050" endtime="20220624 16:06:36.050"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.050" endtime="20220624 16:06:36.050"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.049" endtime="20220624 16:06:36.050"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.049" endtime="20220624 16:06:36.050"/>
</iter>
<iter>
<var name="${i}">4</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.051" endtime="20220624 16:06:36.051"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.051" endtime="20220624 16:06:36.051"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.051" endtime="20220624 16:06:36.051"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.050" endtime="20220624 16:06:36.051"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.050" endtime="20220624 16:06:36.051"/>
</iter>
<iter>
<var name="${i}">5</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.052" endtime="20220624 16:06:36.052"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.052" endtime="20220624 16:06:36.052"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.052" endtime="20220624 16:06:36.052"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.051" endtime="20220624 16:06:36.052"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.051" endtime="20220624 16:06:36.052"/>
</iter>
<iter>
<var name="${i}">6</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.053" endtime="20220624 16:06:36.053"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.053" endtime="20220624 16:06:36.053"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.053" endtime="20220624 16:06:36.053"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.052" endtime="20220624 16:06:36.053"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.052" endtime="20220624 16:06:36.053"/>
</iter>
<iter>
<var name="${i}">7</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.054" endtime="20220624 16:06:36.054"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.054" endtime="20220624 16:06:36.054"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.054" endtime="20220624 16:06:36.055"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.054" endtime="20220624 16:06:36.055"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.053" endtime="20220624 16:06:36.055"/>
</iter>
<iter>
<var name="${i}">8</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.055" endtime="20220624 16:06:36.056"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.056" endtime="20220624 16:06:36.056"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.055" endtime="20220624 16:06:36.056"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.055" endtime="20220624 16:06:36.056"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.055" endtime="20220624 16:06:36.056"/>
</iter>
<iter>
<var name="${i}">9</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.057" endtime="20220624 16:06:36.057"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.057" endtime="20220624 16:06:36.057"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.056" endtime="20220624 16:06:36.057"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.056" endtime="20220624 16:06:36.057"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.056" endtime="20220624 16:06:36.057"/>
</iter>
<iter>
<var name="${i}">10</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.058" endtime="20220624 16:06:36.058"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.058" endtime="20220624 16:06:36.058"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.058" endtime="20220624 16:06:36.058"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.057" endtime="20220624 16:06:36.058"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.057" endtime="20220624 16:06:36.058"/>
</iter>
<iter>
<var name="${i}">11</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.059" endtime="20220624 16:06:36.059"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.059" endtime="20220624 16:06:36.059"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.059" endtime="20220624 16:06:36.059"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.058" endtime="20220624 16:06:36.059"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.058" endtime="20220624 16:06:36.059"/>
</iter>
<iter>
<var name="${i}">12</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.060" endtime="20220624 16:06:36.060"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.060" endtime="20220624 16:06:36.060"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.060" endtime="20220624 16:06:36.060"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.059" endtime="20220624 16:06:36.060"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.059" endtime="20220624 16:06:36.060"/>
</iter>
<iter>
<var name="${i}">13</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.061" endtime="20220624 16:06:36.061"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.061" endtime="20220624 16:06:36.061"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.061" endtime="20220624 16:06:36.061"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.060" endtime="20220624 16:06:36.061"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.060" endtime="20220624 16:06:36.061"/>
</iter>
<iter>
<var name="${i}">14</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.062" endtime="20220624 16:06:36.062"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.062" endtime="20220624 16:06:36.062"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.062" endtime="20220624 16:06:36.062"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.061" endtime="20220624 16:06:36.062"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.061" endtime="20220624 16:06:36.062"/>
</iter>
<iter>
<var name="${i}">15</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.063" endtime="20220624 16:06:36.063"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.063" endtime="20220624 16:06:36.063"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.063" endtime="20220624 16:06:36.063"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.062" endtime="20220624 16:06:36.063"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.062" endtime="20220624 16:06:36.063"/>
</iter>
<iter>
<var name="${i}">16</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.064" endtime="20220624 16:06:36.064"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.064" endtime="20220624 16:06:36.064"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.064" endtime="20220624 16:06:36.064"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.063" endtime="20220624 16:06:36.064"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.063" endtime="20220624 16:06:36.064"/>
</iter>
<iter>
<var name="${i}">17</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.065" endtime="20220624 16:06:36.065"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.065" endtime="20220624 16:06:36.065"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.065" endtime="20220624 16:06:36.065"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.064" endtime="20220624 16:06:36.065"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.064" endtime="20220624 16:06:36.065"/>
</iter>
<iter>
<var name="${i}">18</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.066" endtime="20220624 16:06:36.066"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.066" endtime="20220624 16:06:36.066"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.066" endtime="20220624 16:06:36.066"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.065" endtime="20220624 16:06:36.066"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.065" endtime="20220624 16:06:36.066"/>
</iter>
<iter>
<var name="${i}">19</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.067" endtime="20220624 16:06:36.067"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.067" endtime="20220624 16:06:36.067"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.067" endtime="20220624 16:06:36.067"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.067" endtime="20220624 16:06:36.067"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.067" endtime="20220624 16:06:36.068"/>
</iter>
<iter>
<var name="${i}">20</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.068" endtime="20220624 16:06:36.068"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.069" endtime="20220624 16:06:36.069"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.068" endtime="20220624 16:06:36.069"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.068" endtime="20220624 16:06:36.069"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.068" endtime="20220624 16:06:36.069"/>
</iter>
<iter>
<var name="${i}">21</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.069" endtime="20220624 16:06:36.070"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.070" endtime="20220624 16:06:36.070"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.069" endtime="20220624 16:06:36.070"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.069" endtime="20220624 16:06:36.070"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.069" endtime="20220624 16:06:36.070"/>
</iter>
<iter>
<var name="${i}">22</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.071" endtime="20220624 16:06:36.071"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.071" endtime="20220624 16:06:36.071"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.071" endtime="20220624 16:06:36.071"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.070" endtime="20220624 16:06:36.071"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.070" endtime="20220624 16:06:36.071"/>
</iter>
<iter>
<var name="${i}">23</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.072" endtime="20220624 16:06:36.072"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.072" endtime="20220624 16:06:36.072"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.072" endtime="20220624 16:06:36.072"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.071" endtime="20220624 16:06:36.072"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.071" endtime="20220624 16:06:36.072"/>
</iter>
<iter>
<var name="${i}">24</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.074" endtime="20220624 16:06:36.074"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.074" endtime="20220624 16:06:36.074"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.074" endtime="20220624 16:06:36.074"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.072" endtime="20220624 16:06:36.074"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.072" endtime="20220624 16:06:36.074"/>
</iter>
<iter>
<var name="${i}">25</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.075" endtime="20220624 16:06:36.075"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.075" endtime="20220624 16:06:36.075"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.075" endtime="20220624 16:06:36.075"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.074" endtime="20220624 16:06:36.075"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.074" endtime="20220624 16:06:36.075"/>
</iter>
<iter>
<var name="${i}">26</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.076" endtime="20220624 16:06:36.076"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.076" endtime="20220624 16:06:36.076"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.076" endtime="20220624 16:06:36.076"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.075" endtime="20220624 16:06:36.076"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.075" endtime="20220624 16:06:36.076"/>
</iter>
<iter>
<var name="${i}">27</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.077" endtime="20220624 16:06:36.077"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.077" endtime="20220624 16:06:36.077"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.077" endtime="20220624 16:06:36.077"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.076" endtime="20220624 16:06:36.077"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.076" endtime="20220624 16:06:36.077"/>
</iter>
<iter>
<var name="${i}">28</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.078" endtime="20220624 16:06:36.078"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.078" endtime="20220624 16:06:36.078"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.078" endtime="20220624 16:06:36.078"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.077" endtime="20220624 16:06:36.078"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.077" endtime="20220624 16:06:36.078"/>
</iter>
<iter>
<var name="${i}">29</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.079" endtime="20220624 16:06:36.079"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.079" endtime="20220624 16:06:36.079"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.079" endtime="20220624 16:06:36.079"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.078" endtime="20220624 16:06:36.079"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.078" endtime="20220624 16:06:36.079"/>
</iter>
<iter>
<var name="${i}">30</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.080" endtime="20220624 16:06:36.080"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.080" endtime="20220624 16:06:36.080"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.080" endtime="20220624 16:06:36.080"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.079" endtime="20220624 16:06:36.080"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.079" endtime="20220624 16:06:36.080"/>
</iter>
<iter>
<var name="${i}">31</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.081" endtime="20220624 16:06:36.081"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.081" endtime="20220624 16:06:36.081"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.081" endtime="20220624 16:06:36.081"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.081" endtime="20220624 16:06:36.081"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.080" endtime="20220624 16:06:36.081"/>
</iter>
<iter>
<var name="${i}">32</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.082" endtime="20220624 16:06:36.082"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.082" endtime="20220624 16:06:36.082"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.082" endtime="20220624 16:06:36.083"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.082" endtime="20220624 16:06:36.083"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.082" endtime="20220624 16:06:36.083"/>
</iter>
<iter>
<var name="${i}">33</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.083" endtime="20220624 16:06:36.084"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.084" endtime="20220624 16:06:36.084"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.083" endtime="20220624 16:06:36.084"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.083" endtime="20220624 16:06:36.084"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.083" endtime="20220624 16:06:36.084"/>
</iter>
<iter>
<var name="${i}">34</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.085" endtime="20220624 16:06:36.085"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.085" endtime="20220624 16:06:36.085"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.084" endtime="20220624 16:06:36.085"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.084" endtime="20220624 16:06:36.085"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.084" endtime="20220624 16:06:36.085"/>
</iter>
<iter>
<var name="${i}">35</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.086" endtime="20220624 16:06:36.086"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.086" endtime="20220624 16:06:36.086"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.085" endtime="20220624 16:06:36.086"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.085" endtime="20220624 16:06:36.086"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.085" endtime="20220624 16:06:36.086"/>
</iter>
<iter>
<var name="${i}">36</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.087" endtime="20220624 16:06:36.087"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.087" endtime="20220624 16:06:36.087"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.087" endtime="20220624 16:06:36.087"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.086" endtime="20220624 16:06:36.087"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.086" endtime="20220624 16:06:36.087"/>
</iter>
<iter>
<var name="${i}">37</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.088" endtime="20220624 16:06:36.088"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.088" endtime="20220624 16:06:36.088"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.088" endtime="20220624 16:06:36.088"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.087" endtime="20220624 16:06:36.088"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.087" endtime="20220624 16:06:36.088"/>
</iter>
<iter>
<var name="${i}">38</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.089" endtime="20220624 16:06:36.089"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.089" endtime="20220624 16:06:36.089"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.089" endtime="20220624 16:06:36.089"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.088" endtime="20220624 16:06:36.089"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.088" endtime="20220624 16:06:36.089"/>
</iter>
<iter>
<var name="${i}">39</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.090" endtime="20220624 16:06:36.090"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.090" endtime="20220624 16:06:36.090"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.090" endtime="20220624 16:06:36.090"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.089" endtime="20220624 16:06:36.090"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.089" endtime="20220624 16:06:36.090"/>
</iter>
<iter>
<var name="${i}">40</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.091" endtime="20220624 16:06:36.091"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.091" endtime="20220624 16:06:36.091"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.091" endtime="20220624 16:06:36.091"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.090" endtime="20220624 16:06:36.091"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.090" endtime="20220624 16:06:36.091"/>
</iter>
<iter>
<var name="${i}">41</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.092" endtime="20220624 16:06:36.092"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.092" endtime="20220624 16:06:36.092"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.092" endtime="20220624 16:06:36.092"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.091" endtime="20220624 16:06:36.092"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.091" endtime="20220624 16:06:36.092"/>
</iter>
<iter>
<var name="${i}">42</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.093" endtime="20220624 16:06:36.093"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.093" endtime="20220624 16:06:36.093"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.093" endtime="20220624 16:06:36.093"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.092" endtime="20220624 16:06:36.093"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.092" endtime="20220624 16:06:36.093"/>
</iter>
<iter>
<var name="${i}">43</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.094" endtime="20220624 16:06:36.094"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.094" endtime="20220624 16:06:36.094"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.094" endtime="20220624 16:06:36.094"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.093" endtime="20220624 16:06:36.094"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.093" endtime="20220624 16:06:36.094"/>
</iter>
<iter>
<var name="${i}">44</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.095" endtime="20220624 16:06:36.095"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.095" endtime="20220624 16:06:36.095"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.095" endtime="20220624 16:06:36.095"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.095" endtime="20220624 16:06:36.095"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.094" endtime="20220624 16:06:36.096"/>
</iter>
<iter>
<var name="${i}">45</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.096" endtime="20220624 16:06:36.096"/>
</kw>
<break>
<status status="NOT RUN" starttime="20220624 16:06:36.096" endtime="20220624 16:06:36.097"/>
</break>
<status status="NOT RUN" starttime="20220624 16:06:36.096" endtime="20220624 16:06:36.097"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.096" endtime="20220624 16:06:36.097"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.096" endtime="20220624 16:06:36.097"/>
</iter>
<iter>
<var name="${i}">46</var>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${produtos['produtos'][${i}]['nome']}&quot;&quot;&quot; not in &quot;&quot;&quot;${lista_de_produtos['produtos']}&quot;&quot;&quot;">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${produtos['produtos'][${i}]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.098" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:36.097" endtime="20220624 16:06:36.099"/>
</kw>
<break>
<status status="PASS" starttime="20220624 16:06:36.099" endtime="20220624 16:06:36.099"/>
</break>
<status status="PASS" starttime="20220624 16:06:36.097" endtime="20220624 16:06:36.099"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.097" endtime="20220624 16:06:36.099"/>
</if>
<status status="PASS" starttime="20220624 16:06:36.097" endtime="20220624 16:06:36.099"/>
</iter>
<status status="PASS" starttime="20220624 16:06:36.046" endtime="20220624 16:06:36.099"/>
</for>
<msg timestamp="20220624 16:06:36.099" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45}</msg>
<status status="PASS" starttime="20220624 16:06:36.036" endtime="20220624 16:06:36.099"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.101" level="INFO">${nome} = Franklin Walker</msg>
<status status="PASS" starttime="20220624 16:06:36.101" endtime="20220624 16:06:36.101"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.101" level="INFO">${email} = holtlisa@example.net</msg>
<status status="PASS" starttime="20220624 16:06:36.101" endtime="20220624 16:06:36.101"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.102" level="INFO">${senha} = d#0Ak_d7Tz</msg>
<status status="PASS" starttime="20220624 16:06:36.101" endtime="20220624 16:06:36.102"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.102" level="INFO">&amp;{usuario} = { nome=Franklin Walker | email=holtlisa@example.net | password=d#0Ak_d7Tz | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.102" endtime="20220624 16:06:36.102"/>
</kw>
<msg timestamp="20220624 16:06:36.102" level="INFO">${usuario} = {'nome': 'Franklin Walker', 'email': 'holtlisa@example.net', 'password': 'd#0Ak_d7Tz', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.100" endtime="20220624 16:06:36.102"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.103" endtime="20220624 16:06:36.103"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.108" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Franklin+Walker&amp;email=holtlisa%40example.net&amp;password=d%230Ak_d7Tz&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.108" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ec5beea7-fd4a-4a6a-8800-8239dad92def', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uoqwXPihdMDlgfQE"
} 
 </msg>
<msg timestamp="20220624 16:06:36.109" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.103" endtime="20220624 16:06:36.109"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.109" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.109" endtime="20220624 16:06:36.109"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.110" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'uoqwXPihdMDlgfQE'}</msg>
<status status="PASS" starttime="20220624 16:06:36.109" endtime="20220624 16:06:36.110"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.102" endtime="20220624 16:06:36.110"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.110" endtime="20220624 16:06:36.111"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.110" endtime="20220624 16:06:36.111"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.112" endtime="20220624 16:06:36.112"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.111" endtime="20220624 16:06:36.112"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.113" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.112" endtime="20220624 16:06:36.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.113" endtime="20220624 16:06:36.113"/>
</kw>
<msg timestamp="20220624 16:06:36.113" level="INFO">${usuario_valido} = {'nome': 'Franklin Walker', 'email': 'holtlisa@example.net', 'password': 'd#0Ak_d7Tz', 'administrador': 'true', '_id': 'uoqwXPihdMDlgfQE'}</msg>
<status status="PASS" starttime="20220624 16:06:36.100" endtime="20220624 16:06:36.113"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.114" level="INFO">Removed item with key 'nome' and value 'Franklin Walker'.</msg>
<msg timestamp="20220624 16:06:36.114" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.114" level="INFO">Removed item with key '_id' and value 'uoqwXPihdMDlgfQE'.</msg>
<status status="PASS" starttime="20220624 16:06:36.114" endtime="20220624 16:06:36.114"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.114" endtime="20220624 16:06:36.114"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.117" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=holtlisa%40example.net&amp;password=d%230Ak_d7Tz 
 </msg>
<msg timestamp="20220624 16:06:36.117" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f66254dd-193e-4cbf-856f-1b05f0321a92', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '281', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhvbHRsaXNhQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJkIzBBa19kN1R6IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.ziyVwDFFbf5nhGxP0brdVbQOxGYvamCc9PNyc6RFs3Y"
} 
 </msg>
<msg timestamp="20220624 16:06:36.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.114" endtime="20220624 16:06:36.118"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.118" endtime="20220624 16:06:36.118"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.119" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhvbHRsaXNhQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJkIzBBa19kN1R6IiwiaWF0IjoxNjU2MDk3NTk...</msg>
<status status="PASS" starttime="20220624 16:06:36.118" endtime="20220624 16:06:36.119"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.114" endtime="20220624 16:06:36.119"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.119" endtime="20220624 16:06:36.120"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.119" endtime="20220624 16:06:36.120"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.120" endtime="20220624 16:06:36.121"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.120" endtime="20220624 16:06:36.121"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.121" level="INFO">Length is 208</msg>
<status status="PASS" starttime="20220624 16:06:36.121" endtime="20220624 16:06:36.121"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.121" endtime="20220624 16:06:36.122"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.122" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhvbHRsaXNhQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJkIzBBa19kN1R6IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.ziyVwDFFbf5nhGxP0br...</msg>
<status status="PASS" starttime="20220624 16:06:36.122" endtime="20220624 16:06:36.122"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.122" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhvbHRsaXNhQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJkIzBBa19kN1R6IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.ziyVwDFFbf5nhGxP...</msg>
<status status="PASS" starttime="20220624 16:06:36.122" endtime="20220624 16:06:36.123"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.100" endtime="20220624 16:06:36.123"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/NaoExisto&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.124" endtime="20220624 16:06:36.124"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.133" level="INFO">PUT Request : url=http://localhost:3000/produtos/NaoExisto 
 path_url=/produtos/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhvbHRsaXNhQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJkIzBBa19kN1R6IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.ziyVwDFFbf5nhGxP0brdVbQOxGYvamCc9PNyc6RFs3Y', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=ITelo+MusicStick&amp;descricao=64+GB+USB+Music-on-Available-Stick&amp;quantidade=999&amp;preco=45 
 </msg>
<msg timestamp="20220624 16:06:36.133" level="INFO">PUT Response : url=http://localhost:3000/produtos/NaoExisto 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '53fceff2-e7f0-4c05-8114-5920943bf09f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ArEArsbw9iH7meyd"
} 
 </msg>
<msg timestamp="20220624 16:06:36.134" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.124" endtime="20220624 16:06:36.134"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.134" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.134" endtime="20220624 16:06:36.134"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.135" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:36.134" endtime="20220624 16:06:36.135"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.123" endtime="20220624 16:06:36.135"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.135" endtime="20220624 16:06:36.136"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.135" endtime="20220624 16:06:36.136"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.137" endtime="20220624 16:06:36.137"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.136" endtime="20220624 16:06:36.137"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.138" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.138" endtime="20220624 16:06:36.138"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.138" endtime="20220624 16:06:36.139"/>
</kw>
<tag>Atualizar_Produto_NAO_CADASTRADO</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.034" endtime="20220624 16:06:36.139"/>
</test>
<test id="s1-s3-s3-t2" name="Cenario: Atualizar Nome do Produto" line="20">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.141" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.141" endtime="20220624 16:06:36.141"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.141" endtime="20220624 16:06:36.141"/>
</kw>
<kw name="Alterar &quot;String&quot; Campo &quot;nome&quot; Do Produto" library="produtos_keywords" sourcename="Alterar &quot;${tipo}&quot; Campo &quot;${key}&quot; Do Produto">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.146" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.146" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7e8cc392-87f7-49c5-aa04-cf69cf4a8a94', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12002', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.143" endtime="20220624 16:06:36.146"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.147" endtime="20220624 16:06:36.147"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.148" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.147" endtime="20220624 16:06:36.148"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.142" endtime="20220624 16:06:36.148"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.149" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.148" endtime="20220624 16:06:36.149"/>
</kw>
<msg timestamp="20220624 16:06:36.150" level="INFO">${produto} = {'nome': 'Flat XXL', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.142" endtime="20220624 16:06:36.150"/>
</kw>
<if>
<branch type="IF" condition="&quot;${tipo}&quot; == &quot;String&quot;">
<kw name="Word" library="FakerLibrary">
<var>${novo_valor}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220624 16:06:36.150" level="INFO">${novo_valor} = type</msg>
<status status="PASS" starttime="20220624 16:06:36.150" endtime="20220624 16:06:36.150"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.150" endtime="20220624 16:06:36.150"/>
</branch>
<branch type="ELSE IF" condition="&quot;${tipo}&quot; == &quot;Integer&quot;">
<kw name="Random Int" library="FakerLibrary">
<var>${novo_valor}</var>
<arg>min=1</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.150" endtime="20220624 16:06:36.150"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:36.150" endtime="20220624 16:06:36.150"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.150" endtime="20220624 16:06:36.150"/>
</if>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=${novo_valor}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.150" endtime="20220624 16:06:36.151"/>
</kw>
<msg timestamp="20220624 16:06:36.151" level="INFO">${produto} = {'nome': 'type', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.142" endtime="20220624 16:06:36.151"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.152" level="INFO">${nome} = Michelle Wilson</msg>
<status status="PASS" starttime="20220624 16:06:36.152" endtime="20220624 16:06:36.152"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.153" level="INFO">${email} = clewis@example.com</msg>
<status status="PASS" starttime="20220624 16:06:36.152" endtime="20220624 16:06:36.153"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.153" level="INFO">${senha} = PJy2KJx_O$</msg>
<status status="PASS" starttime="20220624 16:06:36.153" endtime="20220624 16:06:36.153"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.153" level="INFO">&amp;{usuario} = { nome=Michelle Wilson | email=clewis@example.com | password=PJy2KJx_O$ | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.153" endtime="20220624 16:06:36.153"/>
</kw>
<msg timestamp="20220624 16:06:36.153" level="INFO">${usuario} = {'nome': 'Michelle Wilson', 'email': 'clewis@example.com', 'password': 'PJy2KJx_O$', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.152" endtime="20220624 16:06:36.153"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.154" endtime="20220624 16:06:36.154"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.160" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '88', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Michelle+Wilson&amp;email=clewis%40example.com&amp;password=PJy2KJx_O%24&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.160" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '37b4b8cd-447f-4234-bdda-5e97e00fa7ae', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uq0R83vOuMcvgCOv"
} 
 </msg>
<msg timestamp="20220624 16:06:36.160" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.154" endtime="20220624 16:06:36.160"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.160" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.160" endtime="20220624 16:06:36.160"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.161" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'uq0R83vOuMcvgCOv'}</msg>
<status status="PASS" starttime="20220624 16:06:36.160" endtime="20220624 16:06:36.161"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.154" endtime="20220624 16:06:36.161"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.162" endtime="20220624 16:06:36.162"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.161" endtime="20220624 16:06:36.162"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.163" endtime="20220624 16:06:36.163"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.163" endtime="20220624 16:06:36.163"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.164" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.163" endtime="20220624 16:06:36.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.164" endtime="20220624 16:06:36.165"/>
</kw>
<msg timestamp="20220624 16:06:36.165" level="INFO">${usuario_valido} = {'nome': 'Michelle Wilson', 'email': 'clewis@example.com', 'password': 'PJy2KJx_O$', 'administrador': 'true', '_id': 'uq0R83vOuMcvgCOv'}</msg>
<status status="PASS" starttime="20220624 16:06:36.151" endtime="20220624 16:06:36.165"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.165" level="INFO">Removed item with key 'nome' and value 'Michelle Wilson'.</msg>
<msg timestamp="20220624 16:06:36.165" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.165" level="INFO">Removed item with key '_id' and value 'uq0R83vOuMcvgCOv'.</msg>
<status status="PASS" starttime="20220624 16:06:36.165" endtime="20220624 16:06:36.165"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.165" endtime="20220624 16:06:36.166"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.169" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '48', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=clewis%40example.com&amp;password=PJy2KJx_O%24 
 </msg>
<msg timestamp="20220624 16:06:36.169" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '01112f70-e0fb-4783-b1f2-6d96734cf72c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '279', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNsZXdpc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiUEp5MktKeF9PJCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.513hOfe4oUwhsKwpC5GxF1a_sB9e2HGeJagcRN8aVk8"
} 
 </msg>
<msg timestamp="20220624 16:06:36.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.166" endtime="20220624 16:06:36.169"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.169" endtime="20220624 16:06:36.169"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.170" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNsZXdpc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiUEp5MktKeF9PJCIsImlhdCI6MTY1NjA5NzU5Niw...</msg>
<status status="PASS" starttime="20220624 16:06:36.169" endtime="20220624 16:06:36.170"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.165" endtime="20220624 16:06:36.170"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.170" endtime="20220624 16:06:36.171"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.170" endtime="20220624 16:06:36.171"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.172" endtime="20220624 16:06:36.172"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.171" endtime="20220624 16:06:36.172"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.173" level="INFO">Length is 206</msg>
<status status="PASS" starttime="20220624 16:06:36.172" endtime="20220624 16:06:36.173"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.172" endtime="20220624 16:06:36.173"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.174" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNsZXdpc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiUEp5MktKeF9PJCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.513hOfe4oUwhsKwpC5GxF...</msg>
<status status="PASS" starttime="20220624 16:06:36.173" endtime="20220624 16:06:36.174"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.174" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNsZXdpc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiUEp5MktKeF9PJCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.513hOfe4oUwhsKwpC5...</msg>
<status status="PASS" starttime="20220624 16:06:36.174" endtime="20220624 16:06:36.174"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.151" endtime="20220624 16:06:36.174"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.176" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.176" endtime="20220624 16:06:36.176"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.175" endtime="20220624 16:06:36.176"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.186" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNsZXdpc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiUEp5MktKeF9PJCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.513hOfe4oUwhsKwpC5GxF1a_sB9e2HGeJagcRN8aVk8', 'Content-Length': '121', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=Optimum+Hi-Resolution+max.+2048+%C3%97+1536+%40+85Hz%2C+Dot+Pitch%3A+0.24mm&amp;quantidade=999&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:36.186" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9a483481-abba-4a66-9e22-2ef113482669', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:36.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.176" endtime="20220624 16:06:36.186"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.186" endtime="20220624 16:06:36.186"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.187" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:36.186" endtime="20220624 16:06:36.187"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.175" endtime="20220624 16:06:36.187"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.188" endtime="20220624 16:06:36.188"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.187" endtime="20220624 16:06:36.188"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.189" endtime="20220624 16:06:36.190"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.189" endtime="20220624 16:06:36.190"/>
</kw>
<tag>Atualizar_Produto_Nome</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.140" endtime="20220624 16:06:36.190"/>
</test>
<test id="s1-s3-s3-t3" name="Cenario: Atualizar Descrição do Produto" line="28">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.192" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.192" endtime="20220624 16:06:36.193"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.192" endtime="20220624 16:06:36.193"/>
</kw>
<kw name="Alterar &quot;String&quot; Campo &quot;descricao&quot; Do Produto" library="produtos_keywords" sourcename="Alterar &quot;${tipo}&quot; Campo &quot;${key}&quot; Do Produto">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.198" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.198" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6c549388-ebaf-4807-9b81-7ef5a0278480', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11998', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.194" endtime="20220624 16:06:36.198"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.198" endtime="20220624 16:06:36.198"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.199" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.198" endtime="20220624 16:06:36.200"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.194" endtime="20220624 16:06:36.200"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.201" level="INFO">${produto} = {'nome': 'type', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.200" endtime="20220624 16:06:36.201"/>
</kw>
<msg timestamp="20220624 16:06:36.201" level="INFO">${produto} = {'nome': 'type', 'descricao': 'Optimum Hi-Resolution max. 2048 × 1536 @ 85Hz, Dot Pitch: 0.24mm', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.193" endtime="20220624 16:06:36.201"/>
</kw>
<if>
<branch type="IF" condition="&quot;${tipo}&quot; == &quot;String&quot;">
<kw name="Word" library="FakerLibrary">
<var>${novo_valor}</var>
<doc>Generate a word.</doc>
<msg timestamp="20220624 16:06:36.201" level="INFO">${novo_valor} = wish</msg>
<status status="PASS" starttime="20220624 16:06:36.201" endtime="20220624 16:06:36.201"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.201" endtime="20220624 16:06:36.201"/>
</branch>
<branch type="ELSE IF" condition="&quot;${tipo}&quot; == &quot;Integer&quot;">
<kw name="Random Int" library="FakerLibrary">
<var>${novo_valor}</var>
<arg>min=1</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.201" endtime="20220624 16:06:36.201"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:36.201" endtime="20220624 16:06:36.201"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.201" endtime="20220624 16:06:36.201"/>
</if>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=${novo_valor}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.201" endtime="20220624 16:06:36.202"/>
</kw>
<msg timestamp="20220624 16:06:36.202" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.193" endtime="20220624 16:06:36.202"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.204" level="INFO">${nome} = Amy Johnson</msg>
<status status="PASS" starttime="20220624 16:06:36.203" endtime="20220624 16:06:36.204"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.204" level="INFO">${email} = ernestroberts@example.com</msg>
<status status="PASS" starttime="20220624 16:06:36.204" endtime="20220624 16:06:36.204"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.204" level="INFO">${senha} = S9QI)oCq+N</msg>
<status status="PASS" starttime="20220624 16:06:36.204" endtime="20220624 16:06:36.204"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.205" level="INFO">&amp;{usuario} = { nome=Amy Johnson | email=ernestroberts@example.com | password=S9QI)oCq+N | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.205" endtime="20220624 16:06:36.205"/>
</kw>
<msg timestamp="20220624 16:06:36.205" level="INFO">${usuario} = {'nome': 'Amy Johnson', 'email': 'ernestroberts@example.com', 'password': 'S9QI)oCq+N', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.203" endtime="20220624 16:06:36.205"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.205" endtime="20220624 16:06:36.206"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.212" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '93', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Amy+Johnson&amp;email=ernestroberts%40example.com&amp;password=S9QI%29oCq%2BN&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.212" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0e3ff4d5-8d22-495e-9e4a-c6893625d6b6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "hMWZtCE4xEzKxMpv"
} 
 </msg>
<msg timestamp="20220624 16:06:36.212" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.206" endtime="20220624 16:06:36.212"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.212" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.212" endtime="20220624 16:06:36.212"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.213" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'hMWZtCE4xEzKxMpv'}</msg>
<status status="PASS" starttime="20220624 16:06:36.212" endtime="20220624 16:06:36.213"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.205" endtime="20220624 16:06:36.213"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.214" endtime="20220624 16:06:36.214"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.213" endtime="20220624 16:06:36.214"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.215" endtime="20220624 16:06:36.215"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.214" endtime="20220624 16:06:36.215"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.216" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.215" endtime="20220624 16:06:36.216"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.216" endtime="20220624 16:06:36.216"/>
</kw>
<msg timestamp="20220624 16:06:36.216" level="INFO">${usuario_valido} = {'nome': 'Amy Johnson', 'email': 'ernestroberts@example.com', 'password': 'S9QI)oCq+N', 'administrador': 'true', '_id': 'hMWZtCE4xEzKxMpv'}</msg>
<status status="PASS" starttime="20220624 16:06:36.203" endtime="20220624 16:06:36.216"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.217" level="INFO">Removed item with key 'nome' and value 'Amy Johnson'.</msg>
<msg timestamp="20220624 16:06:36.217" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.217" level="INFO">Removed item with key '_id' and value 'hMWZtCE4xEzKxMpv'.</msg>
<status status="PASS" starttime="20220624 16:06:36.217" endtime="20220624 16:06:36.217"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.217" endtime="20220624 16:06:36.217"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.220" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '57', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=ernestroberts%40example.com&amp;password=S9QI%29oCq%2BN 
 </msg>
<msg timestamp="20220624 16:06:36.220" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '70deade4-3311-4bca-bc78-8756a3fe31a9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '288', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVybmVzdHJvYmVydHNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IlM5UUkpb0NxK04iLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.mlPf96jcdl0lCGM4weeZJizCsN_yUB9pvkMUlqo6DT4"
} 
 </msg>
<msg timestamp="20220624 16:06:36.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.217" endtime="20220624 16:06:36.220"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.221" endtime="20220624 16:06:36.221"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.221" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVybmVzdHJvYmVydHNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IlM5UUkpb0NxK04iLCJpYXQiOjE2NTY...</msg>
<status status="PASS" starttime="20220624 16:06:36.221" endtime="20220624 16:06:36.221"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.217" endtime="20220624 16:06:36.222"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.222" endtime="20220624 16:06:36.223"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.222" endtime="20220624 16:06:36.223"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.223" endtime="20220624 16:06:36.225"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.223" endtime="20220624 16:06:36.225"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.225" level="INFO">Length is 215</msg>
<status status="PASS" starttime="20220624 16:06:36.225" endtime="20220624 16:06:36.225"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.225" endtime="20220624 16:06:36.225"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.226" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVybmVzdHJvYmVydHNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IlM5UUkpb0NxK04iLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.mlPf96jcdl0l...</msg>
<status status="PASS" starttime="20220624 16:06:36.226" endtime="20220624 16:06:36.226"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.227" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVybmVzdHJvYmVydHNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IlM5UUkpb0NxK04iLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.mlPf96jcd...</msg>
<status status="PASS" starttime="20220624 16:06:36.226" endtime="20220624 16:06:36.227"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.203" endtime="20220624 16:06:36.227"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.229" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.229" endtime="20220624 16:06:36.229"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.229" endtime="20220624 16:06:36.229"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.240" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVybmVzdHJvYmVydHNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IlM5UUkpb0NxK04iLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.mlPf96jcdl0lCGM4weeZJizCsN_yUB9pvkMUlqo6DT4', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=999&amp;preco=1430 
 </msg>
<msg timestamp="20220624 16:06:36.241" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '47afaf17-4f91-4836-a5f1-1906ac70e38c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:36.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.230" endtime="20220624 16:06:36.241"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.241" endtime="20220624 16:06:36.241"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.242" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:36.241" endtime="20220624 16:06:36.242"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.227" endtime="20220624 16:06:36.242"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.243" endtime="20220624 16:06:36.244"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.242" endtime="20220624 16:06:36.244"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.244" endtime="20220624 16:06:36.245"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.244" endtime="20220624 16:06:36.245"/>
</kw>
<tag>Atualizar_Produto_Descricao</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.191" endtime="20220624 16:06:36.245"/>
</test>
<test id="s1-s3-s3-t4" name="Cenario: Atualizar Preço do Produto" line="36">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.247" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.247" endtime="20220624 16:06:36.247"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.247" endtime="20220624 16:06:36.247"/>
</kw>
<kw name="Alterar &quot;Integer&quot; Campo &quot;preco&quot; Do Produto" library="produtos_keywords" sourcename="Alterar &quot;${tipo}&quot; Campo &quot;${key}&quot; Do Produto">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.252" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.252" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '93cb9501-4bd8-4768-87e0-9c864c929d99', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.248" endtime="20220624 16:06:36.252"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.252" endtime="20220624 16:06:36.252"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.253" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.252" endtime="20220624 16:06:36.253"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.248" endtime="20220624 16:06:36.253"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.254" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.253" endtime="20220624 16:06:36.254"/>
</kw>
<msg timestamp="20220624 16:06:36.255" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 999, 'preco': 1430, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.248" endtime="20220624 16:06:36.255"/>
</kw>
<if>
<branch type="IF" condition="&quot;${tipo}&quot; == &quot;String&quot;">
<kw name="Word" library="FakerLibrary">
<var>${novo_valor}</var>
<doc>Generate a word.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.255" endtime="20220624 16:06:36.255"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:36.255" endtime="20220624 16:06:36.255"/>
</branch>
<branch type="ELSE IF" condition="&quot;${tipo}&quot; == &quot;Integer&quot;">
<kw name="Random Int" library="FakerLibrary">
<var>${novo_valor}</var>
<arg>min=1</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.255" level="INFO">${novo_valor} = 3662</msg>
<status status="PASS" starttime="20220624 16:06:36.255" endtime="20220624 16:06:36.255"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.255" endtime="20220624 16:06:36.255"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.255" endtime="20220624 16:06:36.255"/>
</if>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=${novo_valor}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.255" endtime="20220624 16:06:36.256"/>
</kw>
<msg timestamp="20220624 16:06:36.256" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 999, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.248" endtime="20220624 16:06:36.256"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.257" level="INFO">${nome} = Michael Huang</msg>
<status status="PASS" starttime="20220624 16:06:36.257" endtime="20220624 16:06:36.257"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.258" level="INFO">${email} = ywright@example.net</msg>
<status status="PASS" starttime="20220624 16:06:36.257" endtime="20220624 16:06:36.258"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.258" level="INFO">${senha} = u!tD9S5!Wf</msg>
<status status="PASS" starttime="20220624 16:06:36.258" endtime="20220624 16:06:36.258"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.259" level="INFO">&amp;{usuario} = { nome=Michael Huang | email=ywright@example.net | password=u!tD9S5!Wf | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.258" endtime="20220624 16:06:36.259"/>
</kw>
<msg timestamp="20220624 16:06:36.259" level="INFO">${usuario} = {'nome': 'Michael Huang', 'email': 'ywright@example.net', 'password': 'u!tD9S5!Wf', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.257" endtime="20220624 16:06:36.259"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.259" endtime="20220624 16:06:36.260"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.267" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Michael+Huang&amp;email=ywright%40example.net&amp;password=u%21tD9S5%21Wf&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.267" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '68aa539d-afd7-461b-b0f8-fa43c9b20d98', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "VyDEtFHBF2mq7kZO"
} 
 </msg>
<msg timestamp="20220624 16:06:36.267" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.260" endtime="20220624 16:06:36.267"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.268" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.267" endtime="20220624 16:06:36.268"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.268" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'VyDEtFHBF2mq7kZO'}</msg>
<status status="PASS" starttime="20220624 16:06:36.268" endtime="20220624 16:06:36.268"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.259" endtime="20220624 16:06:36.269"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.269" endtime="20220624 16:06:36.270"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.269" endtime="20220624 16:06:36.270"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.270" endtime="20220624 16:06:36.270"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.270" endtime="20220624 16:06:36.271"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.271" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.271" endtime="20220624 16:06:36.271"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.271" endtime="20220624 16:06:36.272"/>
</kw>
<msg timestamp="20220624 16:06:36.272" level="INFO">${usuario_valido} = {'nome': 'Michael Huang', 'email': 'ywright@example.net', 'password': 'u!tD9S5!Wf', 'administrador': 'true', '_id': 'VyDEtFHBF2mq7kZO'}</msg>
<status status="PASS" starttime="20220624 16:06:36.256" endtime="20220624 16:06:36.272"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.272" level="INFO">Removed item with key 'nome' and value 'Michael Huang'.</msg>
<msg timestamp="20220624 16:06:36.272" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.272" level="INFO">Removed item with key '_id' and value 'VyDEtFHBF2mq7kZO'.</msg>
<status status="PASS" starttime="20220624 16:06:36.272" endtime="20220624 16:06:36.272"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.272" endtime="20220624 16:06:36.273"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.276" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=ywright%40example.net&amp;password=u%21tD9S5%21Wf 
 </msg>
<msg timestamp="20220624 16:06:36.276" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '53b4b7eb-e32e-4201-a565-0b6f78700f99', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '280', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inl3cmlnaHRAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6InUhdEQ5UzUhV2YiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.9Ciz5BDeE2OJ7awRpXa36a407o9GjSCap3niDjRbFAo"
} 
 </msg>
<msg timestamp="20220624 16:06:36.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.273" endtime="20220624 16:06:36.276"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.277" endtime="20220624 16:06:36.277"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.278" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inl3cmlnaHRAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6InUhdEQ5UzUhV2YiLCJpYXQiOjE2NTYwOTc1OTY...</msg>
<status status="PASS" starttime="20220624 16:06:36.277" endtime="20220624 16:06:36.278"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.272" endtime="20220624 16:06:36.278"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.278" endtime="20220624 16:06:36.279"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.278" endtime="20220624 16:06:36.279"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.279" endtime="20220624 16:06:36.280"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.279" endtime="20220624 16:06:36.280"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.281" level="INFO">Length is 207</msg>
<status status="PASS" starttime="20220624 16:06:36.280" endtime="20220624 16:06:36.281"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.280" endtime="20220624 16:06:36.281"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.281" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inl3cmlnaHRAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6InUhdEQ5UzUhV2YiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.9Ciz5BDeE2OJ7awRpXa3...</msg>
<status status="PASS" starttime="20220624 16:06:36.281" endtime="20220624 16:06:36.281"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.282" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inl3cmlnaHRAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6InUhdEQ5UzUhV2YiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.9Ciz5BDeE2OJ7awRp...</msg>
<status status="PASS" starttime="20220624 16:06:36.282" endtime="20220624 16:06:36.282"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.256" endtime="20220624 16:06:36.282"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.283" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.283" endtime="20220624 16:06:36.283"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.283" endtime="20220624 16:06:36.283"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.294" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inl3cmlnaHRAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6InUhdEQ5UzUhV2YiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.9Ciz5BDeE2OJ7awRpXa36a407o9GjSCap3niDjRbFAo', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=999&amp;preco=3662 
 </msg>
<msg timestamp="20220624 16:06:36.294" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'da380ee0-a8ef-44f2-9656-a6e934ede05d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:36.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.284" endtime="20220624 16:06:36.294"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.294" endtime="20220624 16:06:36.295"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.295" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:36.295" endtime="20220624 16:06:36.295"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.282" endtime="20220624 16:06:36.295"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.296" endtime="20220624 16:06:36.297"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.296" endtime="20220624 16:06:36.297"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.298" endtime="20220624 16:06:36.298"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.297" endtime="20220624 16:06:36.298"/>
</kw>
<tag>Atualizar_Produto_Preco</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.246" endtime="20220624 16:06:36.299"/>
</test>
<test id="s1-s3-s3-t5" name="Cenario: Atualizar Quantidade do Produto" line="44">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.301" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.300" endtime="20220624 16:06:36.301"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.300" endtime="20220624 16:06:36.301"/>
</kw>
<kw name="Alterar &quot;Integer&quot; Campo &quot;quantidade&quot; Do Produto" library="produtos_keywords" sourcename="Alterar &quot;${tipo}&quot; Campo &quot;${key}&quot; Do Produto">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.306" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.306" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '09728365-ec72-48f6-b212-9771bc0307e7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.302" endtime="20220624 16:06:36.306"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.306" endtime="20220624 16:06:36.307"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.308" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.307" endtime="20220624 16:06:36.308"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.302" endtime="20220624 16:06:36.308"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.309" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 999, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.308" endtime="20220624 16:06:36.309"/>
</kw>
<msg timestamp="20220624 16:06:36.309" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 999, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.301" endtime="20220624 16:06:36.309"/>
</kw>
<if>
<branch type="IF" condition="&quot;${tipo}&quot; == &quot;String&quot;">
<kw name="Word" library="FakerLibrary">
<var>${novo_valor}</var>
<doc>Generate a word.</doc>
<status status="NOT RUN" starttime="20220624 16:06:36.309" endtime="20220624 16:06:36.309"/>
</kw>
<status status="NOT RUN" starttime="20220624 16:06:36.309" endtime="20220624 16:06:36.309"/>
</branch>
<branch type="ELSE IF" condition="&quot;${tipo}&quot; == &quot;Integer&quot;">
<kw name="Random Int" library="FakerLibrary">
<var>${novo_valor}</var>
<arg>min=1</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.310" level="INFO">${novo_valor} = 543</msg>
<status status="PASS" starttime="20220624 16:06:36.310" endtime="20220624 16:06:36.310"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.310" endtime="20220624 16:06:36.310"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.309" endtime="20220624 16:06:36.310"/>
</if>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=${novo_valor}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.310" endtime="20220624 16:06:36.310"/>
</kw>
<msg timestamp="20220624 16:06:36.310" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.301" endtime="20220624 16:06:36.310"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.312" level="INFO">${nome} = Jasmine Garcia</msg>
<status status="PASS" starttime="20220624 16:06:36.312" endtime="20220624 16:06:36.312"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.313" level="INFO">${email} = maxwell76@example.org</msg>
<status status="PASS" starttime="20220624 16:06:36.312" endtime="20220624 16:06:36.313"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.313" level="INFO">${senha} = _NE41ERe0(</msg>
<status status="PASS" starttime="20220624 16:06:36.313" endtime="20220624 16:06:36.313"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.313" level="INFO">&amp;{usuario} = { nome=Jasmine Garcia | email=maxwell76@example.org | password=_NE41ERe0( | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.313" endtime="20220624 16:06:36.313"/>
</kw>
<msg timestamp="20220624 16:06:36.314" level="INFO">${usuario} = {'nome': 'Jasmine Garcia', 'email': 'maxwell76@example.org', 'password': '_NE41ERe0(', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.311" endtime="20220624 16:06:36.314"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.314" endtime="20220624 16:06:36.314"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.321" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Jasmine+Garcia&amp;email=maxwell76%40example.org&amp;password=_NE41ERe0%28&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.321" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '19a505c6-c5d0-4cfa-817c-cffcf1f2581f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "XjE5olSDF3lR954l"
} 
 </msg>
<msg timestamp="20220624 16:06:36.321" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.314" endtime="20220624 16:06:36.321"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.321" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.321" endtime="20220624 16:06:36.321"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.322" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'XjE5olSDF3lR954l'}</msg>
<status status="PASS" starttime="20220624 16:06:36.322" endtime="20220624 16:06:36.322"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.314" endtime="20220624 16:06:36.322"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.323" endtime="20220624 16:06:36.323"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.322" endtime="20220624 16:06:36.324"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.324" endtime="20220624 16:06:36.324"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.324" endtime="20220624 16:06:36.325"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.325" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.325" endtime="20220624 16:06:36.325"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.325" endtime="20220624 16:06:36.326"/>
</kw>
<msg timestamp="20220624 16:06:36.326" level="INFO">${usuario_valido} = {'nome': 'Jasmine Garcia', 'email': 'maxwell76@example.org', 'password': '_NE41ERe0(', 'administrador': 'true', '_id': 'XjE5olSDF3lR954l'}</msg>
<status status="PASS" starttime="20220624 16:06:36.311" endtime="20220624 16:06:36.326"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.326" level="INFO">Removed item with key 'nome' and value 'Jasmine Garcia'.</msg>
<msg timestamp="20220624 16:06:36.326" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.326" level="INFO">Removed item with key '_id' and value 'XjE5olSDF3lR954l'.</msg>
<status status="PASS" starttime="20220624 16:06:36.326" endtime="20220624 16:06:36.326"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.327" endtime="20220624 16:06:36.327"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.330" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=maxwell76%40example.org&amp;password=_NE41ERe0%28 
 </msg>
<msg timestamp="20220624 16:06:36.330" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7a76207f-ca75-46e6-8732-75e96b0f9c2d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '283', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heHdlbGw3NkBleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiX05FNDFFUmUwKCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.86XehrLz3lHInaHMUGFWMK3aIfOkoEFvnghFoTb9jnI"
} 
 </msg>
<msg timestamp="20220624 16:06:36.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.327" endtime="20220624 16:06:36.330"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.330" endtime="20220624 16:06:36.331"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.331" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heHdlbGw3NkBleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiX05FNDFFUmUwKCIsImlhdCI6MTY1NjA5NzU...</msg>
<status status="PASS" starttime="20220624 16:06:36.331" endtime="20220624 16:06:36.331"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.326" endtime="20220624 16:06:36.331"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.332" endtime="20220624 16:06:36.332"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.331" endtime="20220624 16:06:36.332"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.333" endtime="20220624 16:06:36.333"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.333" endtime="20220624 16:06:36.333"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.334" level="INFO">Length is 210</msg>
<status status="PASS" starttime="20220624 16:06:36.334" endtime="20220624 16:06:36.334"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.333" endtime="20220624 16:06:36.334"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.335" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heHdlbGw3NkBleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiX05FNDFFUmUwKCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.86XehrLz3lHInaHMU...</msg>
<status status="PASS" starttime="20220624 16:06:36.334" endtime="20220624 16:06:36.335"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.335" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heHdlbGw3NkBleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiX05FNDFFUmUwKCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.86XehrLz3lHIna...</msg>
<status status="PASS" starttime="20220624 16:06:36.335" endtime="20220624 16:06:36.335"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.311" endtime="20220624 16:06:36.335"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.337" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.337" endtime="20220624 16:06:36.337"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.337" endtime="20220624 16:06:36.337"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.347" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heHdlbGw3NkBleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiX05FNDFFUmUwKCIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.86XehrLz3lHInaHMUGFWMK3aIfOkoEFvnghFoTb9jnI', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=543&amp;preco=3662 
 </msg>
<msg timestamp="20220624 16:06:36.347" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8ce87df1-1d0f-405e-881a-a686689be219', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:36.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.337" endtime="20220624 16:06:36.348"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.348" endtime="20220624 16:06:36.348"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.349" level="INFO">${response_body} = {'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:36.348" endtime="20220624 16:06:36.349"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.336" endtime="20220624 16:06:36.349"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.349" endtime="20220624 16:06:36.350"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.349" endtime="20220624 16:06:36.350"/>
</kw>
<kw name="Validar Mensagem &quot;Registro alterado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.351" endtime="20220624 16:06:36.351"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.351" endtime="20220624 16:06:36.352"/>
</kw>
<tag>Atualizar_Produto_Quantidade</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.300" endtime="20220624 16:06:36.352"/>
</test>
<test id="s1-s3-s3-t6" name="Cenario: Tentar Atualizar Produto Cadastrado Sem Autenticacao" line="54">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.354" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.354" endtime="20220624 16:06:36.354"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.354" endtime="20220624 16:06:36.355"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.367" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.367" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '996afdde-10a2-49a3-9de5-cc53a254a75c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.355" endtime="20220624 16:06:36.367"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.367" endtime="20220624 16:06:36.368"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.369" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.368" endtime="20220624 16:06:36.369"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.355" endtime="20220624 16:06:36.369"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.370" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.369" endtime="20220624 16:06:36.370"/>
</kw>
<msg timestamp="20220624 16:06:36.370" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.355" endtime="20220624 16:06:36.370"/>
</kw>
<kw name="PUT Endpoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot;" library="PUT" sourcename="PUT Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.372" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.371" endtime="20220624 16:06:36.372"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.371" endtime="20220624 16:06:36.372"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.375" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=543&amp;preco=3662 
 </msg>
<msg timestamp="20220624 16:06:36.375" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '44308d3b-6bd8-40c0-a1f0-b8359c892931', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:36.375" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.372" endtime="20220624 16:06:36.375"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.376" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.375" endtime="20220624 16:06:36.376"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.377" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:36.376" endtime="20220624 16:06:36.377"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.371" endtime="20220624 16:06:36.377"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.378" endtime="20220624 16:06:36.379"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.377" endtime="20220624 16:06:36.379"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.380" endtime="20220624 16:06:36.380"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.379" endtime="20220624 16:06:36.380"/>
</kw>
<tag>Atualizar_Produto_Sem_Autenticacao</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.353" endtime="20220624 16:06:36.381"/>
</test>
<test id="s1-s3-s3-t7" name="Cenario: Tentar Atualizar Produto Autenticado Como Nao Administrador" line="61">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.383" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.383" endtime="20220624 16:06:36.383"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.382" endtime="20220624 16:06:36.383"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.388" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.388" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a71f763b-8401-469f-ac11-16f47df54795', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.384" endtime="20220624 16:06:36.388"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.388" endtime="20220624 16:06:36.388"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.390" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.388" endtime="20220624 16:06:36.390"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.384" endtime="20220624 16:06:36.390"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.392" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.390" endtime="20220624 16:06:36.392"/>
</kw>
<msg timestamp="20220624 16:06:36.392" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.383" endtime="20220624 16:06:36.392"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.394" level="INFO">${nome} = Pamela Harris</msg>
<status status="PASS" starttime="20220624 16:06:36.393" endtime="20220624 16:06:36.394"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.394" level="INFO">${email} = humphreyandrea@example.org</msg>
<status status="PASS" starttime="20220624 16:06:36.394" endtime="20220624 16:06:36.394"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.394" level="INFO">${senha} = w5JJY66m*@</msg>
<status status="PASS" starttime="20220624 16:06:36.394" endtime="20220624 16:06:36.394"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.395" level="INFO">&amp;{usuario} = { nome=Pamela Harris | email=humphreyandrea@example.org | password=w5JJY66m*@ | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:36.395" endtime="20220624 16:06:36.395"/>
</kw>
<msg timestamp="20220624 16:06:36.395" level="INFO">${usuario} = {'nome': 'Pamela Harris', 'email': 'humphreyandrea@example.org', 'password': 'w5JJY66m*@', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:36.393" endtime="20220624 16:06:36.395"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.396" endtime="20220624 16:06:36.396"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.402" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '97', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Pamela+Harris&amp;email=humphreyandrea%40example.org&amp;password=w5JJY66m%2A%40&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:36.402" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '11f2be30-1ed0-4e2b-8879-bd1d24ca9be7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Zcpo9cF2fLULYNz5"
} 
 </msg>
<msg timestamp="20220624 16:06:36.402" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.396" endtime="20220624 16:06:36.402"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.402" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.402" endtime="20220624 16:06:36.402"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.403" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'Zcpo9cF2fLULYNz5'}</msg>
<status status="PASS" starttime="20220624 16:06:36.402" endtime="20220624 16:06:36.403"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.395" endtime="20220624 16:06:36.403"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.403" endtime="20220624 16:06:36.404"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.403" endtime="20220624 16:06:36.404"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.405" endtime="20220624 16:06:36.405"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.404" endtime="20220624 16:06:36.405"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.406" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.405" endtime="20220624 16:06:36.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.406" endtime="20220624 16:06:36.407"/>
</kw>
<msg timestamp="20220624 16:06:36.407" level="INFO">${usuario_valido} = {'nome': 'Pamela Harris', 'email': 'humphreyandrea@example.org', 'password': 'w5JJY66m*@', 'administrador': 'false', '_id': 'Zcpo9cF2fLULYNz5'}</msg>
<status status="PASS" starttime="20220624 16:06:36.393" endtime="20220624 16:06:36.407"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.407" level="INFO">Removed item with key 'nome' and value 'Pamela Harris'.</msg>
<msg timestamp="20220624 16:06:36.407" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:36.408" level="INFO">Removed item with key '_id' and value 'Zcpo9cF2fLULYNz5'.</msg>
<status status="PASS" starttime="20220624 16:06:36.407" endtime="20220624 16:06:36.408"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.408" endtime="20220624 16:06:36.408"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.412" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '58', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=humphreyandrea%40example.org&amp;password=w5JJY66m%2A%40 
 </msg>
<msg timestamp="20220624 16:06:36.412" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1d5be4c9-1c49-4cea-a2a0-501101f25d9b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '289', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1bXBocmV5YW5kcmVhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJ3NUpKWTY2bSpAIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.zKgxTeNR4xT8qMvc3PJX6ZGAiOhyCNAsLA214T5ae4M"
} 
 </msg>
<msg timestamp="20220624 16:06:36.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.408" endtime="20220624 16:06:36.412"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.412" endtime="20220624 16:06:36.412"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.413" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1bXBocmV5YW5kcmVhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJ3NUpKWTY2bSpAIiwiaWF0IjoxNjU...</msg>
<status status="PASS" starttime="20220624 16:06:36.412" endtime="20220624 16:06:36.413"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.408" endtime="20220624 16:06:36.413"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.413" endtime="20220624 16:06:36.414"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.413" endtime="20220624 16:06:36.414"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.415" endtime="20220624 16:06:36.415"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.414" endtime="20220624 16:06:36.415"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.416" level="INFO">Length is 216</msg>
<status status="PASS" starttime="20220624 16:06:36.416" endtime="20220624 16:06:36.416"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.415" endtime="20220624 16:06:36.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.417" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1bXBocmV5YW5kcmVhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJ3NUpKWTY2bSpAIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.zKgxTeNR4xT...</msg>
<status status="PASS" starttime="20220624 16:06:36.416" endtime="20220624 16:06:36.417"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.417" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1bXBocmV5YW5kcmVhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJ3NUpKWTY2bSpAIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.zKgxTeNR...</msg>
<status status="PASS" starttime="20220624 16:06:36.417" endtime="20220624 16:06:36.417"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.393" endtime="20220624 16:06:36.417"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.419" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.419" endtime="20220624 16:06:36.419"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.418" endtime="20220624 16:06:36.419"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.422" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imh1bXBocmV5YW5kcmVhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJ3NUpKWTY2bSpAIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.zKgxTeNR4xT8qMvc3PJX6ZGAiOhyCNAsLA214T5ae4M', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=543&amp;preco=3662 
 </msg>
<msg timestamp="20220624 16:06:36.422" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=403, reason=Forbidden 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '50904f7b-c468-4407-b071-4be29d1f9506', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Rota exclusiva para administradores"
} 
 </msg>
<msg timestamp="20220624 16:06:36.422" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.419" endtime="20220624 16:06:36.422"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.422" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.422" endtime="20220624 16:06:36.423"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.423" level="INFO">${response_body} = {'message': 'Rota exclusiva para administradores'}</msg>
<status status="PASS" starttime="20220624 16:06:36.423" endtime="20220624 16:06:36.423"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.418" endtime="20220624 16:06:36.423"/>
</kw>
<kw name="Validar Status Code &quot;403&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.424" endtime="20220624 16:06:36.425"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.424" endtime="20220624 16:06:36.425"/>
</kw>
<kw name="Validar Mensagem &quot;Rota exclusiva para administradores&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.426" endtime="20220624 16:06:36.426"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.425" endtime="20220624 16:06:36.426"/>
</kw>
<tag>Atualizar_Produto_Nao_Administrador</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.382" endtime="20220624 16:06:36.427"/>
</test>
<test id="s1-s3-s3-t8" name="Cenario: Tentar Atualizar Produto Cadastrado Com Token Invalido" line="69">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.429" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.429" endtime="20220624 16:06:36.429"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.428" endtime="20220624 16:06:36.429"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.434" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.434" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '335ec1a8-430b-4eed-bae9-8f00f98b3eb9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.430" endtime="20220624 16:06:36.434"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.434" endtime="20220624 16:06:36.435"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.436" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.435" endtime="20220624 16:06:36.436"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.430" endtime="20220624 16:06:36.436"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.437" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.436" endtime="20220624 16:06:36.437"/>
</kw>
<msg timestamp="20220624 16:06:36.437" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.430" endtime="20220624 16:06:36.437"/>
</kw>
<kw name="PUT EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Com Token Invalido" library="PUT" sourcename="PUT EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Com Token Invalido">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.439" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.438" endtime="20220624 16:06:36.439"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.438" endtime="20220624 16:06:36.439"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{header}</var>
<arg>Authorization=Token Invalido</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.439" level="INFO">&amp;{header} = { Authorization=Token Invalido }</msg>
<status status="PASS" starttime="20220624 16:06:36.439" endtime="20220624 16:06:36.439"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${header}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.442" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Token Invalido', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=543&amp;preco=3662 
 </msg>
<msg timestamp="20220624 16:06:36.442" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '578ced37-1220-4cf4-b247-27750d2d7f3a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:36.443" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.439" endtime="20220624 16:06:36.443"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.443" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.443" endtime="20220624 16:06:36.443"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.444" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:36.443" endtime="20220624 16:06:36.444"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.438" endtime="20220624 16:06:36.444"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.445" endtime="20220624 16:06:36.446"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.445" endtime="20220624 16:06:36.446"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.446" endtime="20220624 16:06:36.447"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.446" endtime="20220624 16:06:36.447"/>
</kw>
<tag>Atualizar_Produto_Token_Invalido</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.428" endtime="20220624 16:06:36.448"/>
</test>
<test id="s1-s3-s3-t9" name="Cenario: Tentar Atualizar Produto Sem Alteracao" line="76">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.450" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.450" endtime="20220624 16:06:36.450"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.449" endtime="20220624 16:06:36.450"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.454" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.454" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '185cdcc0-a036-4cb2-96e1-324eab16737d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.451" endtime="20220624 16:06:36.455"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.455" endtime="20220624 16:06:36.455"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.457" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.455" endtime="20220624 16:06:36.457"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.451" endtime="20220624 16:06:36.457"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.458" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.457" endtime="20220624 16:06:36.458"/>
</kw>
<msg timestamp="20220624 16:06:36.458" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.450" endtime="20220624 16:06:36.458"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.460" level="INFO">${nome} = Johnathan Stein</msg>
<status status="PASS" starttime="20220624 16:06:36.460" endtime="20220624 16:06:36.460"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.461" level="INFO">${email} = garyalvarez@example.net</msg>
<status status="PASS" starttime="20220624 16:06:36.460" endtime="20220624 16:06:36.461"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.461" level="INFO">${senha} = VpUSm9Eos(</msg>
<status status="PASS" starttime="20220624 16:06:36.461" endtime="20220624 16:06:36.461"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.461" level="INFO">&amp;{usuario} = { nome=Johnathan Stein | email=garyalvarez@example.net | password=VpUSm9Eos( | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.461" endtime="20220624 16:06:36.461"/>
</kw>
<msg timestamp="20220624 16:06:36.462" level="INFO">${usuario} = {'nome': 'Johnathan Stein', 'email': 'garyalvarez@example.net', 'password': 'VpUSm9Eos(', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.459" endtime="20220624 16:06:36.462"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.462" endtime="20220624 16:06:36.462"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.468" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '93', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Johnathan+Stein&amp;email=garyalvarez%40example.net&amp;password=VpUSm9Eos%28&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.468" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4c2b0f26-2fbc-4846-9707-d9f5e6f2fc11', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "wl3yyjylg8lmu4vY"
} 
 </msg>
<msg timestamp="20220624 16:06:36.468" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.462" endtime="20220624 16:06:36.468"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.468" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.468" endtime="20220624 16:06:36.468"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.469" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'wl3yyjylg8lmu4vY'}</msg>
<status status="PASS" starttime="20220624 16:06:36.469" endtime="20220624 16:06:36.469"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.462" endtime="20220624 16:06:36.469"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.470" endtime="20220624 16:06:36.470"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.469" endtime="20220624 16:06:36.471"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.471" endtime="20220624 16:06:36.471"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.471" endtime="20220624 16:06:36.471"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.472" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.471" endtime="20220624 16:06:36.472"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.472" endtime="20220624 16:06:36.472"/>
</kw>
<msg timestamp="20220624 16:06:36.473" level="INFO">${usuario_valido} = {'nome': 'Johnathan Stein', 'email': 'garyalvarez@example.net', 'password': 'VpUSm9Eos(', 'administrador': 'true', '_id': 'wl3yyjylg8lmu4vY'}</msg>
<status status="PASS" starttime="20220624 16:06:36.459" endtime="20220624 16:06:36.473"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.473" level="INFO">Removed item with key 'nome' and value 'Johnathan Stein'.</msg>
<msg timestamp="20220624 16:06:36.473" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.473" level="INFO">Removed item with key '_id' and value 'wl3yyjylg8lmu4vY'.</msg>
<status status="PASS" starttime="20220624 16:06:36.473" endtime="20220624 16:06:36.473"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.473" endtime="20220624 16:06:36.474"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.477" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=garyalvarez%40example.net&amp;password=VpUSm9Eos%28 
 </msg>
<msg timestamp="20220624 16:06:36.477" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3df2c21d-1ed3-4eb0-b4a7-1576a563a8db', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '285', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhcnlhbHZhcmV6QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJWcFVTbTlFb3MoIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.T8mqhVed36e6HOj1OSN0PPcNlunslrkg9LDU4L3FyKw"
} 
 </msg>
<msg timestamp="20220624 16:06:36.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.474" endtime="20220624 16:06:36.478"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.478" endtime="20220624 16:06:36.478"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.479" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhcnlhbHZhcmV6QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJWcFVTbTlFb3MoIiwiaWF0IjoxNjU2MDk...</msg>
<status status="PASS" starttime="20220624 16:06:36.478" endtime="20220624 16:06:36.479"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.473" endtime="20220624 16:06:36.479"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.479" endtime="20220624 16:06:36.480"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.479" endtime="20220624 16:06:36.480"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.480" endtime="20220624 16:06:36.481"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.480" endtime="20220624 16:06:36.481"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.482" level="INFO">Length is 212</msg>
<status status="PASS" starttime="20220624 16:06:36.481" endtime="20220624 16:06:36.482"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.481" endtime="20220624 16:06:36.482"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.482" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhcnlhbHZhcmV6QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJWcFVTbTlFb3MoIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.T8mqhVed36e6HOj...</msg>
<status status="PASS" starttime="20220624 16:06:36.482" endtime="20220624 16:06:36.482"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.483" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhcnlhbHZhcmV6QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJWcFVTbTlFb3MoIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.T8mqhVed36e6...</msg>
<status status="PASS" starttime="20220624 16:06:36.483" endtime="20220624 16:06:36.483"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.458" endtime="20220624 16:06:36.483"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/NaoExisto&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.484" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.484" endtime="20220624 16:06:36.484"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.484" endtime="20220624 16:06:36.484"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.488" level="INFO">PUT Request : url=http://localhost:3000/produtos/NaoExisto 
 path_url=/produtos/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhcnlhbHZhcmV6QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJWcFVTbTlFb3MoIiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.T8mqhVed36e6HOj1OSN0PPcNlunslrkg9LDU4L3FyKw', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=543&amp;preco=3662 
 </msg>
<msg timestamp="20220624 16:06:36.488" level="INFO">PUT Response : url=http://localhost:3000/produtos/NaoExisto 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cfe4e83e-2110-48cc-9de5-1b740c25dc5e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20220624 16:06:36.488" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.484" endtime="20220624 16:06:36.488"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.488" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.488" endtime="20220624 16:06:36.488"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.489" level="INFO">${response_body} = {'message': 'Já existe produto com esse nome'}</msg>
<status status="PASS" starttime="20220624 16:06:36.488" endtime="20220624 16:06:36.489"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.483" endtime="20220624 16:06:36.489"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.490" endtime="20220624 16:06:36.491"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.489" endtime="20220624 16:06:36.491"/>
</kw>
<kw name="Validar Mensagem &quot;Já existe produto com esse nome&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.492" endtime="20220624 16:06:36.492"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.491" endtime="20220624 16:06:36.492"/>
</kw>
<tag>Atualizar_Produto_Sem_Alteracao</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.449" endtime="20220624 16:06:36.493"/>
</test>
<test id="s1-s3-s3-t10" name="Cenario: Tentar Atualizar Produto Com Preco Invalido" line="84">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.495" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.495" endtime="20220624 16:06:36.495"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.494" endtime="20220624 16:06:36.495"/>
</kw>
<kw name="Pegar Produto Do JSON Com o Campo &quot;preco&quot; Invalido" library="produtos_keywords" sourcename="Pegar Produto Do JSON Com o Campo &quot;${key}&quot; Invalido">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.500" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.500" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f23d514a-6b59-46fe-bbdc-1e7697679183', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.497" endtime="20220624 16:06:36.501"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.501" endtime="20220624 16:06:36.501"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.502" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.501" endtime="20220624 16:06:36.502"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.496" endtime="20220624 16:06:36.503"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.504" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.503" endtime="20220624 16:06:36.504"/>
</kw>
<msg timestamp="20220624 16:06:36.504" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.496" endtime="20220624 16:06:36.504"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=1.5</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.504" endtime="20220624 16:06:36.504"/>
</kw>
<msg timestamp="20220624 16:06:36.504" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': '1.5', '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.496" endtime="20220624 16:06:36.504"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.506" level="INFO">${nome} = Christopher Daniels</msg>
<status status="PASS" starttime="20220624 16:06:36.506" endtime="20220624 16:06:36.506"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.507" level="INFO">${email} = watsonjulie@example.net</msg>
<status status="PASS" starttime="20220624 16:06:36.506" endtime="20220624 16:06:36.507"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.507" level="INFO">${senha} = O9WRVc2I#y</msg>
<status status="PASS" starttime="20220624 16:06:36.507" endtime="20220624 16:06:36.507"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.508" level="INFO">&amp;{usuario} = { nome=Christopher Daniels | email=watsonjulie@example.net | password=O9WRVc2I#y | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.507" endtime="20220624 16:06:36.508"/>
</kw>
<msg timestamp="20220624 16:06:36.508" level="INFO">${usuario} = {'nome': 'Christopher Daniels', 'email': 'watsonjulie@example.net', 'password': 'O9WRVc2I#y', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.506" endtime="20220624 16:06:36.508"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.509" endtime="20220624 16:06:36.509"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.515" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '97', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Christopher+Daniels&amp;email=watsonjulie%40example.net&amp;password=O9WRVc2I%23y&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.515" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2c06eefa-7a17-47e6-944c-4348ece471d3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "UK6THShd8JXLpDPn"
} 
 </msg>
<msg timestamp="20220624 16:06:36.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.509" endtime="20220624 16:06:36.515"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.515" endtime="20220624 16:06:36.515"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.516" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'UK6THShd8JXLpDPn'}</msg>
<status status="PASS" starttime="20220624 16:06:36.515" endtime="20220624 16:06:36.516"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.508" endtime="20220624 16:06:36.516"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.516" endtime="20220624 16:06:36.517"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.516" endtime="20220624 16:06:36.517"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.518" endtime="20220624 16:06:36.518"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.517" endtime="20220624 16:06:36.518"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.519" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.518" endtime="20220624 16:06:36.519"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.519" endtime="20220624 16:06:36.519"/>
</kw>
<msg timestamp="20220624 16:06:36.519" level="INFO">${usuario_valido} = {'nome': 'Christopher Daniels', 'email': 'watsonjulie@example.net', 'password': 'O9WRVc2I#y', 'administrador': 'true', '_id': 'UK6THShd8JXLpDPn'}</msg>
<status status="PASS" starttime="20220624 16:06:36.505" endtime="20220624 16:06:36.519"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.520" level="INFO">Removed item with key 'nome' and value 'Christopher Daniels'.</msg>
<msg timestamp="20220624 16:06:36.520" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.520" level="INFO">Removed item with key '_id' and value 'UK6THShd8JXLpDPn'.</msg>
<status status="PASS" starttime="20220624 16:06:36.520" endtime="20220624 16:06:36.520"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.520" endtime="20220624 16:06:36.520"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.524" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=watsonjulie%40example.net&amp;password=O9WRVc2I%23y 
 </msg>
<msg timestamp="20220624 16:06:36.524" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '97f111c6-1bfd-4c60-adfc-7bb20d4c048c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '285', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndhdHNvbmp1bGllQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJPOVdSVmMySSN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.6OAO37hUbWI3JBXsk3j5IMnsqDLUEKZJvASAki_MswU"
} 
 </msg>
<msg timestamp="20220624 16:06:36.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.520" endtime="20220624 16:06:36.524"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.524" endtime="20220624 16:06:36.525"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.525" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndhdHNvbmp1bGllQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJPOVdSVmMySSN5IiwiaWF0IjoxNjU2MDk...</msg>
<status status="PASS" starttime="20220624 16:06:36.525" endtime="20220624 16:06:36.525"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.520" endtime="20220624 16:06:36.525"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.526" endtime="20220624 16:06:36.527"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.526" endtime="20220624 16:06:36.527"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.527" endtime="20220624 16:06:36.528"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.527" endtime="20220624 16:06:36.528"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.528" level="INFO">Length is 212</msg>
<status status="PASS" starttime="20220624 16:06:36.528" endtime="20220624 16:06:36.528"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.528" endtime="20220624 16:06:36.528"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.529" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndhdHNvbmp1bGllQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJPOVdSVmMySSN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.6OAO37hUbWI3JBX...</msg>
<status status="PASS" starttime="20220624 16:06:36.529" endtime="20220624 16:06:36.529"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.530" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndhdHNvbmp1bGllQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJPOVdSVmMySSN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.6OAO37hUbWI3...</msg>
<status status="PASS" starttime="20220624 16:06:36.529" endtime="20220624 16:06:36.530"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.505" endtime="20220624 16:06:36.530"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.531" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.531" endtime="20220624 16:06:36.531"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.531" endtime="20220624 16:06:36.531"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.537" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndhdHNvbmp1bGllQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJPOVdSVmMySSN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.6OAO37hUbWI3JBXsk3j5IMnsqDLUEKZJvASAki_MswU', 'Content-Length': '49', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=543&amp;preco=1.5 
 </msg>
<msg timestamp="20220624 16:06:36.537" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2c455f3e-a8b0-475e-a4c4-bc342b0099b0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '44', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco deve ser um inteiro"
} 
 </msg>
<msg timestamp="20220624 16:06:36.537" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.531" endtime="20220624 16:06:36.537"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.537" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.537" endtime="20220624 16:06:36.537"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.538" level="INFO">${response_body} = {'preco': 'preco deve ser um inteiro'}</msg>
<status status="PASS" starttime="20220624 16:06:36.537" endtime="20220624 16:06:36.538"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.530" endtime="20220624 16:06:36.538"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.539" endtime="20220624 16:06:36.540"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.539" endtime="20220624 16:06:36.541"/>
</kw>
<kw name="Validar &quot;preco&quot; Com O Valor &quot;preco deve ser um inteiro&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.542" endtime="20220624 16:06:36.543"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.541" endtime="20220624 16:06:36.543"/>
</kw>
<tag>Atualizar_Produto_Preco_Invalido</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.494" endtime="20220624 16:06:36.543"/>
</test>
<test id="s1-s3-s3-t11" name="Cenario: Tentar Atualizar Produto Com Quantidade Invalida" line="92">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.546" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.545" endtime="20220624 16:06:36.546"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.545" endtime="20220624 16:06:36.546"/>
</kw>
<kw name="Pegar Produto Do JSON Com o Campo &quot;quantidade&quot; Invalido" library="produtos_keywords" sourcename="Pegar Produto Do JSON Com o Campo &quot;${key}&quot; Invalido">
<var>${produto}</var>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.550" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.551" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7b653f74-87ed-4fc9-81d7-5e7abdb5d874', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.547" endtime="20220624 16:06:36.551"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.551" endtime="20220624 16:06:36.551"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.552" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.551" endtime="20220624 16:06:36.552"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.547" endtime="20220624 16:06:36.552"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.553" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.553" endtime="20220624 16:06:36.553"/>
</kw>
<msg timestamp="20220624 16:06:36.554" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.546" endtime="20220624 16:06:36.554"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${produto}</arg>
<arg>${key}=1.5</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.554" endtime="20220624 16:06:36.554"/>
</kw>
<msg timestamp="20220624 16:06:36.554" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': '1.5', 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.546" endtime="20220624 16:06:36.554"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.556" level="INFO">${nome} = Erica Owen</msg>
<status status="PASS" starttime="20220624 16:06:36.555" endtime="20220624 16:06:36.556"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.556" level="INFO">${email} = mitchellseth@example.com</msg>
<status status="PASS" starttime="20220624 16:06:36.556" endtime="20220624 16:06:36.556"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.556" level="INFO">${senha} = &amp;%F5WRs@ob</msg>
<status status="PASS" starttime="20220624 16:06:36.556" endtime="20220624 16:06:36.556"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.557" level="INFO">&amp;{usuario} = { nome=Erica Owen | email=mitchellseth@example.com | password=&amp;%F5WRs@ob | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.557" endtime="20220624 16:06:36.557"/>
</kw>
<msg timestamp="20220624 16:06:36.557" level="INFO">${usuario} = {'nome': 'Erica Owen', 'email': 'mitchellseth@example.com', 'password': '&amp;%F5WRs@ob', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.555" endtime="20220624 16:06:36.557"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.558" endtime="20220624 16:06:36.558"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.563" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '93', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Erica+Owen&amp;email=mitchellseth%40example.com&amp;password=%26%25F5WRs%40ob&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.563" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c6d37146-d0d5-4015-bcd0-307afa309cdd', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "tdFwFwfODoZzybes"
} 
 </msg>
<msg timestamp="20220624 16:06:36.564" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.558" endtime="20220624 16:06:36.564"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.564" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.564" endtime="20220624 16:06:36.564"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.565" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'tdFwFwfODoZzybes'}</msg>
<status status="PASS" starttime="20220624 16:06:36.564" endtime="20220624 16:06:36.565"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.557" endtime="20220624 16:06:36.565"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.565" endtime="20220624 16:06:36.566"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.565" endtime="20220624 16:06:36.566"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.566" endtime="20220624 16:06:36.567"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.566" endtime="20220624 16:06:36.567"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.567" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.567" endtime="20220624 16:06:36.567"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.567" endtime="20220624 16:06:36.568"/>
</kw>
<msg timestamp="20220624 16:06:36.568" level="INFO">${usuario_valido} = {'nome': 'Erica Owen', 'email': 'mitchellseth@example.com', 'password': '&amp;%F5WRs@ob', 'administrador': 'true', '_id': 'tdFwFwfODoZzybes'}</msg>
<status status="PASS" starttime="20220624 16:06:36.555" endtime="20220624 16:06:36.568"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.568" level="INFO">Removed item with key 'nome' and value 'Erica Owen'.</msg>
<msg timestamp="20220624 16:06:36.568" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.568" level="INFO">Removed item with key '_id' and value 'tdFwFwfODoZzybes'.</msg>
<status status="PASS" starttime="20220624 16:06:36.568" endtime="20220624 16:06:36.568"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.569" endtime="20220624 16:06:36.569"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.573" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '58', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=mitchellseth%40example.com&amp;password=%26%25F5WRs%40ob 
 </msg>
<msg timestamp="20220624 16:06:36.573" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f03a6117-62d5-4dbd-80f3-c48ee187cc1c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '287', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1pdGNoZWxsc2V0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiJiVGNVdSc0BvYiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.Lp_vIJCZMUHyCvcURN41BlpEBwCBJMmDmcmPHMymYTY"
} 
 </msg>
<msg timestamp="20220624 16:06:36.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.569" endtime="20220624 16:06:36.573"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.574" endtime="20220624 16:06:36.574"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.575" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1pdGNoZWxsc2V0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiJiVGNVdSc0BvYiIsImlhdCI6MTY1NjA...</msg>
<status status="PASS" starttime="20220624 16:06:36.574" endtime="20220624 16:06:36.575"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.568" endtime="20220624 16:06:36.575"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.575" endtime="20220624 16:06:36.576"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.575" endtime="20220624 16:06:36.576"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.576" endtime="20220624 16:06:36.577"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.576" endtime="20220624 16:06:36.577"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.578" level="INFO">Length is 214</msg>
<status status="PASS" starttime="20220624 16:06:36.577" endtime="20220624 16:06:36.578"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.577" endtime="20220624 16:06:36.578"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.578" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1pdGNoZWxsc2V0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiJiVGNVdSc0BvYiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.Lp_vIJCZMUHyC...</msg>
<status status="PASS" starttime="20220624 16:06:36.578" endtime="20220624 16:06:36.578"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.579" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1pdGNoZWxsc2V0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiJiVGNVdSc0BvYiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.Lp_vIJCZMU...</msg>
<status status="PASS" starttime="20220624 16:06:36.578" endtime="20220624 16:06:36.579"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.555" endtime="20220624 16:06:36.579"/>
</kw>
<kw name="PUT Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Com Body &quot;${produto}&quot; Headers &quot;${headers}&quot;" library="PUT" sourcename="PUT Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Remove From Dictionary" library="Collections">
<arg>${body}</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.581" level="INFO">Removed item with key '_id' and value 'ySuPFbSBgrUrfwM7'.</msg>
<status status="PASS" starttime="20220624 16:06:36.581" endtime="20220624 16:06:36.581"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.580" endtime="20220624 16:06:36.581"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.584" level="INFO">PUT Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1pdGNoZWxsc2V0aEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiJiVGNVdSc0BvYiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.Lp_vIJCZMUHyCvcURN41BlpEBwCBJMmDmcmPHMymYTY', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=type&amp;descricao=wish&amp;quantidade=1.5&amp;preco=3662 
 </msg>
<msg timestamp="20220624 16:06:36.584" level="INFO">PUT Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '79be1f4b-0aa2-457f-8c91-a3b08c852d86', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '54', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": "quantidade deve ser um inteiro"
} 
 </msg>
<msg timestamp="20220624 16:06:36.584" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.581" endtime="20220624 16:06:36.584"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.585" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.584" endtime="20220624 16:06:36.585"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.585" level="INFO">${response_body} = {'quantidade': 'quantidade deve ser um inteiro'}</msg>
<status status="PASS" starttime="20220624 16:06:36.585" endtime="20220624 16:06:36.585"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.580" endtime="20220624 16:06:36.586"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.586" endtime="20220624 16:06:36.587"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.586" endtime="20220624 16:06:36.587"/>
</kw>
<kw name="Validar &quot;quantidade&quot; Com O Valor &quot;quantidade deve ser um inteiro&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.588" endtime="20220624 16:06:36.588"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.588" endtime="20220624 16:06:36.589"/>
</kw>
<tag>Atualizar_Produto_Quantidade_Invalida</tag>
<tag>Produtos</tag>
<tag>PUT</tag>
<tag>PUT_Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.545" endtime="20220624 16:06:36.589"/>
</test>
<doc>Arquivo De Requisições Do Tipo PUT Do EndPoint Produtos</doc>
<status status="PASS" starttime="20220624 16:06:36.023" endtime="20220624 16:06:36.590"/>
</suite>
<suite id="s1-s3-s4" name="04 produtos DELETE" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\03_produtos\04_produtos_DELETE.robot">
<test id="s1-s3-s4-t1" name="Cenario: Deletar Produto Cadastrado" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.604" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.604" endtime="20220624 16:06:36.604"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.603" endtime="20220624 16:06:36.604"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.609" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.609" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6591e058-ed2d-4003-aea2-4b233962eb3f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11937', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 47,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.605" endtime="20220624 16:06:36.609"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.609" endtime="20220624 16:06:36.610"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.611" level="INFO">${response_body} = {'quantidade': 47, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.610" endtime="20220624 16:06:36.611"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.605" endtime="20220624 16:06:36.611"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.612" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.611" endtime="20220624 16:06:36.612"/>
</kw>
<msg timestamp="20220624 16:06:36.612" level="INFO">${produto} = {'nome': 'type', 'descricao': 'wish', 'quantidade': 543, 'preco': 3662, '_id': 'ySuPFbSBgrUrfwM7'}</msg>
<status status="PASS" starttime="20220624 16:06:36.604" endtime="20220624 16:06:36.612"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.613" level="INFO">${nome} = Courtney Cobb</msg>
<status status="PASS" starttime="20220624 16:06:36.613" endtime="20220624 16:06:36.613"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.613" level="INFO">${email} = kathleen52@example.net</msg>
<status status="PASS" starttime="20220624 16:06:36.613" endtime="20220624 16:06:36.613"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.614" level="INFO">${senha} = *5MHgFVadp</msg>
<status status="PASS" starttime="20220624 16:06:36.613" endtime="20220624 16:06:36.614"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.614" level="INFO">&amp;{usuario} = { nome=Courtney Cobb | email=kathleen52@example.net | password=*5MHgFVadp | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.614" endtime="20220624 16:06:36.614"/>
</kw>
<msg timestamp="20220624 16:06:36.614" level="INFO">${usuario} = {'nome': 'Courtney Cobb', 'email': 'kathleen52@example.net', 'password': '*5MHgFVadp', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.612" endtime="20220624 16:06:36.614"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.615" endtime="20220624 16:06:36.615"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.621" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Courtney+Cobb&amp;email=kathleen52%40example.net&amp;password=%2A5MHgFVadp&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.621" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bd15400b-60cf-43b2-b8f5-cb71e14417ca', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "syQccN7Qo855HiKl"
} 
 </msg>
<msg timestamp="20220624 16:06:36.621" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.615" endtime="20220624 16:06:36.621"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.621" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.621" endtime="20220624 16:06:36.621"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.622" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'syQccN7Qo855HiKl'}</msg>
<status status="PASS" starttime="20220624 16:06:36.621" endtime="20220624 16:06:36.622"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.614" endtime="20220624 16:06:36.622"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.622" endtime="20220624 16:06:36.623"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.622" endtime="20220624 16:06:36.623"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.624" endtime="20220624 16:06:36.624"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.623" endtime="20220624 16:06:36.624"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.625" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.624" endtime="20220624 16:06:36.625"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.625" endtime="20220624 16:06:36.625"/>
</kw>
<msg timestamp="20220624 16:06:36.625" level="INFO">${usuario_valido} = {'nome': 'Courtney Cobb', 'email': 'kathleen52@example.net', 'password': '*5MHgFVadp', 'administrador': 'true', '_id': 'syQccN7Qo855HiKl'}</msg>
<status status="PASS" starttime="20220624 16:06:36.612" endtime="20220624 16:06:36.626"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.626" level="INFO">Removed item with key 'nome' and value 'Courtney Cobb'.</msg>
<msg timestamp="20220624 16:06:36.626" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.626" level="INFO">Removed item with key '_id' and value 'syQccN7Qo855HiKl'.</msg>
<status status="PASS" starttime="20220624 16:06:36.626" endtime="20220624 16:06:36.626"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.626" endtime="20220624 16:06:36.626"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.630" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=kathleen52%40example.net&amp;password=%2A5MHgFVadp 
 </msg>
<msg timestamp="20220624 16:06:36.630" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fbf04ed8-e472-4aeb-b7b6-5e8e5771f2fd', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '284', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImthdGhsZWVuNTJAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6Iio1TUhnRlZhZHAiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.i_kxBzF5KAOkvk4_VGnJzA-mtpS71WK09ucswmBEbTk"
} 
 </msg>
<msg timestamp="20220624 16:06:36.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.626" endtime="20220624 16:06:36.630"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.630" endtime="20220624 16:06:36.630"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.631" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImthdGhsZWVuNTJAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6Iio1TUhnRlZhZHAiLCJpYXQiOjE2NTYwOTc...</msg>
<status status="PASS" starttime="20220624 16:06:36.630" endtime="20220624 16:06:36.631"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.626" endtime="20220624 16:06:36.631"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.631" endtime="20220624 16:06:36.632"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.631" endtime="20220624 16:06:36.632"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.632" endtime="20220624 16:06:36.633"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.632" endtime="20220624 16:06:36.633"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.634" level="INFO">Length is 211</msg>
<status status="PASS" starttime="20220624 16:06:36.633" endtime="20220624 16:06:36.634"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.633" endtime="20220624 16:06:36.634"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.634" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImthdGhsZWVuNTJAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6Iio1TUhnRlZhZHAiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.i_kxBzF5KAOkvk4_...</msg>
<status status="PASS" starttime="20220624 16:06:36.634" endtime="20220624 16:06:36.634"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.635" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImthdGhsZWVuNTJAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6Iio1TUhnRlZhZHAiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.i_kxBzF5KAOkv...</msg>
<status status="PASS" starttime="20220624 16:06:36.634" endtime="20220624 16:06:36.635"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.612" endtime="20220624 16:06:36.635"/>
</kw>
<kw name="DELETE Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Headers &quot;${headers}&quot;" library="DELETE" sourcename="DELETE Autenticado EndPoint &quot;${endpoint}&quot; Headers &quot;${headers}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.647" level="INFO">DELETE Request : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 path_url=/produtos/ySuPFbSBgrUrfwM7 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImthdGhsZWVuNTJAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6Iio1TUhnRlZhZHAiLCJpYXQiOjE2NTYwOTc1OTYsImV4cCI6MTY1NjA5ODE5Nn0.i_kxBzF5KAOkvk4_VGnJzA-mtpS71WK09ucswmBEbTk', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.647" level="INFO">DELETE Response : url=http://localhost:3000/produtos/ySuPFbSBgrUrfwM7 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'abb2ad3b-0cbe-420c-bdf8-ca479ca169e3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:36.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.636" endtime="20220624 16:06:36.647"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.647" endtime="20220624 16:06:36.648"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.648" level="INFO">${response_body} = {'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:36.648" endtime="20220624 16:06:36.648"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.636" endtime="20220624 16:06:36.648"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.649" endtime="20220624 16:06:36.650"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.649" endtime="20220624 16:06:36.650"/>
</kw>
<kw name="Validar Mensagem &quot;Registro excluído com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.651" endtime="20220624 16:06:36.651"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.650" endtime="20220624 16:06:36.651"/>
</kw>
<tag>Deletar_Produto_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.603" endtime="20220624 16:06:36.652"/>
</test>
<test id="s1-s3-s4-t2" name="Cenario: Tentar Deletar Produto Não Cadastrado" line="19">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.653" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.653" endtime="20220624 16:06:36.654"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.653" endtime="20220624 16:06:36.654"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.655" level="INFO">${nome} = Allison Sawyer</msg>
<status status="PASS" starttime="20220624 16:06:36.655" endtime="20220624 16:06:36.655"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.655" level="INFO">${email} = marcjenkins@example.net</msg>
<status status="PASS" starttime="20220624 16:06:36.655" endtime="20220624 16:06:36.655"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.655" level="INFO">${senha} = XL!8WfoBSy</msg>
<status status="PASS" starttime="20220624 16:06:36.655" endtime="20220624 16:06:36.656"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.656" level="INFO">&amp;{usuario} = { nome=Allison Sawyer | email=marcjenkins@example.net | password=XL!8WfoBSy | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.656" endtime="20220624 16:06:36.656"/>
</kw>
<msg timestamp="20220624 16:06:36.656" level="INFO">${usuario} = {'nome': 'Allison Sawyer', 'email': 'marcjenkins@example.net', 'password': 'XL!8WfoBSy', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.654" endtime="20220624 16:06:36.656"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.657" endtime="20220624 16:06:36.657"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.663" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '92', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Allison+Sawyer&amp;email=marcjenkins%40example.net&amp;password=XL%218WfoBSy&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.663" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'efb42d0f-8a28-49f9-9f7f-e44c99f41e61', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "9dZkdWZdTzjOjn1S"
} 
 </msg>
<msg timestamp="20220624 16:06:36.664" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.657" endtime="20220624 16:06:36.664"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.664" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.664" endtime="20220624 16:06:36.664"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.665" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '9dZkdWZdTzjOjn1S'}</msg>
<status status="PASS" starttime="20220624 16:06:36.664" endtime="20220624 16:06:36.665"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.656" endtime="20220624 16:06:36.665"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.665" endtime="20220624 16:06:36.666"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.665" endtime="20220624 16:06:36.666"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.667" endtime="20220624 16:06:36.667"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.666" endtime="20220624 16:06:36.667"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.668" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.667" endtime="20220624 16:06:36.668"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.668" endtime="20220624 16:06:36.668"/>
</kw>
<msg timestamp="20220624 16:06:36.668" level="INFO">${usuario_valido} = {'nome': 'Allison Sawyer', 'email': 'marcjenkins@example.net', 'password': 'XL!8WfoBSy', 'administrador': 'true', '_id': '9dZkdWZdTzjOjn1S'}</msg>
<status status="PASS" starttime="20220624 16:06:36.654" endtime="20220624 16:06:36.668"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.669" level="INFO">Removed item with key 'nome' and value 'Allison Sawyer'.</msg>
<msg timestamp="20220624 16:06:36.669" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.669" level="INFO">Removed item with key '_id' and value '9dZkdWZdTzjOjn1S'.</msg>
<status status="PASS" starttime="20220624 16:06:36.668" endtime="20220624 16:06:36.669"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.669" endtime="20220624 16:06:36.669"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.672" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=marcjenkins%40example.net&amp;password=XL%218WfoBSy 
 </msg>
<msg timestamp="20220624 16:06:36.672" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a4063887-081d-4e6a-bfdc-b1a70efa8234', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '285', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmNqZW5raW5zQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJYTCE4V2ZvQlN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.pwqSPw5Cpm4QRJOBnRs5Vx3czzL5TukCSxCfndMBljU"
} 
 </msg>
<msg timestamp="20220624 16:06:36.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.669" endtime="20220624 16:06:36.672"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.672" endtime="20220624 16:06:36.673"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.673" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmNqZW5raW5zQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJYTCE4V2ZvQlN5IiwiaWF0IjoxNjU2MDk...</msg>
<status status="PASS" starttime="20220624 16:06:36.673" endtime="20220624 16:06:36.673"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.669" endtime="20220624 16:06:36.673"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.674" endtime="20220624 16:06:36.674"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.673" endtime="20220624 16:06:36.675"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.675" endtime="20220624 16:06:36.675"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.675" endtime="20220624 16:06:36.676"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.676" level="INFO">Length is 212</msg>
<status status="PASS" starttime="20220624 16:06:36.676" endtime="20220624 16:06:36.676"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.676" endtime="20220624 16:06:36.676"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.677" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmNqZW5raW5zQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJYTCE4V2ZvQlN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.pwqSPw5Cpm4QRJO...</msg>
<status status="PASS" starttime="20220624 16:06:36.677" endtime="20220624 16:06:36.677"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.677" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmNqZW5raW5zQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJYTCE4V2ZvQlN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.pwqSPw5Cpm4Q...</msg>
<status status="PASS" starttime="20220624 16:06:36.677" endtime="20220624 16:06:36.677"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.654" endtime="20220624 16:06:36.678"/>
</kw>
<kw name="DELETE Autenticado EndPoint &quot;/produtos/NaoExisto&quot; Headers &quot;${headers}&quot;" library="DELETE" sourcename="DELETE Autenticado EndPoint &quot;${endpoint}&quot; Headers &quot;${headers}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.682" level="INFO">DELETE Request : url=http://localhost:3000/produtos/NaoExisto 
 path_url=/produtos/NaoExisto 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmNqZW5raW5zQGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiJYTCE4V2ZvQlN5IiwiaWF0IjoxNjU2MDk3NTk2LCJleHAiOjE2NTYwOTgxOTZ9.pwqSPw5Cpm4QRJOBnRs5Vx3czzL5TukCSxCfndMBljU', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.682" level="INFO">DELETE Response : url=http://localhost:3000/produtos/NaoExisto 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4f78017b-4c61-43d1-b47e-cbcdc3fd4e66', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20220624 16:06:36.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.678" endtime="20220624 16:06:36.682"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.682" endtime="20220624 16:06:36.682"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.683" level="INFO">${response_body} = {'message': 'Nenhum registro excluído'}</msg>
<status status="PASS" starttime="20220624 16:06:36.682" endtime="20220624 16:06:36.683"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.678" endtime="20220624 16:06:36.683"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.684" endtime="20220624 16:06:36.685"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.684" endtime="20220624 16:06:36.685"/>
</kw>
<kw name="Validar Mensagem &quot;Nenhum registro excluído&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.685" endtime="20220624 16:06:36.686"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.685" endtime="20220624 16:06:36.686"/>
</kw>
<tag>Deletar_Produto_Nao_Cadastrado</tag>
<tag>DELETE</tag>
<tag>DELETE_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.652" endtime="20220624 16:06:36.686"/>
</test>
<test id="s1-s3-s4-t3" name="Cenario: Tentar Deletar Produto Cadastrado Sem Autenticacao" line="26">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.689" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.688" endtime="20220624 16:06:36.689"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.688" endtime="20220624 16:06:36.689"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.693" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.693" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0ca97618-3237-4161-928e-1d9891dd190a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.689" endtime="20220624 16:06:36.693"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.694" endtime="20220624 16:06:36.694"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.695" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.694" endtime="20220624 16:06:36.695"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.689" endtime="20220624 16:06:36.695"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.696" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:36.696" endtime="20220624 16:06:36.697"/>
</kw>
<msg timestamp="20220624 16:06:36.697" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:36.689" endtime="20220624 16:06:36.697"/>
</kw>
<kw name="DELETE Endpoint &quot;/produtos/${produto['_id']}&quot;" library="DELETE" sourcename="DELETE Endpoint &quot;${endpoint}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.699" level="INFO">DELETE Request : url=http://localhost:3000/produtos/vF7r7dBj4AgssVDy 
 path_url=/produtos/vF7r7dBj4AgssVDy 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.699" level="INFO">DELETE Response : url=http://localhost:3000/produtos/vF7r7dBj4AgssVDy 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8f74ec20-a023-4ea8-9a1c-fe9bcfe336c3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:36.699" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.697" endtime="20220624 16:06:36.699"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.701" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.699" endtime="20220624 16:06:36.701"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.701" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:36.701" endtime="20220624 16:06:36.701"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.697" endtime="20220624 16:06:36.701"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.702" endtime="20220624 16:06:36.703"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.702" endtime="20220624 16:06:36.703"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.704" endtime="20220624 16:06:36.704"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.703" endtime="20220624 16:06:36.704"/>
</kw>
<tag>Deletar_Produto_Sem_Autenticacao</tag>
<tag>DELETE</tag>
<tag>DELETE_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.688" endtime="20220624 16:06:36.705"/>
</test>
<test id="s1-s3-s4-t4" name="Cenario: Tentar Deletar Produto Cadastrado Com Autenticacao De Nao Administrador" line="33">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.707" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.706" endtime="20220624 16:06:36.707"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.706" endtime="20220624 16:06:36.707"/>
</kw>
<kw name="Pegar Produto Cadastrado" library="produtos_keywords">
<var>${produto}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.712" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.712" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b493ffd7-6e5d-4430-b905-7d396d62dc38', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.708" endtime="20220624 16:06:36.712"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.712" endtime="20220624 16:06:36.713"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.714" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.713" endtime="20220624 16:06:36.714"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.708" endtime="20220624 16:06:36.714"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${produto}</arg>
<arg>${response_body['produtos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.715" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:36.714" endtime="20220624 16:06:36.715"/>
</kw>
<msg timestamp="20220624 16:06:36.715" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:36.707" endtime="20220624 16:06:36.715"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.717" level="INFO">${nome} = Ashley Garcia</msg>
<status status="PASS" starttime="20220624 16:06:36.717" endtime="20220624 16:06:36.717"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.717" level="INFO">${email} = gowens@example.org</msg>
<status status="PASS" starttime="20220624 16:06:36.717" endtime="20220624 16:06:36.717"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.717" level="INFO">${senha} = 7+d0+Xr3_g</msg>
<status status="PASS" starttime="20220624 16:06:36.717" endtime="20220624 16:06:36.717"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.718" level="INFO">&amp;{usuario} = { nome=Ashley Garcia | email=gowens@example.org | password=7+d0+Xr3_g | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:36.718" endtime="20220624 16:06:36.718"/>
</kw>
<msg timestamp="20220624 16:06:36.718" level="INFO">${usuario} = {'nome': 'Ashley Garcia', 'email': 'gowens@example.org', 'password': '7+d0+Xr3_g', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:36.716" endtime="20220624 16:06:36.718"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.719" endtime="20220624 16:06:36.719"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.726" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Ashley+Garcia&amp;email=gowens%40example.org&amp;password=7%2Bd0%2BXr3_g&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:36.726" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '186ca275-0188-44a2-abbf-aca3bac5e2f2', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "3DENZnO3QHhK7a8t"
} 
 </msg>
<msg timestamp="20220624 16:06:36.726" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.719" endtime="20220624 16:06:36.726"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.726" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.726" endtime="20220624 16:06:36.726"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.727" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '3DENZnO3QHhK7a8t'}</msg>
<status status="PASS" starttime="20220624 16:06:36.726" endtime="20220624 16:06:36.727"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.718" endtime="20220624 16:06:36.727"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.728" endtime="20220624 16:06:36.729"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.727" endtime="20220624 16:06:36.729"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.729" endtime="20220624 16:06:36.730"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.729" endtime="20220624 16:06:36.730"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.730" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.730" endtime="20220624 16:06:36.730"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.730" endtime="20220624 16:06:36.731"/>
</kw>
<msg timestamp="20220624 16:06:36.731" level="INFO">${usuario_valido} = {'nome': 'Ashley Garcia', 'email': 'gowens@example.org', 'password': '7+d0+Xr3_g', 'administrador': 'false', '_id': '3DENZnO3QHhK7a8t'}</msg>
<status status="PASS" starttime="20220624 16:06:36.716" endtime="20220624 16:06:36.731"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.731" level="INFO">Removed item with key 'nome' and value 'Ashley Garcia'.</msg>
<msg timestamp="20220624 16:06:36.731" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:36.731" level="INFO">Removed item with key '_id' and value '3DENZnO3QHhK7a8t'.</msg>
<status status="PASS" starttime="20220624 16:06:36.731" endtime="20220624 16:06:36.731"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.732" endtime="20220624 16:06:36.732"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.735" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=gowens%40example.org&amp;password=7%2Bd0%2BXr3_g 
 </msg>
<msg timestamp="20220624 16:06:36.735" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b8efdae3-78bd-4ef0-bc31-0a262ca28b06', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '279', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdvd2Vuc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiNytkMCtYcjNfZyIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.5p8h1VCB9SaFW4pimgAvUv99n7EpGgc7n1c9R44inuM"
} 
 </msg>
<msg timestamp="20220624 16:06:36.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.732" endtime="20220624 16:06:36.735"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.735" endtime="20220624 16:06:36.735"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.736" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdvd2Vuc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiNytkMCtYcjNfZyIsImlhdCI6MTY1NjA5NzU5Niw...</msg>
<status status="PASS" starttime="20220624 16:06:36.735" endtime="20220624 16:06:36.736"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.731" endtime="20220624 16:06:36.736"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.736" endtime="20220624 16:06:36.737"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.736" endtime="20220624 16:06:36.737"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.738" endtime="20220624 16:06:36.738"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.737" endtime="20220624 16:06:36.738"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.739" level="INFO">Length is 206</msg>
<status status="PASS" starttime="20220624 16:06:36.738" endtime="20220624 16:06:36.739"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.738" endtime="20220624 16:06:36.739"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.740" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdvd2Vuc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiNytkMCtYcjNfZyIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.5p8h1VCB9SaFW4pimgAvU...</msg>
<status status="PASS" starttime="20220624 16:06:36.739" endtime="20220624 16:06:36.740"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.740" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdvd2Vuc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiNytkMCtYcjNfZyIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.5p8h1VCB9SaFW4pimg...</msg>
<status status="PASS" starttime="20220624 16:06:36.740" endtime="20220624 16:06:36.740"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.716" endtime="20220624 16:06:36.740"/>
</kw>
<kw name="DELETE Autenticado EndPoint &quot;/produtos/${produto['_id']}&quot; Headers &quot;${headers}&quot;" library="DELETE" sourcename="DELETE Autenticado EndPoint &quot;${endpoint}&quot; Headers &quot;${headers}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.745" level="INFO">DELETE Request : url=http://localhost:3000/produtos/vF7r7dBj4AgssVDy 
 path_url=/produtos/vF7r7dBj4AgssVDy 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdvd2Vuc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiNytkMCtYcjNfZyIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.5p8h1VCB9SaFW4pimgAvUv99n7EpGgc7n1c9R44inuM', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.745" level="INFO">DELETE Response : url=http://localhost:3000/produtos/vF7r7dBj4AgssVDy 
 status=403, reason=Forbidden 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f9832725-088c-46a2-bda6-5388c3a9d62d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Rota exclusiva para administradores"
} 
 </msg>
<msg timestamp="20220624 16:06:36.745" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.742" endtime="20220624 16:06:36.745"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.745" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.745" endtime="20220624 16:06:36.745"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.746" level="INFO">${response_body} = {'message': 'Rota exclusiva para administradores'}</msg>
<status status="PASS" starttime="20220624 16:06:36.745" endtime="20220624 16:06:36.746"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.741" endtime="20220624 16:06:36.746"/>
</kw>
<kw name="Validar Status Code &quot;403&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.747" endtime="20220624 16:06:36.747"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.746" endtime="20220624 16:06:36.748"/>
</kw>
<kw name="Validar Mensagem &quot;Rota exclusiva para administradores&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.748" endtime="20220624 16:06:36.749"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.748" endtime="20220624 16:06:36.749"/>
</kw>
<tag>Deletar_Produto_Nao_Administrador</tag>
<tag>DELETE</tag>
<tag>DELETE_Produtos</tag>
<tag>Produtos</tag>
<status status="PASS" starttime="20220624 16:06:36.706" endtime="20220624 16:06:36.749"/>
</test>
<doc>Arquivo De Requisições Do Tipo DELETE Do EndPoint Produtos</doc>
<status status="PASS" starttime="20220624 16:06:36.592" endtime="20220624 16:06:36.750"/>
</suite>
<status status="PASS" starttime="20220624 16:06:34.804" endtime="20220624 16:06:36.752"/>
</suite>
<suite id="s1-s4" name="04 Carrinhos" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\04_carrinhos">
<suite id="s1-s4-s1" name="01 carrinhos GET" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\04_carrinhos\01_carrinhos_GET.robot">
<test id="s1-s4-s1-t1" name="Cenario: Listar Todos Os Carrinhos Cadastrados" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:36.769" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:36.769" endtime="20220624 16:06:36.769"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.768" endtime="20220624 16:06:36.769"/>
</kw>
<kw name="Cadastrar Novo Carrinho" library="carrinhos_keywords">
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.775" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:36.775" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c071e6da-bdc4-42cd-bb72-28b6048fd4b5', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 999,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 996,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 995,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 995,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 995,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 999,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 999,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 995,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 994,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 998,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 999,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 995,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 999,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 999,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 994,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 999,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 999,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 999,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 996,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 993,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 999,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 995,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 999,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 995,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 997,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 999,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 999,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 999,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 992,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 991,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 996,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 999,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 994,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 996,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 999,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 999,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 999,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:36.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.770" endtime="20220624 16:06:36.775"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.775" endtime="20220624 16:06:36.775"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.776" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.775" endtime="20220624 16:06:36.777"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.770" endtime="20220624 16:06:36.777"/>
</kw>
<msg timestamp="20220624 16:06:36.777" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:36.770" endtime="20220624 16:06:36.777"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.778" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:36.777" endtime="20220624 16:06:36.778"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.778" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:36.778" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:36.778" endtime="20220624 16:06:36.778"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.779" level="INFO">${quantidade_aleatoria} = 44</msg>
<status status="PASS" starttime="20220624 16:06:36.778" endtime="20220624 16:06:36.779"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:36.779" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:36.779" endtime="20220624 16:06:36.779"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.779" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:36.779" endtime="20220624 16:06:36.780"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.780" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:36.780" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:36.780" endtime="20220624 16:06:36.780"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.781" level="INFO">${index_produto} = 25</msg>
<status status="PASS" starttime="20220624 16:06:36.780" endtime="20220624 16:06:36.781"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.781" level="INFO">${produto} = {'nome': 'Smart Office', 'descricao': 'Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)', 'quantidade': 995, 'preco': 89, '_id': 'UxBsipHgAI1f42Ny'}</msg>
<status status="PASS" starttime="20220624 16:06:36.781" endtime="20220624 16:06:36.781"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.781" endtime="20220624 16:06:36.781"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.781" endtime="20220624 16:06:36.781"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.781" endtime="20220624 16:06:36.781"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.782" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.782" endtime="20220624 16:06:36.782"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.782" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.782" endtime="20220624 16:06:36.782"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.782" endtime="20220624 16:06:36.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.783" endtime="20220624 16:06:36.783"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.783" endtime="20220624 16:06:36.783"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.780" endtime="20220624 16:06:36.783"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.783" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:36.783" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:36.783" endtime="20220624 16:06:36.784"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.784" level="INFO">${index_produto} = 40</msg>
<status status="PASS" starttime="20220624 16:06:36.784" endtime="20220624 16:06:36.784"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.785" level="INFO">${produto} = {'nome': 'Sound Booster', 'descricao': 'PC multimedia speakers - optimized for Blutooth/A2DP', 'quantidade': 999, 'preco': 45, '_id': 'qe7RSBXih8PwxPl8'}</msg>
<status status="PASS" starttime="20220624 16:06:36.784" endtime="20220624 16:06:36.785"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.785" endtime="20220624 16:06:36.785"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.785" endtime="20220624 16:06:36.785"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.785" endtime="20220624 16:06:36.785"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.785" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.785" endtime="20220624 16:06:36.785"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.786" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.785" endtime="20220624 16:06:36.786"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.786" endtime="20220624 16:06:36.786"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.786" endtime="20220624 16:06:36.787"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.787" endtime="20220624 16:06:36.787"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.783" endtime="20220624 16:06:36.787"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.787" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:36.787" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:36.787" endtime="20220624 16:06:36.787"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.788" level="INFO">${index_produto} = 32</msg>
<status status="PASS" starttime="20220624 16:06:36.787" endtime="20220624 16:06:36.788"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.788" level="INFO">${produto} = {'nome': 'Smart Design', 'descricao': 'Complete package, 1 User, Image editing, processing', 'quantidade': 999, 'preco': 79, '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:36.788" endtime="20220624 16:06:36.788"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.789" endtime="20220624 16:06:36.789"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.789" endtime="20220624 16:06:36.789"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.788" endtime="20220624 16:06:36.789"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.789" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.789" endtime="20220624 16:06:36.789"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.789" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.789" endtime="20220624 16:06:36.789"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.789" endtime="20220624 16:06:36.790"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.790" endtime="20220624 16:06:36.790"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.790" endtime="20220624 16:06:36.791"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.787" endtime="20220624 16:06:36.791"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.791" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:36.791" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:36.791" endtime="20220624 16:06:36.791"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.792" level="INFO">${index_produto} = 19</msg>
<status status="PASS" starttime="20220624 16:06:36.791" endtime="20220624 16:06:36.792"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.792" level="INFO">${produto} = {'nome': 'Cepat Tablet 10.5', 'descricao': '10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 996, '...</msg>
<status status="PASS" starttime="20220624 16:06:36.792" endtime="20220624 16:06:36.792"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.792" endtime="20220624 16:06:36.792"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.792" endtime="20220624 16:06:36.793"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.792" endtime="20220624 16:06:36.793"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.793" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.793" endtime="20220624 16:06:36.793"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.793" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.793" endtime="20220624 16:06:36.793"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.793" endtime="20220624 16:06:36.794"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.794" endtime="20220624 16:06:36.794"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.794" endtime="20220624 16:06:36.794"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.791" endtime="20220624 16:06:36.794"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.795" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:36.795" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:36.794" endtime="20220624 16:06:36.795"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.795" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:36.795" endtime="20220624 16:06:36.795"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.796" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 995, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:36.795" endtime="20220624 16:06:36.796"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.796" endtime="20220624 16:06:36.796"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.796" endtime="20220624 16:06:36.796"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.796" endtime="20220624 16:06:36.796"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.796" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.796" endtime="20220624 16:06:36.796"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.797" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.797" endtime="20220624 16:06:36.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.797" endtime="20220624 16:06:36.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.797" endtime="20220624 16:06:36.798"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.798" endtime="20220624 16:06:36.798"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.794" endtime="20220624 16:06:36.798"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.798" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:36.798" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:36.798" endtime="20220624 16:06:36.798"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.799" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.798" endtime="20220624 16:06:36.799"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.799" level="INFO">${produto} = {'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 996, 'preco': 250, '_id': '3xTNa4i2sU4...</msg>
<status status="PASS" starttime="20220624 16:06:36.799" endtime="20220624 16:06:36.799"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.800" endtime="20220624 16:06:36.800"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.800" endtime="20220624 16:06:36.800"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.799" endtime="20220624 16:06:36.800"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.800" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.800" endtime="20220624 16:06:36.800"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.800" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.800" endtime="20220624 16:06:36.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.800" endtime="20220624 16:06:36.801"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.801" endtime="20220624 16:06:36.801"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.801" endtime="20220624 16:06:36.802"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.798" endtime="20220624 16:06:36.802"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.802" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:36.802" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:36.802" endtime="20220624 16:06:36.802"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.803" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.802" endtime="20220624 16:06:36.803"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.803" level="INFO">${produto} = {'nome': 'Portable DVD Player with 9" LCD Monitor', 'descricao': '9" LCD Screen, storage holds up to 8 hours, 2 speakers included', 'quantidade': 995, 'preco': 853, '_id': '5DDmCSnTAl8gVAEh'}</msg>
<status status="PASS" starttime="20220624 16:06:36.803" endtime="20220624 16:06:36.803"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.803" endtime="20220624 16:06:36.803"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.803" endtime="20220624 16:06:36.803"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.803" endtime="20220624 16:06:36.803"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.804" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.804" endtime="20220624 16:06:36.804"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.804" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.804" endtime="20220624 16:06:36.804"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.804" endtime="20220624 16:06:36.805"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.805" endtime="20220624 16:06:36.805"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.805" endtime="20220624 16:06:36.805"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.802" endtime="20220624 16:06:36.805"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.806" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:36.806" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:36.806" endtime="20220624 16:06:36.806"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.806" level="INFO">${index_produto} = 34</msg>
<status status="PASS" starttime="20220624 16:06:36.806" endtime="20220624 16:06:36.807"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.807" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 998, 'preco': 39, '_id': 'nCwNCrDsvlkZa8Zw'}</msg>
<status status="PASS" starttime="20220624 16:06:36.807" endtime="20220624 16:06:36.807"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.807" endtime="20220624 16:06:36.807"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.807" endtime="20220624 16:06:36.807"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.807" endtime="20220624 16:06:36.807"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.808" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.807" endtime="20220624 16:06:36.808"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.808" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.808" endtime="20220624 16:06:36.808"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.808" endtime="20220624 16:06:36.809"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.809" endtime="20220624 16:06:36.809"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.809" endtime="20220624 16:06:36.809"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.805" endtime="20220624 16:06:36.809"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.810" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:36.810" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:36.809" endtime="20220624 16:06:36.810"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.810" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:36.810" endtime="20220624 16:06:36.810"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.811" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 994, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:36.810" endtime="20220624 16:06:36.811"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.811" endtime="20220624 16:06:36.811"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.811" endtime="20220624 16:06:36.811"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.811" endtime="20220624 16:06:36.811"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.811" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.811" endtime="20220624 16:06:36.811"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.812" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.811" endtime="20220624 16:06:36.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.812" endtime="20220624 16:06:36.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.812" endtime="20220624 16:06:36.813"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.813" endtime="20220624 16:06:36.813"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.809" endtime="20220624 16:06:36.813"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.813" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:36.813" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:36.813" endtime="20220624 16:06:36.813"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.814" level="INFO">${index_produto} = 35</msg>
<status status="PASS" starttime="20220624 16:06:36.813" endtime="20220624 16:06:36.814"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.814" level="INFO">${produto} = {'nome': 'Beam Breaker B-3', 'descricao': '1080p, DLP max. 12,3 Meter, 3D-ready', 'quantidade': 999, 'preco': 889, '_id': 'tEyF4402lspTNQCb'}</msg>
<status status="PASS" starttime="20220624 16:06:36.814" endtime="20220624 16:06:36.814"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.815" endtime="20220624 16:06:36.815"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.815" endtime="20220624 16:06:36.815"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.814" endtime="20220624 16:06:36.815"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.815" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.815" endtime="20220624 16:06:36.815"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.815" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.815" endtime="20220624 16:06:36.815"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.815" endtime="20220624 16:06:36.816"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.816" endtime="20220624 16:06:36.816"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.816" endtime="20220624 16:06:36.816"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.813" endtime="20220624 16:06:36.816"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.817" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:36.817" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:36.817" endtime="20220624 16:06:36.817"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.817" level="INFO">${index_produto} = 19</msg>
<status status="PASS" starttime="20220624 16:06:36.817" endtime="20220624 16:06:36.817"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.818" level="INFO">${produto} = {'nome': 'PC Power Station', 'descricao': 'PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro', 'quantidade': 999, 'preco': 2399, '_id': 'RhTxSnY2aSwilmO...</msg>
<status status="PASS" starttime="20220624 16:06:36.818" endtime="20220624 16:06:36.818"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.818" endtime="20220624 16:06:36.818"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.818" endtime="20220624 16:06:36.818"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.818" endtime="20220624 16:06:36.818"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.819" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.818" endtime="20220624 16:06:36.819"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.819" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.819" endtime="20220624 16:06:36.819"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.819" endtime="20220624 16:06:36.820"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.820" endtime="20220624 16:06:36.820"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.820" endtime="20220624 16:06:36.820"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.816" endtime="20220624 16:06:36.820"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.821" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:36.821" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:36.820" endtime="20220624 16:06:36.821"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.821" level="INFO">${index_produto} = 30</msg>
<status status="PASS" starttime="20220624 16:06:36.821" endtime="20220624 16:06:36.821"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.821" level="INFO">${produto} = {'nome': 'Hurricane GX', 'descricao': 'Hurricane GX: PCI-E 691 GFLOPS game-optimized', 'quantidade': 999, 'preco': 101, '_id': 'k7RwzHsvxWkz58Nr'}</msg>
<status status="PASS" starttime="20220624 16:06:36.821" endtime="20220624 16:06:36.821"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.821" endtime="20220624 16:06:36.821"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.821" endtime="20220624 16:06:36.822"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.821" endtime="20220624 16:06:36.822"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.822" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.822" endtime="20220624 16:06:36.822"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.822" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.822" endtime="20220624 16:06:36.822"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.822" endtime="20220624 16:06:36.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.823" endtime="20220624 16:06:36.823"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.823" endtime="20220624 16:06:36.823"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.820" endtime="20220624 16:06:36.823"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.824" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:36.824" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:36.823" endtime="20220624 16:06:36.824"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.825" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:36.824" endtime="20220624 16:06:36.825"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.825" level="INFO">${produto} = {'nome': 'ITelO FlexTop I6300c', 'descricao': 'Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8', 'quantidade': 999, 'preco': 799, '_id': 'I7runwlH7VqYXvW4'}</msg>
<status status="PASS" starttime="20220624 16:06:36.825" endtime="20220624 16:06:36.825"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.825" endtime="20220624 16:06:36.825"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.825" endtime="20220624 16:06:36.826"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.825" endtime="20220624 16:06:36.826"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.826" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.826" endtime="20220624 16:06:36.826"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.826" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.826" endtime="20220624 16:06:36.826"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.826" endtime="20220624 16:06:36.827"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.827" endtime="20220624 16:06:36.827"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.827" endtime="20220624 16:06:36.827"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.823" endtime="20220624 16:06:36.827"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.828" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:36.828" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:36.827" endtime="20220624 16:06:36.828"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.828" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:36.828" endtime="20220624 16:06:36.828"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.828" level="INFO">${produto} = {'nome': 'PC Lock', 'descricao': 'Robust 3m anti-burglary protection for your laptop computer', 'quantidade': 999, 'preco': 8, '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:36.828" endtime="20220624 16:06:36.828"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.829" endtime="20220624 16:06:36.829"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.828" endtime="20220624 16:06:36.829"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.828" endtime="20220624 16:06:36.829"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.829" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.829" endtime="20220624 16:06:36.829"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.829" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.829" endtime="20220624 16:06:36.829"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.829" endtime="20220624 16:06:36.830"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.830" endtime="20220624 16:06:36.830"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.830" endtime="20220624 16:06:36.830"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.827" endtime="20220624 16:06:36.830"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.831" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:36.831" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:36.830" endtime="20220624 16:06:36.831"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.831" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:36.831" endtime="20220624 16:06:36.831"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.832" level="INFO">${produto} = {'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 999, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}</msg>
<status status="PASS" starttime="20220624 16:06:36.831" endtime="20220624 16:06:36.832"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.832" endtime="20220624 16:06:36.832"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.832" endtime="20220624 16:06:36.832"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.832" endtime="20220624 16:06:36.832"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.832" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.832" endtime="20220624 16:06:36.832"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.833" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.832" endtime="20220624 16:06:36.833"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.833" endtime="20220624 16:06:36.834"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.834" endtime="20220624 16:06:36.834"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.834" endtime="20220624 16:06:36.835"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.830" endtime="20220624 16:06:36.835"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.835" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:36.835" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:36.835" endtime="20220624 16:06:36.835"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.836" level="INFO">${index_produto} = 17</msg>
<status status="PASS" starttime="20220624 16:06:36.835" endtime="20220624 16:06:36.836"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.836" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 999, 'preco': 299, '_id': 'ZRsnfqcRCQFu3p3R'}</msg>
<status status="PASS" starttime="20220624 16:06:36.836" endtime="20220624 16:06:36.836"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.836" endtime="20220624 16:06:36.836"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.836" endtime="20220624 16:06:36.836"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.836" endtime="20220624 16:06:36.836"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.837" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.836" endtime="20220624 16:06:36.837"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.837" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.837" endtime="20220624 16:06:36.837"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.837" endtime="20220624 16:06:36.838"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.838" endtime="20220624 16:06:36.838"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.838" endtime="20220624 16:06:36.838"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.835" endtime="20220624 16:06:36.838"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.838" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:36.838" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:36.838" endtime="20220624 16:06:36.838"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.839" level="INFO">${index_produto} = 28</msg>
<status status="PASS" starttime="20220624 16:06:36.839" endtime="20220624 16:06:36.839"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.839" level="INFO">${produto} = {'nome': 'Cerdik Phone 7', 'descricao': '7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of ...</msg>
<status status="PASS" starttime="20220624 16:06:36.839" endtime="20220624 16:06:36.839"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.840" endtime="20220624 16:06:36.840"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.840" endtime="20220624 16:06:36.840"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.840" endtime="20220624 16:06:36.840"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.840" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.840" endtime="20220624 16:06:36.840"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.840" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.840" endtime="20220624 16:06:36.841"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.841" endtime="20220624 16:06:36.841"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.841" endtime="20220624 16:06:36.841"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.841" endtime="20220624 16:06:36.842"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.838" endtime="20220624 16:06:36.842"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.842" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:36.842" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:36.842" endtime="20220624 16:06:36.842"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.843" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:36.842" endtime="20220624 16:06:36.843"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.843" level="INFO">${produto} = {'nome': 'Silverberry', 'descricao': 'Our new multifunctional Handheld with phone function in silver', 'quantidade': 998, 'preco': 549, '_id': 'Dw7bFasYs0n1UJui'}</msg>
<status status="PASS" starttime="20220624 16:06:36.843" endtime="20220624 16:06:36.843"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.844" endtime="20220624 16:06:36.844"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.843" endtime="20220624 16:06:36.844"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.843" endtime="20220624 16:06:36.844"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.844" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.844" endtime="20220624 16:06:36.844"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.844" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.844" endtime="20220624 16:06:36.844"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.844" endtime="20220624 16:06:36.845"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.845" endtime="20220624 16:06:36.845"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.845" endtime="20220624 16:06:36.845"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.842" endtime="20220624 16:06:36.845"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.846" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:36.846" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:36.845" endtime="20220624 16:06:36.846"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.846" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:36.846" endtime="20220624 16:06:36.846"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.847" level="INFO">${produto} = {'nome': 'Ergonomic Keyboard', 'descricao': 'Ergonomic USB Keyboard for Desktop, Plug&amp;Play', 'quantidade': 999, 'preco': 14, '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:36.846" endtime="20220624 16:06:36.847"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.847" endtime="20220624 16:06:36.847"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.847" endtime="20220624 16:06:36.847"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.847" endtime="20220624 16:06:36.847"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.847" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.847" endtime="20220624 16:06:36.847"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.848" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.848" endtime="20220624 16:06:36.848"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.848" endtime="20220624 16:06:36.849"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.849" endtime="20220624 16:06:36.849"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.849" endtime="20220624 16:06:36.849"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.845" endtime="20220624 16:06:36.849"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.850" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:36.850" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:36.849" endtime="20220624 16:06:36.850"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.850" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.850" endtime="20220624 16:06:36.850"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.851" level="INFO">${produto} = {'nome': 'Gaming Monster Pro', 'descricao': '3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8', 'quantidade': 999, 'preco': 1700, '_id': 'AiU2jNoXJmOd3bDF'...</msg>
<status status="PASS" starttime="20220624 16:06:36.851" endtime="20220624 16:06:36.851"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.851" endtime="20220624 16:06:36.851"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.851" endtime="20220624 16:06:36.851"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.851" endtime="20220624 16:06:36.851"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.852" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.851" endtime="20220624 16:06:36.852"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.852" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.852" endtime="20220624 16:06:36.852"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.852" endtime="20220624 16:06:36.852"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.852" endtime="20220624 16:06:36.853"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.853" endtime="20220624 16:06:36.853"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.849" endtime="20220624 16:06:36.853"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.853" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:36.853" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:36.853" endtime="20220624 16:06:36.853"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.854" level="INFO">${index_produto} = 21</msg>
<status status="PASS" starttime="20220624 16:06:36.853" endtime="20220624 16:06:36.854"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.854" level="INFO">${produto} = {'nome': 'Notebook Basic 17', 'descricao': 'Notebook Basic 17 with 2,80 GHz quad core, 17" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 999, 'preco': 1249, '_id': 'ikLmmmBskYjtY...</msg>
<status status="PASS" starttime="20220624 16:06:36.854" endtime="20220624 16:06:36.854"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.855" endtime="20220624 16:06:36.855"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.855" endtime="20220624 16:06:36.855"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.854" endtime="20220624 16:06:36.855"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.855" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.855" endtime="20220624 16:06:36.855"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.855" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.855" endtime="20220624 16:06:36.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.855" endtime="20220624 16:06:36.856"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.856" endtime="20220624 16:06:36.856"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.856" endtime="20220624 16:06:36.857"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.853" endtime="20220624 16:06:36.857"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.857" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:36.857" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:36.857" endtime="20220624 16:06:36.857"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.858" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:36.857" endtime="20220624 16:06:36.858"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.858" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 993, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:36.858" endtime="20220624 16:06:36.858"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.858" endtime="20220624 16:06:36.858"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.858" endtime="20220624 16:06:36.858"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.858" endtime="20220624 16:06:36.858"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.859" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.858" endtime="20220624 16:06:36.859"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.859" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.859" endtime="20220624 16:06:36.859"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.859" endtime="20220624 16:06:36.860"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.860" endtime="20220624 16:06:36.860"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.860" endtime="20220624 16:06:36.860"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.857" endtime="20220624 16:06:36.860"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.860" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:36.860" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:36.860" endtime="20220624 16:06:36.860"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.861" level="INFO">${index_produto} = 21</msg>
<status status="PASS" starttime="20220624 16:06:36.861" endtime="20220624 16:06:36.861"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.861" level="INFO">${produto} = {'nome': 'Ergo Screen E-I', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm', 'quantidade': 999, 'preco': 230, '_id': 'lhIaAKnyLoxLw9NE'}</msg>
<status status="PASS" starttime="20220624 16:06:36.861" endtime="20220624 16:06:36.861"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.862" endtime="20220624 16:06:36.862"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.862" endtime="20220624 16:06:36.862"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.862" endtime="20220624 16:06:36.862"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.862" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.862" endtime="20220624 16:06:36.862"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.862" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.862" endtime="20220624 16:06:36.863"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.863" endtime="20220624 16:06:36.863"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.863" endtime="20220624 16:06:36.864"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.864" endtime="20220624 16:06:36.864"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.860" endtime="20220624 16:06:36.864"/>
</iter>
<iter>
<var name="${i}">23</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.864" level="INFO">Length is 23</msg>
<msg timestamp="20220624 16:06:36.864" level="INFO">${quantidade_de_produtos} = 23</msg>
<status status="PASS" starttime="20220624 16:06:36.864" endtime="20220624 16:06:36.864"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.865" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:36.864" endtime="20220624 16:06:36.865"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.865" level="INFO">${produto} = {'nome': 'Track Mouse', 'descricao': 'Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play', 'quantidade': 991, 'preco': 11, '_id': 'b9EEy3P5l9HpD2pB'}</msg>
<status status="PASS" starttime="20220624 16:06:36.865" endtime="20220624 16:06:36.865"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.866" endtime="20220624 16:06:36.866"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.866" endtime="20220624 16:06:36.866"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.865" endtime="20220624 16:06:36.866"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.866" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.866" endtime="20220624 16:06:36.866"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.866" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.866" endtime="20220624 16:06:36.866"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.866" endtime="20220624 16:06:36.867"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.867" endtime="20220624 16:06:36.867"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.867" endtime="20220624 16:06:36.867"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.864" endtime="20220624 16:06:36.867"/>
</iter>
<iter>
<var name="${i}">24</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.868" level="INFO">Length is 22</msg>
<msg timestamp="20220624 16:06:36.868" level="INFO">${quantidade_de_produtos} = 22</msg>
<status status="PASS" starttime="20220624 16:06:36.868" endtime="20220624 16:06:36.868"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.868" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:36.868" endtime="20220624 16:06:36.868"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.869" level="INFO">${produto} = {'nome': 'Web cam reality', 'descricao': 'Color webcam, color, High-Speed USB', 'quantidade': 992, 'preco': 39, '_id': 'apuGRFtiCyX0bAGm'}</msg>
<status status="PASS" starttime="20220624 16:06:36.869" endtime="20220624 16:06:36.869"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.869" endtime="20220624 16:06:36.869"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.869" endtime="20220624 16:06:36.869"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.869" endtime="20220624 16:06:36.869"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.870" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.869" endtime="20220624 16:06:36.870"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.870" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.870" endtime="20220624 16:06:36.870"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.870" endtime="20220624 16:06:36.870"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.871" endtime="20220624 16:06:36.871"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.871" endtime="20220624 16:06:36.871"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.868" endtime="20220624 16:06:36.871"/>
</iter>
<iter>
<var name="${i}">25</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.871" level="INFO">Length is 21</msg>
<msg timestamp="20220624 16:06:36.871" level="INFO">${quantidade_de_produtos} = 21</msg>
<status status="PASS" starttime="20220624 16:06:36.871" endtime="20220624 16:06:36.871"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.872" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:36.871" endtime="20220624 16:06:36.872"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.872" level="INFO">${produto} = {'nome': 'Platinberry', 'descricao': 'Our new multifunctional Handheld with phone function in platinum', 'quantidade': 999, 'preco': 549, '_id': 'INAYXR7KbRCo2DKf'}</msg>
<status status="PASS" starttime="20220624 16:06:36.872" endtime="20220624 16:06:36.872"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.873" endtime="20220624 16:06:36.873"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.873" endtime="20220624 16:06:36.873"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.872" endtime="20220624 16:06:36.873"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.873" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.873" endtime="20220624 16:06:36.873"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.873" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.873" endtime="20220624 16:06:36.873"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.873" endtime="20220624 16:06:36.874"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.874" endtime="20220624 16:06:36.874"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.874" endtime="20220624 16:06:36.875"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.871" endtime="20220624 16:06:36.875"/>
</iter>
<iter>
<var name="${i}">26</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.875" level="INFO">Length is 20</msg>
<msg timestamp="20220624 16:06:36.875" level="INFO">${quantidade_de_produtos} = 20</msg>
<status status="PASS" starttime="20220624 16:06:36.875" endtime="20220624 16:06:36.875"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.876" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:36.875" endtime="20220624 16:06:36.876"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.876" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 994, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:36.876" endtime="20220624 16:06:36.876"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.876" endtime="20220624 16:06:36.876"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.876" endtime="20220624 16:06:36.876"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.876" endtime="20220624 16:06:36.876"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.877" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.876" endtime="20220624 16:06:36.877"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.877" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.877" endtime="20220624 16:06:36.877"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.877" endtime="20220624 16:06:36.878"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.878" endtime="20220624 16:06:36.878"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.878" endtime="20220624 16:06:36.878"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.875" endtime="20220624 16:06:36.878"/>
</iter>
<iter>
<var name="${i}">27</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.879" level="INFO">Length is 19</msg>
<msg timestamp="20220624 16:06:36.879" level="INFO">${quantidade_de_produtos} = 19</msg>
<status status="PASS" starttime="20220624 16:06:36.878" endtime="20220624 16:06:36.879"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.879" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.879" endtime="20220624 16:06:36.879"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.880" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 995, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:36.879" endtime="20220624 16:06:36.880"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.880" endtime="20220624 16:06:36.880"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.880" endtime="20220624 16:06:36.880"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.880" endtime="20220624 16:06:36.880"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.880" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.880" endtime="20220624 16:06:36.880"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.881" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.881" endtime="20220624 16:06:36.881"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.881" endtime="20220624 16:06:36.881"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.881" endtime="20220624 16:06:36.882"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.882" endtime="20220624 16:06:36.882"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.878" endtime="20220624 16:06:36.882"/>
</iter>
<iter>
<var name="${i}">28</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.882" level="INFO">Length is 18</msg>
<msg timestamp="20220624 16:06:36.882" level="INFO">${quantidade_de_produtos} = 18</msg>
<status status="PASS" starttime="20220624 16:06:36.882" endtime="20220624 16:06:36.882"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.883" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:36.882" endtime="20220624 16:06:36.883"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.883" level="INFO">${produto} = {'nome': 'Cordless Bluetooth Keyboard, english international', 'descricao': 'Cordless Bluetooth Keyboard with English keys', 'quantidade': 994, 'preco': 29, '_id': 'hwpiuIHmqe8VNCzw'}</msg>
<status status="PASS" starttime="20220624 16:06:36.883" endtime="20220624 16:06:36.883"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.884" endtime="20220624 16:06:36.884"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.884" endtime="20220624 16:06:36.884"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.883" endtime="20220624 16:06:36.884"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.884" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.884" endtime="20220624 16:06:36.884"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.884" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.884" endtime="20220624 16:06:36.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.884" endtime="20220624 16:06:36.885"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.885" endtime="20220624 16:06:36.885"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.885" endtime="20220624 16:06:36.885"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.882" endtime="20220624 16:06:36.886"/>
</iter>
<iter>
<var name="${i}">29</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.886" level="INFO">Length is 17</msg>
<msg timestamp="20220624 16:06:36.886" level="INFO">${quantidade_de_produtos} = 17</msg>
<status status="PASS" starttime="20220624 16:06:36.886" endtime="20220624 16:06:36.886"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.887" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:36.886" endtime="20220624 16:06:36.887"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.887" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 995, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:36.887" endtime="20220624 16:06:36.887"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.887" endtime="20220624 16:06:36.887"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.887" endtime="20220624 16:06:36.887"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.887" endtime="20220624 16:06:36.887"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.888" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.887" endtime="20220624 16:06:36.888"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.888" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.888" endtime="20220624 16:06:36.888"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.888" endtime="20220624 16:06:36.888"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.889" endtime="20220624 16:06:36.889"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.889" endtime="20220624 16:06:36.889"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.886" endtime="20220624 16:06:36.889"/>
</iter>
<iter>
<var name="${i}">30</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.889" level="INFO">Length is 16</msg>
<msg timestamp="20220624 16:06:36.889" level="INFO">${quantidade_de_produtos} = 16</msg>
<status status="PASS" starttime="20220624 16:06:36.889" endtime="20220624 16:06:36.889"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.890" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:36.889" endtime="20220624 16:06:36.890"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.890" level="INFO">${produto} = {'nome': 'Flyer', 'descricao': 'Flyer for our product palette', 'quantidade': 999, 'preco': 1, '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:36.890" endtime="20220624 16:06:36.890"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.891" endtime="20220624 16:06:36.891"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.891" endtime="20220624 16:06:36.891"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.890" endtime="20220624 16:06:36.891"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.891" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.891" endtime="20220624 16:06:36.891"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.891" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.891" endtime="20220624 16:06:36.891"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.892" endtime="20220624 16:06:36.892"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.892" endtime="20220624 16:06:36.893"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.893" endtime="20220624 16:06:36.893"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.889" endtime="20220624 16:06:36.893"/>
</iter>
<iter>
<var name="${i}">31</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.893" level="INFO">Length is 15</msg>
<msg timestamp="20220624 16:06:36.893" level="INFO">${quantidade_de_produtos} = 15</msg>
<status status="PASS" starttime="20220624 16:06:36.893" endtime="20220624 16:06:36.893"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.894" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.893" endtime="20220624 16:06:36.894"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.894" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 999, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:36.894" endtime="20220624 16:06:36.894"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.895" endtime="20220624 16:06:36.895"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.895" endtime="20220624 16:06:36.895"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.894" endtime="20220624 16:06:36.895"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.895" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.895" endtime="20220624 16:06:36.895"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.895" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.895" endtime="20220624 16:06:36.895"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.896" endtime="20220624 16:06:36.896"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.896" endtime="20220624 16:06:36.896"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.896" endtime="20220624 16:06:36.897"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.893" endtime="20220624 16:06:36.897"/>
</iter>
<iter>
<var name="${i}">32</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.897" level="INFO">Length is 14</msg>
<msg timestamp="20220624 16:06:36.897" level="INFO">${quantidade_de_produtos} = 14</msg>
<status status="PASS" starttime="20220624 16:06:36.897" endtime="20220624 16:06:36.897"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.898" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.897" endtime="20220624 16:06:36.898"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.898" level="INFO">${produto} = {'nome': 'USB Stick', 'descricao': 'USB 2.0 High-Speed 64 GB', 'quantidade': 999, 'preco': 35, '_id': 'Dx9dkgTndSJTuL1W'}</msg>
<status status="PASS" starttime="20220624 16:06:36.898" endtime="20220624 16:06:36.898"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.898" endtime="20220624 16:06:36.898"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.898" endtime="20220624 16:06:36.898"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.898" endtime="20220624 16:06:36.898"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.899" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.899" endtime="20220624 16:06:36.899"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.899" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.899" endtime="20220624 16:06:36.899"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.899" endtime="20220624 16:06:36.900"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.900" endtime="20220624 16:06:36.900"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.900" endtime="20220624 16:06:36.900"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.897" endtime="20220624 16:06:36.900"/>
</iter>
<iter>
<var name="${i}">33</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.901" level="INFO">Length is 13</msg>
<msg timestamp="20220624 16:06:36.901" level="INFO">${quantidade_de_produtos} = 13</msg>
<status status="PASS" starttime="20220624 16:06:36.900" endtime="20220624 16:06:36.901"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.901" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:36.901" endtime="20220624 16:06:36.901"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.902" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 995, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:36.901" endtime="20220624 16:06:36.902"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.902" endtime="20220624 16:06:36.902"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.902" endtime="20220624 16:06:36.902"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.902" endtime="20220624 16:06:36.902"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.902" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.902" endtime="20220624 16:06:36.902"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.903" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.902" endtime="20220624 16:06:36.903"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.903" endtime="20220624 16:06:36.903"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.903" endtime="20220624 16:06:36.904"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.904" endtime="20220624 16:06:36.904"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.900" endtime="20220624 16:06:36.904"/>
</iter>
<iter>
<var name="${i}">34</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.904" level="INFO">Length is 12</msg>
<msg timestamp="20220624 16:06:36.904" level="INFO">${quantidade_de_produtos} = 12</msg>
<status status="PASS" starttime="20220624 16:06:36.904" endtime="20220624 16:06:36.904"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.905" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:36.904" endtime="20220624 16:06:36.905"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.905" level="INFO">${produto} = {'nome': 'Gaming Monster', 'descricao': '3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8', 'quantidade': 995, 'preco': 1200, '_id': 'RIriCXGV4GxADZHJ'}</msg>
<status status="PASS" starttime="20220624 16:06:36.905" endtime="20220624 16:06:36.905"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.906" endtime="20220624 16:06:36.906"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.906" endtime="20220624 16:06:36.906"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.905" endtime="20220624 16:06:36.906"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.906" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.906" endtime="20220624 16:06:36.906"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.906" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.906" endtime="20220624 16:06:36.906"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.906" endtime="20220624 16:06:36.907"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.907" endtime="20220624 16:06:36.907"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.907" endtime="20220624 16:06:36.907"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.904" endtime="20220624 16:06:36.907"/>
</iter>
<iter>
<var name="${i}">35</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.908" level="INFO">Length is 11</msg>
<msg timestamp="20220624 16:06:36.908" level="INFO">${quantidade_de_produtos} = 11</msg>
<status status="PASS" starttime="20220624 16:06:36.908" endtime="20220624 16:06:36.908"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.909" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:36.908" endtime="20220624 16:06:36.909"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.909" level="INFO">${produto} = {'nome': 'Maxi Tablet', 'descricao': '10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 999, 'preco'...</msg>
<status status="PASS" starttime="20220624 16:06:36.909" endtime="20220624 16:06:36.909"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.909" endtime="20220624 16:06:36.909"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.909" endtime="20220624 16:06:36.909"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.909" endtime="20220624 16:06:36.909"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.910" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.909" endtime="20220624 16:06:36.910"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.910" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.910" endtime="20220624 16:06:36.910"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.910" endtime="20220624 16:06:36.911"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.911" endtime="20220624 16:06:36.911"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.911" endtime="20220624 16:06:36.911"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.908" endtime="20220624 16:06:36.911"/>
</iter>
<iter>
<var name="${i}">36</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.912" level="INFO">Length is 10</msg>
<msg timestamp="20220624 16:06:36.912" level="INFO">${quantidade_de_produtos} = 10</msg>
<status status="PASS" starttime="20220624 16:06:36.911" endtime="20220624 16:06:36.912"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.912" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.912" endtime="20220624 16:06:36.912"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.913" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 999, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:36.912" endtime="20220624 16:06:36.913"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.913" endtime="20220624 16:06:36.913"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.913" endtime="20220624 16:06:36.913"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.913" endtime="20220624 16:06:36.913"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.913" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.913" endtime="20220624 16:06:36.913"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.914" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.913" endtime="20220624 16:06:36.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.914" endtime="20220624 16:06:36.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.914" endtime="20220624 16:06:36.915"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.915" endtime="20220624 16:06:36.915"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.911" endtime="20220624 16:06:36.915"/>
</iter>
<iter>
<var name="${i}">37</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.915" level="INFO">Length is 9</msg>
<msg timestamp="20220624 16:06:36.915" level="INFO">${quantidade_de_produtos} = 9</msg>
<status status="PASS" starttime="20220624 16:06:36.915" endtime="20220624 16:06:36.915"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.916" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:36.915" endtime="20220624 16:06:36.916"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.916" level="INFO">${produto} = {'nome': 'Notebook Basic 15', 'descricao': 'Notebook Basic 15 with 2,80 GHz quad core, 15" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 996, 'preco': 956, '_id': 'ijDJyCQXRG0zUE...</msg>
<status status="PASS" starttime="20220624 16:06:36.916" endtime="20220624 16:06:36.916"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.917" endtime="20220624 16:06:36.917"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.917" endtime="20220624 16:06:36.917"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.916" endtime="20220624 16:06:36.917"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.917" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.917" endtime="20220624 16:06:36.917"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.917" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.917" endtime="20220624 16:06:36.917"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.917" endtime="20220624 16:06:36.918"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.918" endtime="20220624 16:06:36.918"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.918" endtime="20220624 16:06:36.918"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.915" endtime="20220624 16:06:36.918"/>
</iter>
<iter>
<var name="${i}">38</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.919" level="INFO">Length is 8</msg>
<msg timestamp="20220624 16:06:36.919" level="INFO">${quantidade_de_produtos} = 8</msg>
<status status="PASS" starttime="20220624 16:06:36.919" endtime="20220624 16:06:36.919"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.919" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:36.919" endtime="20220624 16:06:36.919"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.920" level="INFO">${produto} = {'nome': 'Astro Laptop 1516', 'descricao': 'Flexible Laptop with 2,5 GHz Quad Core, 15" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro', 'quantidade': 996, 'preco': 989, '_id': 'e3Lai0wKA0BCZHBl'}</msg>
<status status="PASS" starttime="20220624 16:06:36.919" endtime="20220624 16:06:36.920"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.920" endtime="20220624 16:06:36.920"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.920" endtime="20220624 16:06:36.920"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.920" endtime="20220624 16:06:36.920"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.920" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.920" endtime="20220624 16:06:36.920"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.921" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.921" endtime="20220624 16:06:36.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.921" endtime="20220624 16:06:36.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.922" endtime="20220624 16:06:36.922"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.922" endtime="20220624 16:06:36.922"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.918" endtime="20220624 16:06:36.922"/>
</iter>
<iter>
<var name="${i}">39</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.922" level="INFO">Length is 7</msg>
<msg timestamp="20220624 16:06:36.922" level="INFO">${quantidade_de_produtos} = 7</msg>
<status status="PASS" starttime="20220624 16:06:36.922" endtime="20220624 16:06:36.922"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.923" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:36.922" endtime="20220624 16:06:36.923"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.923" level="INFO">${produto} = {'nome': 'ITelO Vault Net', 'descricao': 'Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications', 'quantidade': 999, 'preco': 459, '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:36.923" endtime="20220624 16:06:36.923"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.924" endtime="20220624 16:06:36.924"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.924" endtime="20220624 16:06:36.924"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.923" endtime="20220624 16:06:36.924"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.924" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.924" endtime="20220624 16:06:36.924"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.924" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.924" endtime="20220624 16:06:36.924"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.925" endtime="20220624 16:06:36.925"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.925" endtime="20220624 16:06:36.925"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.925" endtime="20220624 16:06:36.926"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.922" endtime="20220624 16:06:36.926"/>
</iter>
<iter>
<var name="${i}">40</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.926" level="INFO">Length is 6</msg>
<msg timestamp="20220624 16:06:36.926" level="INFO">${quantidade_de_produtos} = 6</msg>
<status status="PASS" starttime="20220624 16:06:36.926" endtime="20220624 16:06:36.926"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.927" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.926" endtime="20220624 16:06:36.927"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.927" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1 Wireless', 'descricao': '5.1 Headset, 40 Hz-20 kHz, Wireless', 'quantidade': 999, 'preco': 49, '_id': 'k2sDlx1dQOYwsV12'}</msg>
<status status="PASS" starttime="20220624 16:06:36.927" endtime="20220624 16:06:36.927"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.927" endtime="20220624 16:06:36.927"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.927" endtime="20220624 16:06:36.928"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.927" endtime="20220624 16:06:36.928"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.928" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.928" endtime="20220624 16:06:36.928"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.928" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.928" endtime="20220624 16:06:36.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.928" endtime="20220624 16:06:36.929"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.929" endtime="20220624 16:06:36.929"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.929" endtime="20220624 16:06:36.929"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.926" endtime="20220624 16:06:36.929"/>
</iter>
<iter>
<var name="${i}">41</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.930" level="INFO">Length is 5</msg>
<msg timestamp="20220624 16:06:36.930" level="INFO">${quantidade_de_produtos} = 5</msg>
<status status="PASS" starttime="20220624 16:06:36.929" endtime="20220624 16:06:36.930"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.930" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:36.930" endtime="20220624 16:06:36.930"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.931" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 998, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:36.930" endtime="20220624 16:06:36.931"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.931" endtime="20220624 16:06:36.931"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.931" endtime="20220624 16:06:36.931"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.931" endtime="20220624 16:06:36.931"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.931" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.931" endtime="20220624 16:06:36.931"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.932" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.931" endtime="20220624 16:06:36.932"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.932" endtime="20220624 16:06:36.932"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.932" endtime="20220624 16:06:36.933"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.933" endtime="20220624 16:06:36.933"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.929" endtime="20220624 16:06:36.933"/>
</iter>
<iter>
<var name="${i}">42</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.933" level="INFO">Length is 4</msg>
<msg timestamp="20220624 16:06:36.933" level="INFO">${quantidade_de_produtos} = 4</msg>
<status status="PASS" starttime="20220624 16:06:36.933" endtime="20220624 16:06:36.933"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.934" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.933" endtime="20220624 16:06:36.934"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.934" level="INFO">${produto} = {'nome': 'Ergo Screen E-II', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm', 'quantidade': 998, 'preco': 285, '_id': 'rypUQQwSXjyk3c63'}</msg>
<status status="PASS" starttime="20220624 16:06:36.934" endtime="20220624 16:06:36.934"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.935" endtime="20220624 16:06:36.935"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.935" endtime="20220624 16:06:36.935"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.934" endtime="20220624 16:06:36.935"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.935" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.935" endtime="20220624 16:06:36.935"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.935" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.935" endtime="20220624 16:06:36.935"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.935" endtime="20220624 16:06:36.936"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.936" endtime="20220624 16:06:36.936"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.936" endtime="20220624 16:06:36.936"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.933" endtime="20220624 16:06:36.937"/>
</iter>
<iter>
<var name="${i}">43</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:36.937" level="INFO">Length is 3</msg>
<msg timestamp="20220624 16:06:36.937" level="INFO">${quantidade_de_produtos} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.937" endtime="20220624 16:06:36.937"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.938" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:36.937" endtime="20220624 16:06:36.938"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:36.938" level="INFO">${produto} = {'nome': 'Flat Watch HD37', 'descricao': '37-inch, 1366x768 Pixel, 16:9, HDTV ready', 'quantidade': 997, 'preco': 1199, '_id': 'WcqUhn61i2GkONUE'}</msg>
<status status="PASS" starttime="20220624 16:06:36.938" endtime="20220624 16:06:36.938"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:36.938" endtime="20220624 16:06:36.938"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:36.938" endtime="20220624 16:06:36.938"/>
</branch>
<status status="PASS" starttime="20220624 16:06:36.938" endtime="20220624 16:06:36.938"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:36.939" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:36.938" endtime="20220624 16:06:36.939"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.939" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:36.939" endtime="20220624 16:06:36.939"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.939" endtime="20220624 16:06:36.939"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.940" endtime="20220624 16:06:36.940"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:36.940" endtime="20220624 16:06:36.940"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.937" endtime="20220624 16:06:36.940"/>
</iter>
<status status="PASS" starttime="20220624 16:06:36.780" endtime="20220624 16:06:36.940"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:36.975" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quantidade': 2}, {'idProduto': 'MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:36.940" endtime="20220624 16:06:36.975"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:36.975" level="INFO">${carrinho} = {"produtos": [{"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 1}, {"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 1}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 2}, {"idProduto": "MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:36.975" endtime="20220624 16:06:36.975"/>
</kw>
<msg timestamp="20220624 16:06:36.975" level="INFO">${carrinho} = {"produtos": [{"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 1}, {"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 1}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 2}, {"idProduto": "MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:36.770" endtime="20220624 16:06:36.976"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:36.977" level="INFO">${nome} = James Murphy</msg>
<status status="PASS" starttime="20220624 16:06:36.976" endtime="20220624 16:06:36.977"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:36.977" level="INFO">${email} = timothyjones@example.org</msg>
<status status="PASS" starttime="20220624 16:06:36.977" endtime="20220624 16:06:36.977"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:36.977" level="INFO">${senha} = _9HFXa%wa2</msg>
<status status="PASS" starttime="20220624 16:06:36.977" endtime="20220624 16:06:36.977"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.978" level="INFO">&amp;{usuario} = { nome=James Murphy | email=timothyjones@example.org | password=_9HFXa%wa2 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:36.977" endtime="20220624 16:06:36.978"/>
</kw>
<msg timestamp="20220624 16:06:36.978" level="INFO">${usuario} = {'nome': 'James Murphy', 'email': 'timothyjones@example.org', 'password': '_9HFXa%wa2', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:36.976" endtime="20220624 16:06:36.978"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.978" endtime="20220624 16:06:36.978"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.984" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=James+Murphy&amp;email=timothyjones%40example.org&amp;password=_9HFXa%25wa2&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:36.984" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3ba0d20d-8fe7-4a7e-8c70-2bd29a770449', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "8MQcGzZ8jPM5xIoO"
} 
 </msg>
<msg timestamp="20220624 16:06:36.984" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.979" endtime="20220624 16:06:36.984"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.984" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.984" endtime="20220624 16:06:36.984"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.985" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '8MQcGzZ8jPM5xIoO'}</msg>
<status status="PASS" starttime="20220624 16:06:36.984" endtime="20220624 16:06:36.985"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.978" endtime="20220624 16:06:36.985"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.985" endtime="20220624 16:06:36.986"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.985" endtime="20220624 16:06:36.986"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.987" endtime="20220624 16:06:36.987"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.986" endtime="20220624 16:06:36.987"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.988" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:36.987" endtime="20220624 16:06:36.988"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.988" endtime="20220624 16:06:36.988"/>
</kw>
<msg timestamp="20220624 16:06:36.988" level="INFO">${usuario_valido} = {'nome': 'James Murphy', 'email': 'timothyjones@example.org', 'password': '_9HFXa%wa2', 'administrador': 'true', '_id': '8MQcGzZ8jPM5xIoO'}</msg>
<status status="PASS" starttime="20220624 16:06:36.976" endtime="20220624 16:06:36.988"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:36.989" level="INFO">Removed item with key 'nome' and value 'James Murphy'.</msg>
<msg timestamp="20220624 16:06:36.989" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:36.989" level="INFO">Removed item with key '_id' and value '8MQcGzZ8jPM5xIoO'.</msg>
<status status="PASS" starttime="20220624 16:06:36.988" endtime="20220624 16:06:36.989"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.989" endtime="20220624 16:06:36.990"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:36.992" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '54', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=timothyjones%40example.org&amp;password=_9HFXa%25wa2 
 </msg>
<msg timestamp="20220624 16:06:36.992" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3d18173a-20e0-4c59-a5f5-405e142fb65f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '287', 'Date': 'Fri, 24 Jun 2022 19:06:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.6i8kCJgL8xyXU4xSi5DhAJoyZak1mWBvtfSOPpnffzs"
} 
 </msg>
<msg timestamp="20220624 16:06:36.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.990" endtime="20220624 16:06:36.993"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.993" endtime="20220624 16:06:36.993"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.993" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA...</msg>
<status status="PASS" starttime="20220624 16:06:36.993" endtime="20220624 16:06:36.994"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.989" endtime="20220624 16:06:36.994"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:36.994" endtime="20220624 16:06:36.995"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.994" endtime="20220624 16:06:36.995"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:36.995" endtime="20220624 16:06:36.995"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.995" endtime="20220624 16:06:36.996"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:36.996" level="INFO">Length is 214</msg>
<status status="PASS" starttime="20220624 16:06:36.996" endtime="20220624 16:06:36.996"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.996" endtime="20220624 16:06:36.996"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:36.997" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.6i8kCJgL8xyXU...</msg>
<status status="PASS" starttime="20220624 16:06:36.996" endtime="20220624 16:06:36.997"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:36.997" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.6i8kCJgL8x...</msg>
<status status="PASS" starttime="20220624 16:06:36.997" endtime="20220624 16:06:36.997"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.976" endtime="20220624 16:06:36.997"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:36.998" endtime="20220624 16:06:36.998"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.997" endtime="20220624 16:06:36.998"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:36.998" endtime="20220624 16:06:36.999"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.323" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzU5NiwiZXhwIjoxNjU2MDk4MTk2fQ.6i8kCJgL8xyXU4xSi5DhAJoyZak1mWBvtfSOPpnffzs', 'Content-Type': 'application/json', 'Content-Length': '2302'} 
 body={"produtos": [{"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 1}, {"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 1}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 2}, {"idProduto": "MxCklG58QjmexNXH", "quantidade": 3}, {"idProduto": "F0Coyvmskz0RwoB9", "quantidade": 1}, {"idProduto": "3xTNa4i2sU41rPig", "quantidade": 3}, {"idProduto": "5DDmCSnTAl8gVAEh", "quantidade": 3}, {"idProduto": "nCwNCrDsvlkZa8Zw", "quantidade": 1}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 1}, {"idProduto": "tEyF4402lspTNQCb", "quantidade": 2}, {"idProduto": "RhTxSnY2aSwilmOB", "quantidade": 1}, {"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 3}, {"idProduto": "I7runwlH7VqYXvW4", "quantidade": 1}, {"idProduto": "GlZXPUNWt8islmer", "quantidade": 2}, {"idProduto": "3SZBJdzB87fc4ego", "quantidade": 3}, {"idProduto": "ZRsnfqcRCQFu3p3R", "quantidade": 3}, {"idProduto": "sBU6QOj9dSzUd9LE", "quantidade": 3}, {"idProduto": "Dw7bFasYs0n1UJui", "quantidade": 1}, {"idProduto": "QGdxANGY4iYthlwM", "quantidade": 1}, {"idProduto": "AiU2jNoXJmOd3bDF", "quantidade": 1}, {"idProduto": "ikLmmmBskYjtYPNo", "quantidade": 2}, {"idProduto": "OrMw3RBLx971CAKX", "quantidade": 2}, {"idProduto": "lhIaAKnyLoxLw9NE", "quantidade": 1}, {"idProduto": "b9EEy3P5l9HpD2pB", "quantidade": 2}, {"idProduto": "apuGRFtiCyX0bAGm", "quantidade": 1}, {"idProduto": "INAYXR7KbRCo2DKf", "quantidade": 1}, {"idProduto": "DgHgvcvchJSgovHR", "quantidade": 1}, {"idProduto": "CpaEbTwGcZnLduFY", "quantidade": 1}, {"idProduto": "hwpiuIHmqe8VNCzw", "quantidade": 1}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 3}, {"idProduto": "ahZuij7poMV9daxr", "quantidade": 1}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 2}, {"idProduto": "Dx9dkgTndSJTuL1W", "quantidade": 3}, {"idProduto": "7nxOYuxBPGlpKz5A", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 2}, {"idProduto": "ZRzOB3olwrZP7xEa", "quantidade": 2}, {"idProduto": "JwKn0Q6ngqhxLTEi", "quantidade": 2}, {"idProduto": "ijDJyCQXRG0zUEPV", "quantidade": 2}, {"idProduto": "e3Lai0wKA0BCZHBl", "quantidade": 2}, {"idProduto": "FCfDTwwdXcVf14BM", "quantidade": 3}, {"idProduto": "k2sDlx1dQOYwsV12", "quantidade": 2}, {"idProduto": "vF7r7dBj4AgssVDy", "quantidade": 2}, {"idProduto": "rypUQQwSXjyk3c63", "quantidade": 2}, {"idProduto": "WcqUhn61i2GkONUE", "quantidade": 3}]} 
 </msg>
<msg timestamp="20220624 16:06:37.323" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '090f64aa-5a3e-421a-8a9c-6c36534c9151', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "xe9vNhefR6SPhSVD"
} 
 </msg>
<msg timestamp="20220624 16:06:37.324" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:36.999" endtime="20220624 16:06:37.324"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.324" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.324" endtime="20220624 16:06:37.324"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.325" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'xe9vNhefR6SPhSVD'}</msg>
<status status="PASS" starttime="20220624 16:06:37.324" endtime="20220624 16:06:37.325"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.998" endtime="20220624 16:06:37.325"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.325" endtime="20220624 16:06:37.326"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.325" endtime="20220624 16:06:37.326"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:37.326" endtime="20220624 16:06:37.327"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.326" endtime="20220624 16:06:37.327"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:37.328" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:37.327" endtime="20220624 16:06:37.328"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.327" endtime="20220624 16:06:37.328"/>
</kw>
<status status="PASS" starttime="20220624 16:06:36.769" endtime="20220624 16:06:37.328"/>
</kw>
<kw name="Get Endpoint &quot;/carrinhos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.331" level="INFO">GET Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:37.332" level="INFO">GET Response : url=http://localhost:3000/carrinhos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '89ddc248-41ff-4915-b418-d7f345f5a307', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '16403', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 6,
    "carrinhos": [
        {
            "produtos": [
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 1,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 1,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 3,
                    "precoUnitario": 39
                }
            ],
            "precoTotal": 1618,
            "quantidadeTotal": 5,
            "idUsuario": "DLefGPaKTIzQFiWe",
            "_id": "AdZL86jRsrqcZTlb"
        },
        {
            "produtos": [
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 1,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "4adMxRTEPyeiqujT",
                    "quantidade": 2,
                    "precoUnitario": 12
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 1,
                    "precoUnitario": 853
                },
                {
                    "idProduto": "ijDJyCQXRG0zUEPV",
                    "quantidade": 3,
                    "precoUnitario": 956
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 2,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 2,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "sBU6QOj9dSzUd9LE",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 1,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "7nxOYuxBPGlpKz5A",
                    "quantidade": 1,
                    "precoUnitario": 59
                },
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 3,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 3,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "WcqUhn61i2GkONUE",
                    "quantidade": 1,
                    "precoUnitario": 1199
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 1,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "3xTNa4i2sU41rPig",
                    "quantidade": 3,
                    "precoUnitario": 250
                },
                {
                    "idProduto": "vF7r7dBj4AgssVDy",
                    "quantidade": 1,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 1,
                    "precoUnitario": 449
                }
            ],
            "precoTotal": 16737,
            "quantidadeTotal": 35,
            "idUsuario": "FUnQdj3qsR9i3G9P",
            "_id": "BBcF3EsTiZ9dJZT0"
        },
        {
            "produtos": [
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 3,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "UxBsipHgAI1f42Ny",
                    "quantidade": 2,
                    "precoUnitario": 89
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 1,
                    "precoUnitario": 549
                }
            ],
            "precoTotal": 3852,
            "quantidadeTotal": 9,
            "idUsuario": "AEn46TACx9jZAQW7",
            "_id": "BeAuCIRJqHLN9Mv3"
        },
        {
            "produtos": [
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                }
            ],
            "precoTotal": 1233,
            "quantidadeTotal": 4,
            "idUsuario": "vFu9DQD2dWkhyTVu",
            "_id": "RL0Po0tjnsVBHyAm"
        },
        {
            "produtos": [
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 2,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "nCwNCrDsvlkZa8Zw",
                    "quantidade": 1,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "7nxOYuxBPGlpKz5A",
                    "quantidade": 3,
                    "precoUnitario": 59
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 2,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 2,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 3,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "UxBsipHgAI1f42Ny",
                    "quantidade": 1,
                    "precoUnitario": 89
                },
                {
                    "idProduto": "WcqUhn61i2GkONUE",
                    "quantidade": 1,
                    "precoUnitario": 1199
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 3,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 3,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 3,
                    "precoUnitario": 853
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 2,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "4adMxRTEPyeiqujT",
                    "quantidade": 2,
                    "precoUnitario": 12
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 1,
                    "precoUnitario": 449
                }
            ],
            "precoTotal": 7882,
            "quantidadeTotal": 29,
            "idUsuario": "JP0tO5X9VusjK3IA",
            "_id": "Zw1JH3HhgvMz4DMC"
        },
        {
            "produtos": [
                {
                    "idProduto": "UxBsipHgAI1f42Ny",
                    "quantidade": 1,
                    "precoUnitario": 89
                },
                {
                    "idProduto": "qe7RSBXih8PwxPl8",
                    "quantidade": 1,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "ftkkuY0qIIn3MBPk",
                    "quantidade": 2,
                    "precoUnitario": 79
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 3,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "3xTNa4i2sU41rPig",
                    "quantidade": 3,
                    "precoUnitario": 250
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 3,
                    "precoUnitario": 853
   ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:37.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.329" endtime="20220624 16:06:37.332"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.332" endtime="20220624 16:06:37.332"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.334" level="INFO">${response_body} = {'quantidade': 6, 'carrinhos': [{'produtos': [{'idProduto': 'e3Lai0wKA0BCZHBl', 'quantidade': 1, 'precoUnitario': 989}, {'idProduto': 'OrMw3RBLx971CAKX', 'quantidade': 1, 'precoUnitario': 512}, {'idPr...</msg>
<status status="PASS" starttime="20220624 16:06:37.332" endtime="20220624 16:06:37.334"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.328" endtime="20220624 16:06:37.334"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.335" endtime="20220624 16:06:37.337"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.335" endtime="20220624 16:06:37.337"/>
</kw>
<kw name="Validar Quantidade De Carrinhos &gt; 0" library="resource" sourcename="Validar Quantidade De ${item} ${operador} ${quantidade}">
<kw name="Should Be True" library="BuiltIn">
<arg>${response_body['quantidade']} ${operador} ${quantidade}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.338" endtime="20220624 16:06:37.338"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.337" endtime="20220624 16:06:37.338"/>
</kw>
<tag>Buscar_Todos_Carrinhos</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>GET_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:36.768" endtime="20220624 16:06:37.339"/>
</test>
<test id="s1-s4-s1-t2" name="Cenario: Buscar Carrinho Cadastrado" line="17">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:37.342" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:37.342" endtime="20220624 16:06:37.342"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.341" endtime="20220624 16:06:37.342"/>
</kw>
<kw name="Cadastrar Novo Carrinho" library="carrinhos_keywords">
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.349" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:37.349" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9c96acdc-b29e-4577-ba6c-1b627be02195', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 996,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 993,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 992,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 992,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 993,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 998,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 997,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 994,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 993,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 997,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 996,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 994,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 996,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 997,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 993,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 998,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 998,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 997,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 993,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 999,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 991,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 998,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 993,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 998,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 994,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 994,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 996,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 997,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 998,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 991,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 989,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 994,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 997,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 993,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 994,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 997,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 997,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 996,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:37.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.344" endtime="20220624 16:06:37.349"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.349" endtime="20220624 16:06:37.350"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.351" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:37.350" endtime="20220624 16:06:37.351"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.343" endtime="20220624 16:06:37.351"/>
</kw>
<msg timestamp="20220624 16:06:37.351" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:37.343" endtime="20220624 16:06:37.351"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.352" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:37.351" endtime="20220624 16:06:37.352"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.353" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:37.353" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:37.352" endtime="20220624 16:06:37.353"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.353" level="INFO">${quantidade_aleatoria} = 36</msg>
<status status="PASS" starttime="20220624 16:06:37.353" endtime="20220624 16:06:37.353"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:37.354" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:37.353" endtime="20220624 16:06:37.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.354" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:37.354" endtime="20220624 16:06:37.354"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.354" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:37.355" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:37.354" endtime="20220624 16:06:37.355"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.355" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:37.355" endtime="20220624 16:06:37.355"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.356" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 993, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:37.355" endtime="20220624 16:06:37.356"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.356" endtime="20220624 16:06:37.356"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.356" endtime="20220624 16:06:37.356"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.356" endtime="20220624 16:06:37.356"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.356" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.356" endtime="20220624 16:06:37.356"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.357" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.357" endtime="20220624 16:06:37.357"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.357" endtime="20220624 16:06:37.358"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.358" endtime="20220624 16:06:37.358"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.358" endtime="20220624 16:06:37.358"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.354" endtime="20220624 16:06:37.358"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.359" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:37.359" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:37.359" endtime="20220624 16:06:37.359"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.359" level="INFO">${index_produto} = 40</msg>
<status status="PASS" starttime="20220624 16:06:37.359" endtime="20220624 16:06:37.359"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.360" level="INFO">${produto} = {'nome': 'Sound Booster', 'descricao': 'PC multimedia speakers - optimized for Blutooth/A2DP', 'quantidade': 998, 'preco': 45, '_id': 'qe7RSBXih8PwxPl8'}</msg>
<status status="PASS" starttime="20220624 16:06:37.360" endtime="20220624 16:06:37.360"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.360" endtime="20220624 16:06:37.360"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.360" endtime="20220624 16:06:37.360"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.360" endtime="20220624 16:06:37.360"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.361" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.360" endtime="20220624 16:06:37.361"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.361" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.361" endtime="20220624 16:06:37.361"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.361" endtime="20220624 16:06:37.362"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.362" endtime="20220624 16:06:37.362"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.362" endtime="20220624 16:06:37.362"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.358" endtime="20220624 16:06:37.362"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.363" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:37.363" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:37.362" endtime="20220624 16:06:37.363"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.363" level="INFO">${index_produto} = 38</msg>
<status status="PASS" starttime="20220624 16:06:37.363" endtime="20220624 16:06:37.363"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.364" level="INFO">${produto} = {'nome': 'Ergo Screen E-I', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm', 'quantidade': 998, 'preco': 230, '_id': 'lhIaAKnyLoxLw9NE'}</msg>
<status status="PASS" starttime="20220624 16:06:37.364" endtime="20220624 16:06:37.364"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.365" endtime="20220624 16:06:37.365"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.365" endtime="20220624 16:06:37.365"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.364" endtime="20220624 16:06:37.365"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.365" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.365" endtime="20220624 16:06:37.366"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.366" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.366" endtime="20220624 16:06:37.366"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.366" endtime="20220624 16:06:37.366"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.367" endtime="20220624 16:06:37.367"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.367" endtime="20220624 16:06:37.367"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.362" endtime="20220624 16:06:37.367"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.368" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:37.368" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:37.367" endtime="20220624 16:06:37.368"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.368" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:37.368" endtime="20220624 16:06:37.368"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.369" level="INFO">${produto} = {'nome': 'Astro Laptop 1516', 'descricao': 'Flexible Laptop with 2,5 GHz Quad Core, 15" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro', 'quantidade': 994, 'preco': 989, '_id': 'e3Lai0wKA0BCZHBl'}</msg>
<status status="PASS" starttime="20220624 16:06:37.368" endtime="20220624 16:06:37.369"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.369" endtime="20220624 16:06:37.369"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.369" endtime="20220624 16:06:37.369"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.369" endtime="20220624 16:06:37.369"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.370" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.370" endtime="20220624 16:06:37.370"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.370" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.370" endtime="20220624 16:06:37.370"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.370" endtime="20220624 16:06:37.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.371" endtime="20220624 16:06:37.371"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.371" endtime="20220624 16:06:37.371"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.367" endtime="20220624 16:06:37.371"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.372" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:37.372" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:37.371" endtime="20220624 16:06:37.372"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.372" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:37.372" endtime="20220624 16:06:37.372"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.373" level="INFO">${produto} = {'nome': 'Gaming Monster Pro', 'descricao': '3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8', 'quantidade': 998, 'preco': 1700, '_id': 'AiU2jNoXJmOd3bDF'...</msg>
<status status="PASS" starttime="20220624 16:06:37.373" endtime="20220624 16:06:37.373"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.373" endtime="20220624 16:06:37.373"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.373" endtime="20220624 16:06:37.373"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.373" endtime="20220624 16:06:37.374"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.374" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.374" endtime="20220624 16:06:37.374"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.374" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.374" endtime="20220624 16:06:37.374"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.374" endtime="20220624 16:06:37.375"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.375" endtime="20220624 16:06:37.375"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.375" endtime="20220624 16:06:37.376"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.371" endtime="20220624 16:06:37.376"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.376" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:37.376" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:37.376" endtime="20220624 16:06:37.376"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.377" level="INFO">${index_produto} = 36</msg>
<status status="PASS" starttime="20220624 16:06:37.376" endtime="20220624 16:06:37.377"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.377" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 997, 'preco': 39, '_id': 'nCwNCrDsvlkZa8Zw'}</msg>
<status status="PASS" starttime="20220624 16:06:37.377" endtime="20220624 16:06:37.377"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.377" endtime="20220624 16:06:37.377"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.377" endtime="20220624 16:06:37.377"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.377" endtime="20220624 16:06:37.377"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.378" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.378" endtime="20220624 16:06:37.378"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.378" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.378" endtime="20220624 16:06:37.378"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.378" endtime="20220624 16:06:37.379"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.379" endtime="20220624 16:06:37.379"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.379" endtime="20220624 16:06:37.379"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.376" endtime="20220624 16:06:37.379"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.380" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:37.380" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:37.380" endtime="20220624 16:06:37.380"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.381" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:37.380" endtime="20220624 16:06:37.382"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.382" level="INFO">${produto} = {'nome': 'Cordless Bluetooth Keyboard, english international', 'descricao': 'Cordless Bluetooth Keyboard with English keys', 'quantidade': 993, 'preco': 29, '_id': 'hwpiuIHmqe8VNCzw'}</msg>
<status status="PASS" starttime="20220624 16:06:37.382" endtime="20220624 16:06:37.382"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.383" endtime="20220624 16:06:37.383"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.383" endtime="20220624 16:06:37.383"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.382" endtime="20220624 16:06:37.383"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.384" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.383" endtime="20220624 16:06:37.384"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.384" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.384" endtime="20220624 16:06:37.384"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.384" endtime="20220624 16:06:37.385"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.385" endtime="20220624 16:06:37.386"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.386" endtime="20220624 16:06:37.386"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.380" endtime="20220624 16:06:37.386"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.387" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:37.387" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:37.386" endtime="20220624 16:06:37.387"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.388" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:37.387" endtime="20220624 16:06:37.388"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.389" level="INFO">${produto} = {'nome': 'Power Pro Player 80', 'descricao': 'MP3-Player with 80 GB SSD and Color Display, can play movies', 'quantidade': 999, 'preco': 299, '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:37.388" endtime="20220624 16:06:37.389"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.389" endtime="20220624 16:06:37.389"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.389" endtime="20220624 16:06:37.390"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.389" endtime="20220624 16:06:37.390"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.390" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.390" endtime="20220624 16:06:37.390"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.391" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.390" endtime="20220624 16:06:37.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.391" endtime="20220624 16:06:37.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.392" endtime="20220624 16:06:37.392"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.392" endtime="20220624 16:06:37.392"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.386" endtime="20220624 16:06:37.392"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.393" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:37.393" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:37.393" endtime="20220624 16:06:37.393"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.394" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:37.393" endtime="20220624 16:06:37.394"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.394" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 997, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:37.394" endtime="20220624 16:06:37.394"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.394" endtime="20220624 16:06:37.394"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.394" endtime="20220624 16:06:37.394"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.394" endtime="20220624 16:06:37.394"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.395" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.395" endtime="20220624 16:06:37.395"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.395" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.395" endtime="20220624 16:06:37.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.395" endtime="20220624 16:06:37.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.396" endtime="20220624 16:06:37.396"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.396" endtime="20220624 16:06:37.397"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.393" endtime="20220624 16:06:37.397"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.397" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:37.397" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:37.397" endtime="20220624 16:06:37.397"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.398" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:37.397" endtime="20220624 16:06:37.398"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.398" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 993, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:37.398" endtime="20220624 16:06:37.398"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.399" endtime="20220624 16:06:37.399"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.399" endtime="20220624 16:06:37.399"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.398" endtime="20220624 16:06:37.399"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.399" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.399" endtime="20220624 16:06:37.399"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.399" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.399" endtime="20220624 16:06:37.400"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.400" endtime="20220624 16:06:37.400"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.400" endtime="20220624 16:06:37.400"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.401" endtime="20220624 16:06:37.401"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.397" endtime="20220624 16:06:37.401"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.401" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:37.401" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:37.401" endtime="20220624 16:06:37.401"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.402" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:37.401" endtime="20220624 16:06:37.402"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.402" level="INFO">${produto} = {'nome': 'USB Stick', 'descricao': 'USB 2.0 High-Speed 64 GB', 'quantidade': 996, 'preco': 35, '_id': 'Dx9dkgTndSJTuL1W'}</msg>
<status status="PASS" starttime="20220624 16:06:37.402" endtime="20220624 16:06:37.402"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.403" endtime="20220624 16:06:37.403"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.403" endtime="20220624 16:06:37.403"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.402" endtime="20220624 16:06:37.403"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.403" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.403" endtime="20220624 16:06:37.403"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.403" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.403" endtime="20220624 16:06:37.403"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.403" endtime="20220624 16:06:37.404"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.404" endtime="20220624 16:06:37.404"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.404" endtime="20220624 16:06:37.405"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.401" endtime="20220624 16:06:37.405"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.405" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:37.405" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:37.405" endtime="20220624 16:06:37.405"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.406" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:37.405" endtime="20220624 16:06:37.406"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.406" level="INFO">${produto} = {'nome': 'Ergo Screen E-II', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm', 'quantidade': 996, 'preco': 285, '_id': 'rypUQQwSXjyk3c63'}</msg>
<status status="PASS" starttime="20220624 16:06:37.406" endtime="20220624 16:06:37.406"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.407" endtime="20220624 16:06:37.407"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.407" endtime="20220624 16:06:37.407"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.406" endtime="20220624 16:06:37.407"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.407" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.407" endtime="20220624 16:06:37.407"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.407" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.407" endtime="20220624 16:06:37.407"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.408" endtime="20220624 16:06:37.408"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.408" endtime="20220624 16:06:37.408"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.408" endtime="20220624 16:06:37.409"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.405" endtime="20220624 16:06:37.409"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.409" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:37.409" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:37.409" endtime="20220624 16:06:37.409"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.411" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:37.409" endtime="20220624 16:06:37.411"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.411" level="INFO">${produto} = {'nome': 'Silverberry', 'descricao': 'Our new multifunctional Handheld with phone function in silver', 'quantidade': 997, 'preco': 549, '_id': 'Dw7bFasYs0n1UJui'}</msg>
<status status="PASS" starttime="20220624 16:06:37.411" endtime="20220624 16:06:37.411"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.411" endtime="20220624 16:06:37.411"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.411" endtime="20220624 16:06:37.411"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.411" endtime="20220624 16:06:37.411"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.411" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.411" endtime="20220624 16:06:37.411"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.412" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.411" endtime="20220624 16:06:37.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.412" endtime="20220624 16:06:37.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.412" endtime="20220624 16:06:37.413"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.413" endtime="20220624 16:06:37.413"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.409" endtime="20220624 16:06:37.413"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.413" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:37.413" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:37.413" endtime="20220624 16:06:37.413"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.414" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:37.413" endtime="20220624 16:06:37.414"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.415" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 997, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:37.414" endtime="20220624 16:06:37.415"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.416" endtime="20220624 16:06:37.416"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.416" endtime="20220624 16:06:37.416"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.415" endtime="20220624 16:06:37.416"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.416" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.416" endtime="20220624 16:06:37.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.417" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.417" endtime="20220624 16:06:37.417"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.417" endtime="20220624 16:06:37.418"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.418" endtime="20220624 16:06:37.419"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.419" endtime="20220624 16:06:37.419"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.413" endtime="20220624 16:06:37.419"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.420" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:37.420" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:37.419" endtime="20220624 16:06:37.420"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.421" level="INFO">${index_produto} = 24</msg>
<status status="PASS" starttime="20220624 16:06:37.420" endtime="20220624 16:06:37.421"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.421" level="INFO">${produto} = {'nome': 'Smart Design', 'descricao': 'Complete package, 1 User, Image editing, processing', 'quantidade': 997, 'preco': 79, '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:37.421" endtime="20220624 16:06:37.421"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.422" endtime="20220624 16:06:37.422"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.422" endtime="20220624 16:06:37.422"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.421" endtime="20220624 16:06:37.422"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.422" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.422" endtime="20220624 16:06:37.422"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.423" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.423" endtime="20220624 16:06:37.423"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.423" endtime="20220624 16:06:37.423"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.424" endtime="20220624 16:06:37.424"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.424" endtime="20220624 16:06:37.425"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.419" endtime="20220624 16:06:37.425"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.425" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:37.425" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:37.425" endtime="20220624 16:06:37.425"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.426" level="INFO">${index_produto} = 21</msg>
<status status="PASS" starttime="20220624 16:06:37.425" endtime="20220624 16:06:37.426"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.427" level="INFO">${produto} = {'nome': 'Flyer', 'descricao': 'Flyer for our product palette', 'quantidade': 998, 'preco': 1, '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:37.426" endtime="20220624 16:06:37.427"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.427" endtime="20220624 16:06:37.427"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.427" endtime="20220624 16:06:37.427"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.427" endtime="20220624 16:06:37.427"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.427" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.427" endtime="20220624 16:06:37.427"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.428" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.428" endtime="20220624 16:06:37.428"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.428" endtime="20220624 16:06:37.428"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.429" endtime="20220624 16:06:37.429"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.429" endtime="20220624 16:06:37.429"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.425" endtime="20220624 16:06:37.429"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.430" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:37.430" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:37.429" endtime="20220624 16:06:37.430"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.430" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:37.430" endtime="20220624 16:06:37.430"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.431" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 994, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:37.430" endtime="20220624 16:06:37.431"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.431" endtime="20220624 16:06:37.431"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.431" endtime="20220624 16:06:37.431"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.431" endtime="20220624 16:06:37.431"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.431" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.431" endtime="20220624 16:06:37.432"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.432" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.432" endtime="20220624 16:06:37.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.432" endtime="20220624 16:06:37.433"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.433" endtime="20220624 16:06:37.433"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.433" endtime="20220624 16:06:37.433"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.429" endtime="20220624 16:06:37.433"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.434" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:37.434" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:37.433" endtime="20220624 16:06:37.434"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.435" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:37.434" endtime="20220624 16:06:37.435"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.435" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 994, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:37.435" endtime="20220624 16:06:37.435"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.436" endtime="20220624 16:06:37.436"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.436" endtime="20220624 16:06:37.436"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.435" endtime="20220624 16:06:37.436"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.436" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.436" endtime="20220624 16:06:37.436"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.436" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.436" endtime="20220624 16:06:37.436"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.437" endtime="20220624 16:06:37.437"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.437" endtime="20220624 16:06:37.437"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.438" endtime="20220624 16:06:37.438"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.433" endtime="20220624 16:06:37.438"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.438" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:37.438" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:37.438" endtime="20220624 16:06:37.438"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.439" level="INFO">${index_produto} = 20</msg>
<status status="PASS" starttime="20220624 16:06:37.438" endtime="20220624 16:06:37.439"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.439" level="INFO">${produto} = {'nome': 'Track Mouse', 'descricao': 'Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play', 'quantidade': 989, 'preco': 11, '_id': 'b9EEy3P5l9HpD2pB'}</msg>
<status status="PASS" starttime="20220624 16:06:37.439" endtime="20220624 16:06:37.439"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.440" endtime="20220624 16:06:37.440"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.440" endtime="20220624 16:06:37.440"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.439" endtime="20220624 16:06:37.440"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.440" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.440" endtime="20220624 16:06:37.440"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.440" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.440" endtime="20220624 16:06:37.440"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.440" endtime="20220624 16:06:37.441"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.441" endtime="20220624 16:06:37.441"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.441" endtime="20220624 16:06:37.453"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.438" endtime="20220624 16:06:37.453"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.453" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:37.453" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:37.453" endtime="20220624 16:06:37.453"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.454" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:37.453" endtime="20220624 16:06:37.454"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.454" level="INFO">${produto} = {'nome': 'Maxi Tablet', 'descricao': '10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 997, 'preco'...</msg>
<status status="PASS" starttime="20220624 16:06:37.454" endtime="20220624 16:06:37.454"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.455" endtime="20220624 16:06:37.455"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.455" endtime="20220624 16:06:37.455"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.454" endtime="20220624 16:06:37.455"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.455" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.455" endtime="20220624 16:06:37.455"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.455" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.455" endtime="20220624 16:06:37.455"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.456" endtime="20220624 16:06:37.456"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.456" endtime="20220624 16:06:37.456"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.456" endtime="20220624 16:06:37.457"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.453" endtime="20220624 16:06:37.457"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.457" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:37.457" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:37.457" endtime="20220624 16:06:37.457"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.458" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:37.457" endtime="20220624 16:06:37.458"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.458" level="INFO">${produto} = {'nome': 'Ergonomic Keyboard', 'descricao': 'Ergonomic USB Keyboard for Desktop, Plug&amp;Play', 'quantidade': 998, 'preco': 14, '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:37.458" endtime="20220624 16:06:37.458"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.459" endtime="20220624 16:06:37.459"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.459" endtime="20220624 16:06:37.459"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.459" endtime="20220624 16:06:37.459"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.459" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.459" endtime="20220624 16:06:37.459"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.460" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.459" endtime="20220624 16:06:37.460"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.460" endtime="20220624 16:06:37.460"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.461" endtime="20220624 16:06:37.461"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.461" endtime="20220624 16:06:37.461"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.457" endtime="20220624 16:06:37.461"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.461" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:37.461" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:37.461" endtime="20220624 16:06:37.461"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.462" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.462" endtime="20220624 16:06:37.462"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.462" level="INFO">${produto} = {'nome': 'Portable DVD Player with 9" LCD Monitor', 'descricao': '9" LCD Screen, storage holds up to 8 hours, 2 speakers included', 'quantidade': 992, 'preco': 853, '_id': '5DDmCSnTAl8gVAEh'}</msg>
<status status="PASS" starttime="20220624 16:06:37.462" endtime="20220624 16:06:37.462"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.463" endtime="20220624 16:06:37.463"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.463" endtime="20220624 16:06:37.463"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.463" endtime="20220624 16:06:37.463"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.463" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.463" endtime="20220624 16:06:37.463"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.464" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.464" endtime="20220624 16:06:37.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.464" endtime="20220624 16:06:37.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.464" endtime="20220624 16:06:37.465"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.465" endtime="20220624 16:06:37.465"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.461" endtime="20220624 16:06:37.465"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.465" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:37.465" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:37.465" endtime="20220624 16:06:37.465"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.466" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:37.466" endtime="20220624 16:06:37.466"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.467" level="INFO">${produto} = {'nome': 'Web cam reality', 'descricao': 'Color webcam, color, High-Speed USB', 'quantidade': 991, 'preco': 39, '_id': 'apuGRFtiCyX0bAGm'}</msg>
<status status="PASS" starttime="20220624 16:06:37.466" endtime="20220624 16:06:37.467"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.467" endtime="20220624 16:06:37.467"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.467" endtime="20220624 16:06:37.467"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.467" endtime="20220624 16:06:37.467"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.467" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.467" endtime="20220624 16:06:37.467"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.468" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.468" endtime="20220624 16:06:37.468"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.468" endtime="20220624 16:06:37.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.469" endtime="20220624 16:06:37.469"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.469" endtime="20220624 16:06:37.469"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.465" endtime="20220624 16:06:37.469"/>
</iter>
<iter>
<var name="${i}">23</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.470" level="INFO">Length is 23</msg>
<msg timestamp="20220624 16:06:37.470" level="INFO">${quantidade_de_produtos} = 23</msg>
<status status="PASS" starttime="20220624 16:06:37.470" endtime="20220624 16:06:37.470"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.470" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:37.470" endtime="20220624 16:06:37.470"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.471" level="INFO">${produto} = {'nome': 'Platinberry', 'descricao': 'Our new multifunctional Handheld with phone function in platinum', 'quantidade': 998, 'preco': 549, '_id': 'INAYXR7KbRCo2DKf'}</msg>
<status status="PASS" starttime="20220624 16:06:37.471" endtime="20220624 16:06:37.471"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.471" endtime="20220624 16:06:37.471"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.471" endtime="20220624 16:06:37.471"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.471" endtime="20220624 16:06:37.471"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.472" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.471" endtime="20220624 16:06:37.472"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.472" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.472" endtime="20220624 16:06:37.472"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.472" endtime="20220624 16:06:37.473"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.473" endtime="20220624 16:06:37.473"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.473" endtime="20220624 16:06:37.474"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.469" endtime="20220624 16:06:37.474"/>
</iter>
<iter>
<var name="${i}">24</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.474" level="INFO">Length is 22</msg>
<msg timestamp="20220624 16:06:37.474" level="INFO">${quantidade_de_produtos} = 22</msg>
<status status="PASS" starttime="20220624 16:06:37.474" endtime="20220624 16:06:37.474"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.475" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:37.474" endtime="20220624 16:06:37.475"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.476" level="INFO">${produto} = {'nome': 'Cepat Tablet 10.5', 'descricao': '10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 993, '...</msg>
<status status="PASS" starttime="20220624 16:06:37.475" endtime="20220624 16:06:37.476"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.476" endtime="20220624 16:06:37.476"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.476" endtime="20220624 16:06:37.476"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.476" endtime="20220624 16:06:37.476"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.477" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.476" endtime="20220624 16:06:37.477"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.477" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.477" endtime="20220624 16:06:37.477"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.477" endtime="20220624 16:06:37.477"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.478" endtime="20220624 16:06:37.478"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.478" endtime="20220624 16:06:37.478"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.474" endtime="20220624 16:06:37.478"/>
</iter>
<iter>
<var name="${i}">25</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.479" level="INFO">Length is 21</msg>
<msg timestamp="20220624 16:06:37.479" level="INFO">${quantidade_de_produtos} = 21</msg>
<status status="PASS" starttime="20220624 16:06:37.479" endtime="20220624 16:06:37.479"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.480" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:37.479" endtime="20220624 16:06:37.480"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.480" level="INFO">${produto} = {'nome': 'Cerdik Phone 7', 'descricao': '7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of ...</msg>
<status status="PASS" starttime="20220624 16:06:37.480" endtime="20220624 16:06:37.480"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.481" endtime="20220624 16:06:37.481"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.481" endtime="20220624 16:06:37.481"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.480" endtime="20220624 16:06:37.481"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.481" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.481" endtime="20220624 16:06:37.481"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.482" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.482" endtime="20220624 16:06:37.482"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.482" endtime="20220624 16:06:37.483"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.483" endtime="20220624 16:06:37.483"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.484" endtime="20220624 16:06:37.484"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.478" endtime="20220624 16:06:37.484"/>
</iter>
<iter>
<var name="${i}">26</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.484" level="INFO">Length is 20</msg>
<msg timestamp="20220624 16:06:37.484" level="INFO">${quantidade_de_produtos} = 20</msg>
<status status="PASS" starttime="20220624 16:06:37.484" endtime="20220624 16:06:37.484"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.485" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:37.484" endtime="20220624 16:06:37.485"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.485" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 991, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:37.485" endtime="20220624 16:06:37.485"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.486" endtime="20220624 16:06:37.486"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.486" endtime="20220624 16:06:37.486"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.485" endtime="20220624 16:06:37.486"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.486" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.486" endtime="20220624 16:06:37.486"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.486" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.486" endtime="20220624 16:06:37.486"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.486" endtime="20220624 16:06:37.487"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.487" endtime="20220624 16:06:37.487"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.487" endtime="20220624 16:06:37.488"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.484" endtime="20220624 16:06:37.488"/>
</iter>
<iter>
<var name="${i}">27</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.488" level="INFO">Length is 19</msg>
<msg timestamp="20220624 16:06:37.488" level="INFO">${quantidade_de_produtos} = 19</msg>
<status status="PASS" starttime="20220624 16:06:37.488" endtime="20220624 16:06:37.488"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.489" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:37.488" endtime="20220624 16:06:37.489"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.489" level="INFO">${produto} = {'nome': 'Notebook Basic 17', 'descricao': 'Notebook Basic 17 with 2,80 GHz quad core, 17" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 997, 'preco': 1249, '_id': 'ikLmmmBskYjtY...</msg>
<status status="PASS" starttime="20220624 16:06:37.489" endtime="20220624 16:06:37.489"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.490" endtime="20220624 16:06:37.490"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.490" endtime="20220624 16:06:37.490"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.490" endtime="20220624 16:06:37.490"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.491" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.490" endtime="20220624 16:06:37.491"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.491" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.491" endtime="20220624 16:06:37.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.491" endtime="20220624 16:06:37.492"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.492" endtime="20220624 16:06:37.492"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.492" endtime="20220624 16:06:37.492"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.488" endtime="20220624 16:06:37.492"/>
</iter>
<iter>
<var name="${i}">28</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.493" level="INFO">Length is 18</msg>
<msg timestamp="20220624 16:06:37.493" level="INFO">${quantidade_de_produtos} = 18</msg>
<status status="PASS" starttime="20220624 16:06:37.492" endtime="20220624 16:06:37.493"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.493" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:37.493" endtime="20220624 16:06:37.493"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.494" level="INFO">${produto} = {'nome': 'Notebook Basic 15', 'descricao': 'Notebook Basic 15 with 2,80 GHz quad core, 15" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 994, 'preco': 956, '_id': 'ijDJyCQXRG0zUE...</msg>
<status status="PASS" starttime="20220624 16:06:37.493" endtime="20220624 16:06:37.494"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.494" endtime="20220624 16:06:37.494"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.494" endtime="20220624 16:06:37.494"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.494" endtime="20220624 16:06:37.494"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.495" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.494" endtime="20220624 16:06:37.495"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.495" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.495" endtime="20220624 16:06:37.495"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.495" endtime="20220624 16:06:37.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.496" endtime="20220624 16:06:37.496"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.496" endtime="20220624 16:06:37.496"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.492" endtime="20220624 16:06:37.496"/>
</iter>
<iter>
<var name="${i}">29</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.497" level="INFO">Length is 17</msg>
<msg timestamp="20220624 16:06:37.497" level="INFO">${quantidade_de_produtos} = 17</msg>
<status status="PASS" starttime="20220624 16:06:37.497" endtime="20220624 16:06:37.497"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.498" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.497" endtime="20220624 16:06:37.498"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.498" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 993, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:37.498" endtime="20220624 16:06:37.498"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.499" endtime="20220624 16:06:37.499"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.499" endtime="20220624 16:06:37.499"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.498" endtime="20220624 16:06:37.499"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.499" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.499" endtime="20220624 16:06:37.499"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.499" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.499" endtime="20220624 16:06:37.499"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.501" endtime="20220624 16:06:37.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.501" endtime="20220624 16:06:37.501"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.501" endtime="20220624 16:06:37.501"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.496" endtime="20220624 16:06:37.501"/>
</iter>
<iter>
<var name="${i}">30</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.501" level="INFO">Length is 16</msg>
<msg timestamp="20220624 16:06:37.501" level="INFO">${quantidade_de_produtos} = 16</msg>
<status status="PASS" starttime="20220624 16:06:37.501" endtime="20220624 16:06:37.501"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.502" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.501" endtime="20220624 16:06:37.502"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.502" level="INFO">${produto} = {'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 993, 'preco': 250, '_id': '3xTNa4i2sU4...</msg>
<status status="PASS" starttime="20220624 16:06:37.502" endtime="20220624 16:06:37.502"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.503" endtime="20220624 16:06:37.503"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.503" endtime="20220624 16:06:37.503"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.502" endtime="20220624 16:06:37.503"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.503" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.503" endtime="20220624 16:06:37.503"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.503" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.503" endtime="20220624 16:06:37.503"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.503" endtime="20220624 16:06:37.504"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.504" endtime="20220624 16:06:37.504"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.505" endtime="20220624 16:06:37.505"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.501" endtime="20220624 16:06:37.505"/>
</iter>
<iter>
<var name="${i}">31</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.505" level="INFO">Length is 15</msg>
<msg timestamp="20220624 16:06:37.505" level="INFO">${quantidade_de_produtos} = 15</msg>
<status status="PASS" starttime="20220624 16:06:37.505" endtime="20220624 16:06:37.505"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.506" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:37.505" endtime="20220624 16:06:37.506"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.506" level="INFO">${produto} = {'nome': 'ITelO FlexTop I6300c', 'descricao': 'Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8', 'quantidade': 998, 'preco': 799, '_id': 'I7runwlH7VqYXvW4'}</msg>
<status status="PASS" starttime="20220624 16:06:37.506" endtime="20220624 16:06:37.506"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.507" endtime="20220624 16:06:37.507"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.507" endtime="20220624 16:06:37.507"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.506" endtime="20220624 16:06:37.507"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.507" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.507" endtime="20220624 16:06:37.507"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.508" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.507" endtime="20220624 16:06:37.508"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.508" endtime="20220624 16:06:37.509"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.509" endtime="20220624 16:06:37.509"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.509" endtime="20220624 16:06:37.509"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.505" endtime="20220624 16:06:37.509"/>
</iter>
<iter>
<var name="${i}">32</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.509" level="INFO">Length is 14</msg>
<msg timestamp="20220624 16:06:37.510" level="INFO">${quantidade_de_produtos} = 14</msg>
<status status="PASS" starttime="20220624 16:06:37.509" endtime="20220624 16:06:37.510"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.510" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:37.510" endtime="20220624 16:06:37.510"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.511" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 996, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:37.510" endtime="20220624 16:06:37.511"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.511" endtime="20220624 16:06:37.511"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.511" endtime="20220624 16:06:37.511"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.511" endtime="20220624 16:06:37.511"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.511" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.511" endtime="20220624 16:06:37.511"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.512" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.512" endtime="20220624 16:06:37.512"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.512" endtime="20220624 16:06:37.512"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.512" endtime="20220624 16:06:37.513"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.513" endtime="20220624 16:06:37.513"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.509" endtime="20220624 16:06:37.513"/>
</iter>
<iter>
<var name="${i}">33</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.513" level="INFO">Length is 13</msg>
<msg timestamp="20220624 16:06:37.513" level="INFO">${quantidade_de_produtos} = 13</msg>
<status status="PASS" starttime="20220624 16:06:37.513" endtime="20220624 16:06:37.513"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.514" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.513" endtime="20220624 16:06:37.514"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.514" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 992, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:37.514" endtime="20220624 16:06:37.514"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.515" endtime="20220624 16:06:37.515"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.515" endtime="20220624 16:06:37.515"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.515" endtime="20220624 16:06:37.515"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.515" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.515" endtime="20220624 16:06:37.515"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.516" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.516" endtime="20220624 16:06:37.516"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.516" endtime="20220624 16:06:37.517"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.517" endtime="20220624 16:06:37.517"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.517" endtime="20220624 16:06:37.518"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.513" endtime="20220624 16:06:37.518"/>
</iter>
<iter>
<var name="${i}">34</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.518" level="INFO">Length is 12</msg>
<msg timestamp="20220624 16:06:37.518" level="INFO">${quantidade_de_produtos} = 12</msg>
<status status="PASS" starttime="20220624 16:06:37.518" endtime="20220624 16:06:37.518"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.519" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:37.518" endtime="20220624 16:06:37.519"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.519" level="INFO">${produto} = {'nome': 'Smart Office', 'descricao': 'Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)', 'quantidade': 994, 'preco': 89, '_id': 'UxBsipHgAI1f42Ny'}</msg>
<status status="PASS" starttime="20220624 16:06:37.519" endtime="20220624 16:06:37.519"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.520" endtime="20220624 16:06:37.520"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.520" endtime="20220624 16:06:37.520"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.519" endtime="20220624 16:06:37.520"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.520" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.520" endtime="20220624 16:06:37.520"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.521" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.520" endtime="20220624 16:06:37.521"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.521" endtime="20220624 16:06:37.521"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.521" endtime="20220624 16:06:37.522"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.522" endtime="20220624 16:06:37.522"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.518" endtime="20220624 16:06:37.522"/>
</iter>
<iter>
<var name="${i}">35</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.522" level="INFO">Length is 11</msg>
<msg timestamp="20220624 16:06:37.522" level="INFO">${quantidade_de_produtos} = 11</msg>
<status status="PASS" starttime="20220624 16:06:37.522" endtime="20220624 16:06:37.522"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.523" level="INFO">${index_produto} = 9</msg>
<status status="PASS" starttime="20220624 16:06:37.523" endtime="20220624 16:06:37.523"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.524" level="INFO">${produto} = {'nome': 'Hurricane GX', 'descricao': 'Hurricane GX: PCI-E 691 GFLOPS game-optimized', 'quantidade': 996, 'preco': 101, '_id': 'k7RwzHsvxWkz58Nr'}</msg>
<status status="PASS" starttime="20220624 16:06:37.523" endtime="20220624 16:06:37.524"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.524" endtime="20220624 16:06:37.524"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.524" endtime="20220624 16:06:37.524"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.524" endtime="20220624 16:06:37.524"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.524" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.524" endtime="20220624 16:06:37.524"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.525" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.525" endtime="20220624 16:06:37.525"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.525" endtime="20220624 16:06:37.526"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.526" endtime="20220624 16:06:37.526"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.526" endtime="20220624 16:06:37.526"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.522" endtime="20220624 16:06:37.526"/>
</iter>
<status status="PASS" starttime="20220624 16:06:37.354" endtime="20220624 16:06:37.527"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:37.567" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'HQiQD1cNBI3UpUlB', 'quantidade': 3}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 3}, {'idProduto': 'lhIaAKnyLoxLw9NE', 'quantidade': 2}, {'idProduto': 'e3Lai0wKA0BCZHB...</msg>
<status status="PASS" starttime="20220624 16:06:37.527" endtime="20220624 16:06:37.567"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:37.567" level="INFO">${carrinho} = {"produtos": [{"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 3}, {"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 3}, {"idProduto": "lhIaAKnyLoxLw9NE", "quantidade": 2}, {"idProduto": "e3Lai0wKA0BCZHB...</msg>
<status status="PASS" starttime="20220624 16:06:37.567" endtime="20220624 16:06:37.567"/>
</kw>
<msg timestamp="20220624 16:06:37.568" level="INFO">${carrinho} = {"produtos": [{"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 3}, {"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 3}, {"idProduto": "lhIaAKnyLoxLw9NE", "quantidade": 2}, {"idProduto": "e3Lai0wKA0BCZHB...</msg>
<status status="PASS" starttime="20220624 16:06:37.343" endtime="20220624 16:06:37.568"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:37.569" level="INFO">${nome} = Jerry Douglas</msg>
<status status="PASS" starttime="20220624 16:06:37.569" endtime="20220624 16:06:37.569"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:37.569" level="INFO">${email} = lbaker@example.com</msg>
<status status="PASS" starttime="20220624 16:06:37.569" endtime="20220624 16:06:37.569"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:37.570" level="INFO">${senha} = (4p*MsLheL</msg>
<status status="PASS" starttime="20220624 16:06:37.569" endtime="20220624 16:06:37.570"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.570" level="INFO">&amp;{usuario} = { nome=Jerry Douglas | email=lbaker@example.com | password=(4p*MsLheL | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:37.570" endtime="20220624 16:06:37.570"/>
</kw>
<msg timestamp="20220624 16:06:37.570" level="INFO">${usuario} = {'nome': 'Jerry Douglas', 'email': 'lbaker@example.com', 'password': '(4p*MsLheL', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:37.568" endtime="20220624 16:06:37.570"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:37.571" endtime="20220624 16:06:37.571"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.578" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '88', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Jerry+Douglas&amp;email=lbaker%40example.com&amp;password=%284p%2AMsLheL&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:37.578" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9950e50b-b639-4b77-b0cd-c5af09ba3566', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "P6rPwvvXXleDNHtG"
} 
 </msg>
<msg timestamp="20220624 16:06:37.578" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.571" endtime="20220624 16:06:37.578"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.578" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.578" endtime="20220624 16:06:37.578"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.579" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'P6rPwvvXXleDNHtG'}</msg>
<status status="PASS" starttime="20220624 16:06:37.579" endtime="20220624 16:06:37.579"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.571" endtime="20220624 16:06:37.579"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.580" endtime="20220624 16:06:37.581"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.580" endtime="20220624 16:06:37.581"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:37.581" endtime="20220624 16:06:37.582"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.581" endtime="20220624 16:06:37.582"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:37.582" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:37.582" endtime="20220624 16:06:37.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.582" endtime="20220624 16:06:37.583"/>
</kw>
<msg timestamp="20220624 16:06:37.583" level="INFO">${usuario_valido} = {'nome': 'Jerry Douglas', 'email': 'lbaker@example.com', 'password': '(4p*MsLheL', 'administrador': 'true', '_id': 'P6rPwvvXXleDNHtG'}</msg>
<status status="PASS" starttime="20220624 16:06:37.568" endtime="20220624 16:06:37.583"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:37.583" level="INFO">Removed item with key 'nome' and value 'Jerry Douglas'.</msg>
<msg timestamp="20220624 16:06:37.583" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:37.583" level="INFO">Removed item with key '_id' and value 'P6rPwvvXXleDNHtG'.</msg>
<status status="PASS" starttime="20220624 16:06:37.583" endtime="20220624 16:06:37.583"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:37.584" endtime="20220624 16:06:37.584"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.587" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=lbaker%40example.com&amp;password=%284p%2AMsLheL 
 </msg>
<msg timestamp="20220624 16:06:37.587" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b642c006-61d6-40be-9eb0-e2e4077bffc6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '279', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxiYWtlckBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiKDRwKk1zTGhlTCIsImlhdCI6MTY1NjA5NzU5NywiZXhwIjoxNjU2MDk4MTk3fQ.WcVR4TfvwpneJeqnEsxQvMycHyWV823UlFkJyP2JUd4"
} 
 </msg>
<msg timestamp="20220624 16:06:37.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.584" endtime="20220624 16:06:37.587"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.587" endtime="20220624 16:06:37.588"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.588" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxiYWtlckBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiKDRwKk1zTGhlTCIsImlhdCI6MTY1NjA5NzU5Nyw...</msg>
<status status="PASS" starttime="20220624 16:06:37.588" endtime="20220624 16:06:37.588"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.583" endtime="20220624 16:06:37.588"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.589" endtime="20220624 16:06:37.590"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.589" endtime="20220624 16:06:37.590"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:37.590" endtime="20220624 16:06:37.591"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.590" endtime="20220624 16:06:37.591"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:37.592" level="INFO">Length is 206</msg>
<status status="PASS" starttime="20220624 16:06:37.591" endtime="20220624 16:06:37.592"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.591" endtime="20220624 16:06:37.592"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.593" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxiYWtlckBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiKDRwKk1zTGhlTCIsImlhdCI6MTY1NjA5NzU5NywiZXhwIjoxNjU2MDk4MTk3fQ.WcVR4TfvwpneJeqnEsxQv...</msg>
<status status="PASS" starttime="20220624 16:06:37.592" endtime="20220624 16:06:37.593"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.593" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxiYWtlckBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiKDRwKk1zTGhlTCIsImlhdCI6MTY1NjA5NzU5NywiZXhwIjoxNjU2MDk4MTk3fQ.WcVR4TfvwpneJeqnEs...</msg>
<status status="PASS" starttime="20220624 16:06:37.593" endtime="20220624 16:06:37.593"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.568" endtime="20220624 16:06:37.593"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.593" endtime="20220624 16:06:37.594"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.593" endtime="20220624 16:06:37.594"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:37.594" endtime="20220624 16:06:37.595"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.847" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxiYWtlckBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiKDRwKk1zTGhlTCIsImlhdCI6MTY1NjA5NzU5NywiZXhwIjoxNjU2MDk4MTk3fQ.WcVR4TfvwpneJeqnEsxQvMycHyWV823UlFkJyP2JUd4', 'Content-Type': 'application/json', 'Content-Length': '1886'} 
 body={"produtos": [{"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 3}, {"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 3}, {"idProduto": "lhIaAKnyLoxLw9NE", "quantidade": 2}, {"idProduto": "e3Lai0wKA0BCZHBl", "quantidade": 2}, {"idProduto": "AiU2jNoXJmOd3bDF", "quantidade": 1}, {"idProduto": "nCwNCrDsvlkZa8Zw", "quantidade": 2}, {"idProduto": "hwpiuIHmqe8VNCzw", "quantidade": 2}, {"idProduto": "O00lW65c7tzOcrGU", "quantidade": 1}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 1}, {"idProduto": "DgHgvcvchJSgovHR", "quantidade": 2}, {"idProduto": "Dx9dkgTndSJTuL1W", "quantidade": 1}, {"idProduto": "rypUQQwSXjyk3c63", "quantidade": 2}, {"idProduto": "Dw7bFasYs0n1UJui", "quantidade": 1}, {"idProduto": "JwKn0Q6ngqhxLTEi", "quantidade": 2}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 2}, {"idProduto": "ahZuij7poMV9daxr", "quantidade": 2}, {"idProduto": "CpaEbTwGcZnLduFY", "quantidade": 3}, {"idProduto": "F0Coyvmskz0RwoB9", "quantidade": 3}, {"idProduto": "b9EEy3P5l9HpD2pB", "quantidade": 1}, {"idProduto": "ZRzOB3olwrZP7xEa", "quantidade": 2}, {"idProduto": "QGdxANGY4iYthlwM", "quantidade": 3}, {"idProduto": "5DDmCSnTAl8gVAEh", "quantidade": 2}, {"idProduto": "apuGRFtiCyX0bAGm", "quantidade": 3}, {"idProduto": "INAYXR7KbRCo2DKf", "quantidade": 3}, {"idProduto": "MxCklG58QjmexNXH", "quantidade": 3}, {"idProduto": "sBU6QOj9dSzUd9LE", "quantidade": 3}, {"idProduto": "OrMw3RBLx971CAKX", "quantidade": 2}, {"idProduto": "ikLmmmBskYjtYPNo", "quantidade": 2}, {"idProduto": "ijDJyCQXRG0zUEPV", "quantidade": 3}, {"idProduto": "7nxOYuxBPGlpKz5A", "quantidade": 2}, {"idProduto": "3xTNa4i2sU41rPig", "quantidade": 2}, {"idProduto": "I7runwlH7VqYXvW4", "quantidade": 3}, {"idProduto": "vF7r7dBj4AgssVDy", "quantidade": 3}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 2}, {"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 2}, {"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 1}]} 
 </msg>
<msg timestamp="20220624 16:06:37.847" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ec418ad3-4bbf-4c1e-a4fe-fa8ea6e6a3f3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "SQyvdJgJIdBVxxrx"
} 
 </msg>
<msg timestamp="20220624 16:06:37.847" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.595" endtime="20220624 16:06:37.847"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.848" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.848" endtime="20220624 16:06:37.848"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.849" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'SQyvdJgJIdBVxxrx'}</msg>
<status status="PASS" starttime="20220624 16:06:37.848" endtime="20220624 16:06:37.849"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.594" endtime="20220624 16:06:37.849"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.849" endtime="20220624 16:06:37.850"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.849" endtime="20220624 16:06:37.850"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:37.850" endtime="20220624 16:06:37.851"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.850" endtime="20220624 16:06:37.851"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:37.852" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:37.851" endtime="20220624 16:06:37.852"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.851" endtime="20220624 16:06:37.852"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.343" endtime="20220624 16:06:37.852"/>
</kw>
<kw name="Pegar Carrinho Cadastrado" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="GET Endpoint &quot;carrinhos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.856" level="INFO">GET Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:37.856" level="INFO">GET Response : url=http://localhost:3000/carrinhos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '98c46b51-ca3b-4bf2-aafb-287faefcdb6b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '22648', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 7,
    "carrinhos": [
        {
            "produtos": [
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 1,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 1,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 3,
                    "precoUnitario": 39
                }
            ],
            "precoTotal": 1618,
            "quantidadeTotal": 5,
            "idUsuario": "DLefGPaKTIzQFiWe",
            "_id": "AdZL86jRsrqcZTlb"
        },
        {
            "produtos": [
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 1,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "4adMxRTEPyeiqujT",
                    "quantidade": 2,
                    "precoUnitario": 12
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 1,
                    "precoUnitario": 853
                },
                {
                    "idProduto": "ijDJyCQXRG0zUEPV",
                    "quantidade": 3,
                    "precoUnitario": 956
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 2,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 2,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "sBU6QOj9dSzUd9LE",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 1,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "7nxOYuxBPGlpKz5A",
                    "quantidade": 1,
                    "precoUnitario": 59
                },
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 3,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 3,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "WcqUhn61i2GkONUE",
                    "quantidade": 1,
                    "precoUnitario": 1199
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 1,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "3xTNa4i2sU41rPig",
                    "quantidade": 3,
                    "precoUnitario": 250
                },
                {
                    "idProduto": "vF7r7dBj4AgssVDy",
                    "quantidade": 1,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 1,
                    "precoUnitario": 449
                }
            ],
            "precoTotal": 16737,
            "quantidadeTotal": 35,
            "idUsuario": "FUnQdj3qsR9i3G9P",
            "_id": "BBcF3EsTiZ9dJZT0"
        },
        {
            "produtos": [
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 3,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "UxBsipHgAI1f42Ny",
                    "quantidade": 2,
                    "precoUnitario": 89
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 1,
                    "precoUnitario": 549
                }
            ],
            "precoTotal": 3852,
            "quantidadeTotal": 9,
            "idUsuario": "AEn46TACx9jZAQW7",
            "_id": "BeAuCIRJqHLN9Mv3"
        },
        {
            "produtos": [
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                }
            ],
            "precoTotal": 1233,
            "quantidadeTotal": 4,
            "idUsuario": "vFu9DQD2dWkhyTVu",
            "_id": "RL0Po0tjnsVBHyAm"
        },
        {
            "produtos": [
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 3,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "qe7RSBXih8PwxPl8",
                    "quantidade": 3,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "lhIaAKnyLoxLw9NE",
                    "quantidade": 2,
                    "precoUnitario": 230
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "AiU2jNoXJmOd3bDF",
                    "quantidade": 1,
                    "precoUnitario": 1700
                },
                {
                    "idProduto": "nCwNCrDsvlkZa8Zw",
                    "quantidade": 2,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 2,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "O00lW65c7tzOcrGU",
                    "quantidade": 1,
                    "precoUnitario": 299
                },
                {
                    "idProduto": "ArEArsbw9iH7meyd",
                    "quantidade": 1,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 2,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "Dx9dkgTndSJTuL1W",
                    "quantidade": 1,
                    "precoUnitario": 35
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 2,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "JwKn0Q6ngqhxLTEi",
                    "quantidade": 2,
                    "precoUnitario": 288
                },
                {
                    "idProduto": "ftkkuY0qIIn3MBPk",
                    "quantidade": 2,
                    "precoUnitario": 79
                },
                {
                    "idProduto": "ahZuij7poMV9daxr",
                    "quantidade": 2,
                    "precoUnitario": 1
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 3,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 3,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 1,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "ZRzOB3olwrZP7xEa",
                    "quantidade": 2,
                    "precoUnitario": 749
                },
                {
                    "idProduto": "QGdxANGY4iYthlwM",
                    "quantidade": 3,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 2,
                    "precoUnitario": 853
                },
                {
         ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:37.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.853" endtime="20220624 16:06:37.857"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.857" endtime="20220624 16:06:37.857"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.858" level="INFO">${response_body} = {'quantidade': 7, 'carrinhos': [{'produtos': [{'idProduto': 'e3Lai0wKA0BCZHBl', 'quantidade': 1, 'precoUnitario': 989}, {'idProduto': 'OrMw3RBLx971CAKX', 'quantidade': 1, 'precoUnitario': 512}, {'idPr...</msg>
<status status="PASS" starttime="20220624 16:06:37.857" endtime="20220624 16:06:37.858"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.853" endtime="20220624 16:06:37.858"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${carrinho}</arg>
<arg>${response_body['carrinhos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.860" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1, 'precoUnitario': 89}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1, 'precoUnitario': 45}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quant...</msg>
<status status="PASS" starttime="20220624 16:06:37.859" endtime="20220624 16:06:37.860"/>
</kw>
<msg timestamp="20220624 16:06:37.860" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1, 'precoUnitario': 89}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1, 'precoUnitario': 45}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quant...</msg>
<status status="PASS" starttime="20220624 16:06:37.852" endtime="20220624 16:06:37.860"/>
</kw>
<kw name="Get Endpoint &quot;/carrinhos?_id=${carrinho['_id']}&amp;precoTotal=${carrinho['precoTotal']}&amp;quantidadeTotal=${carrinho['quantidadeTotal']}&amp;idUsuario=${carrinho['idUsuario']}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.866" level="INFO">GET Request : url=http://localhost:3000/carrinhos?_id=xe9vNhefR6SPhSVD&amp;precoTotal=50658&amp;quantidadeTotal=82&amp;idUsuario=8MQcGzZ8jPM5xIoO 
 path_url=/carrinhos?_id=xe9vNhefR6SPhSVD&amp;precoTotal=50658&amp;quantidadeTotal=82&amp;idUsuario=8MQcGzZ8jPM5xIoO 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:37.866" level="INFO">GET Response : url=http://localhost:3000/carrinhos?_id=xe9vNhefR6SPhSVD&amp;precoTotal=50658&amp;quantidadeTotal=82&amp;idUsuario=8MQcGzZ8jPM5xIoO 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '470dfa55-1ae8-44b8-afc2-d9b0300d4ac4', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '7638', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 1,
    "carrinhos": [
        {
            "produtos": [
                {
                    "idProduto": "UxBsipHgAI1f42Ny",
                    "quantidade": 1,
                    "precoUnitario": 89
                },
                {
                    "idProduto": "qe7RSBXih8PwxPl8",
                    "quantidade": 1,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "ftkkuY0qIIn3MBPk",
                    "quantidade": 2,
                    "precoUnitario": 79
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 3,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "3xTNa4i2sU41rPig",
                    "quantidade": 3,
                    "precoUnitario": 250
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 3,
                    "precoUnitario": 853
                },
                {
                    "idProduto": "nCwNCrDsvlkZa8Zw",
                    "quantidade": 1,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 1,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "tEyF4402lspTNQCb",
                    "quantidade": 2,
                    "precoUnitario": 889
                },
                {
                    "idProduto": "RhTxSnY2aSwilmOB",
                    "quantidade": 1,
                    "precoUnitario": 2399
                },
                {
                    "idProduto": "k7RwzHsvxWkz58Nr",
                    "quantidade": 3,
                    "precoUnitario": 101
                },
                {
                    "idProduto": "I7runwlH7VqYXvW4",
                    "quantidade": 1,
                    "precoUnitario": 799
                },
                {
                    "idProduto": "GlZXPUNWt8islmer",
                    "quantidade": 2,
                    "precoUnitario": 8
                },
                {
                    "idProduto": "3SZBJdzB87fc4ego",
                    "quantidade": 3,
                    "precoUnitario": 5000
                },
                {
                    "idProduto": "ZRsnfqcRCQFu3p3R",
                    "quantidade": 3,
                    "precoUnitario": 299
                },
                {
                    "idProduto": "sBU6QOj9dSzUd9LE",
                    "quantidade": 3,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "QGdxANGY4iYthlwM",
                    "quantidade": 1,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "AiU2jNoXJmOd3bDF",
                    "quantidade": 1,
                    "precoUnitario": 1700
                },
                {
                    "idProduto": "ikLmmmBskYjtYPNo",
                    "quantidade": 2,
                    "precoUnitario": 1249
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 2,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "lhIaAKnyLoxLw9NE",
                    "quantidade": 1,
                    "precoUnitario": 230
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 2,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 1,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "INAYXR7KbRCo2DKf",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 1,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 1,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "4adMxRTEPyeiqujT",
                    "quantidade": 3,
                    "precoUnitario": 12
                },
                {
                    "idProduto": "ahZuij7poMV9daxr",
                    "quantidade": 1,
                    "precoUnitario": 1
                },
                {
                    "idProduto": "ArEArsbw9iH7meyd",
                    "quantidade": 2,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "Dx9dkgTndSJTuL1W",
                    "quantidade": 3,
                    "precoUnitario": 35
                },
                {
                    "idProduto": "7nxOYuxBPGlpKz5A",
                    "quantidade": 2,
                    "precoUnitario": 59
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 2,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "ZRzOB3olwrZP7xEa",
                    "quantidade": 2,
                    "precoUnitario": 749
                },
                {
                    "idProduto": "JwKn0Q6ngqhxLTEi",
                    "quantidade": 2,
                    "precoUnitario": 288
                },
                {
                    "idProduto": "ijDJyCQXRG0zUEPV",
                    "quantidade": 2,
                    "precoUnitario": 956
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "FCfDTwwdXcVf14BM",
                    "quantidade": 3,
                    "precoUnitario": 459
                },
                {
                    "idProduto": "k2sDlx1dQOYwsV12",
                    "quantidade": 2,
                    "precoUnitario": 49
                },
                {
                    "idProduto": "vF7r7dBj4AgssVDy",
                    "quantidade": 2,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 2,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "WcqUhn61i2GkONUE",
                    "quantidade": 3,
                    "precoUnitario": 1199
                }
            ],
            "precoTotal": 50658,
            "quantidadeTotal": 82,
            "idUsuario": "8MQcGzZ8jPM5xIoO",
            "_id": "xe9vNhefR6SPhSVD"
        }
    ]
} 
 </msg>
<msg timestamp="20220624 16:06:37.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.862" endtime="20220624 16:06:37.866"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.866" endtime="20220624 16:06:37.866"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.867" level="INFO">${response_body} = {'quantidade': 1, 'carrinhos': [{'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1, 'precoUnitario': 89}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1, 'precoUnitario': 45}, {'idProd...</msg>
<status status="PASS" starttime="20220624 16:06:37.866" endtime="20220624 16:06:37.867"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.860" endtime="20220624 16:06:37.867"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.868" endtime="20220624 16:06:37.869"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.868" endtime="20220624 16:06:37.869"/>
</kw>
<kw name="Validar Quantidade De Carrinhos &gt; 0" library="resource" sourcename="Validar Quantidade De ${item} ${operador} ${quantidade}">
<kw name="Should Be True" library="BuiltIn">
<arg>${response_body['quantidade']} ${operador} ${quantidade}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.870" endtime="20220624 16:06:37.870"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.869" endtime="20220624 16:06:37.870"/>
</kw>
<tag>Buscar_Carrinho_Cadastrado</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>GET_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:37.340" endtime="20220624 16:06:37.871"/>
</test>
<test id="s1-s4-s1-t3" name="Cenario: Tentar Buscar Carrinho Nao Cadastrado" line="26">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:37.873" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:37.873" endtime="20220624 16:06:37.873"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.873" endtime="20220624 16:06:37.873"/>
</kw>
<kw name="Get Endpoint &quot;/carrinhos/NaoCadastrado&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.880" level="INFO">GET Request : url=http://localhost:3000/carrinhos/NaoCadastrado 
 path_url=/carrinhos/NaoCadastrado 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:37.880" level="INFO">GET Response : url=http://localhost:3000/carrinhos/NaoCadastrado 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5df9d6af-3cf3-4b57-a75c-5854dd09925b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Carrinho não encontrado"
} 
 </msg>
<msg timestamp="20220624 16:06:37.880" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.874" endtime="20220624 16:06:37.880"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.880" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.880" endtime="20220624 16:06:37.880"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.881" level="INFO">${response_body} = {'message': 'Carrinho não encontrado'}</msg>
<status status="PASS" starttime="20220624 16:06:37.880" endtime="20220624 16:06:37.881"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.874" endtime="20220624 16:06:37.881"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:37.882" endtime="20220624 16:06:37.883"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.882" endtime="20220624 16:06:37.883"/>
</kw>
<kw name="Validar Mensagem &quot;Carrinho não encontrado&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:37.883" endtime="20220624 16:06:37.884"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.883" endtime="20220624 16:06:37.884"/>
</kw>
<tag>Buscar_Carrinho_Nao_Cadastrado</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>GET_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:37.872" endtime="20220624 16:06:37.885"/>
</test>
<doc>Arquivo De Requisições Do Tipo GET DA API Do EndPoint Carrinhos</doc>
<status status="PASS" starttime="20220624 16:06:36.756" endtime="20220624 16:06:37.886"/>
</suite>
<suite id="s1-s4-s2" name="02 carrinhos POST" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\04_carrinhos\02_carrinhos_POST.robot">
<test id="s1-s4-s2-t1" name="Cenario: Cadastrar Carrinho Valido Administrador" line="10">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:37.901" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:37.901" endtime="20220624 16:06:37.901"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.900" endtime="20220624 16:06:37.901"/>
</kw>
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:37.904" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:37.905" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4c15037c-0711-4c41-ba30-258a46e10ca0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 996,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 991,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 990,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 990,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 991,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 997,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 996,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 991,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 991,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 996,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 999,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 991,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 996,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 997,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 990,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 995,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 995,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 995,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 990,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 998,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 989,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 995,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 993,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 998,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 992,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 994,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 996,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 995,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 996,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 988,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 988,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 992,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 995,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 991,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 991,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 995,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 997,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 995,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:37.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.902" endtime="20220624 16:06:37.905"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:37.905" endtime="20220624 16:06:37.905"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.907" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:37.905" endtime="20220624 16:06:37.907"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.902" endtime="20220624 16:06:37.907"/>
</kw>
<msg timestamp="20220624 16:06:37.909" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:37.901" endtime="20220624 16:06:37.909"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:37.911" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:37.909" endtime="20220624 16:06:37.911"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.911" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:37.911" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:37.911" endtime="20220624 16:06:37.912"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.912" level="INFO">${quantidade_aleatoria} = 28</msg>
<status status="PASS" starttime="20220624 16:06:37.912" endtime="20220624 16:06:37.912"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:37.913" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:37.912" endtime="20220624 16:06:37.913"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.913" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:37.913" endtime="20220624 16:06:37.913"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.913" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:37.913" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:37.913" endtime="20220624 16:06:37.913"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.914" level="INFO">${index_produto} = 41</msg>
<status status="PASS" starttime="20220624 16:06:37.913" endtime="20220624 16:06:37.914"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.914" level="INFO">${produto} = {'nome': 'Sound Booster', 'descricao': 'PC multimedia speakers - optimized for Blutooth/A2DP', 'quantidade': 995, 'preco': 45, '_id': 'qe7RSBXih8PwxPl8'}</msg>
<status status="PASS" starttime="20220624 16:06:37.914" endtime="20220624 16:06:37.914"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.916" endtime="20220624 16:06:37.916"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.916" endtime="20220624 16:06:37.916"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.914" endtime="20220624 16:06:37.916"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.916" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.916" endtime="20220624 16:06:37.916"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.916" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.916" endtime="20220624 16:06:37.916"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.916" endtime="20220624 16:06:37.917"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.917" endtime="20220624 16:06:37.917"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.917" endtime="20220624 16:06:37.918"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.913" endtime="20220624 16:06:37.918"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.918" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:37.918" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:37.918" endtime="20220624 16:06:37.918"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.919" level="INFO">${index_produto} = 27</msg>
<status status="PASS" starttime="20220624 16:06:37.918" endtime="20220624 16:06:37.919"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.919" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 996, 'preco': 299, '_id': 'ZRsnfqcRCQFu3p3R'}</msg>
<status status="PASS" starttime="20220624 16:06:37.919" endtime="20220624 16:06:37.919"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.919" endtime="20220624 16:06:37.919"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.919" endtime="20220624 16:06:37.919"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.919" endtime="20220624 16:06:37.919"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.920" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.919" endtime="20220624 16:06:37.920"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.920" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.920" endtime="20220624 16:06:37.920"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.920" endtime="20220624 16:06:37.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.921" endtime="20220624 16:06:37.921"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.921" endtime="20220624 16:06:37.921"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.918" endtime="20220624 16:06:37.921"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.921" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:37.921" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:37.921" endtime="20220624 16:06:37.921"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.922" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:37.922" endtime="20220624 16:06:37.922"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.922" level="INFO">${produto} = {'nome': 'Gaming Monster', 'descricao': '3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8', 'quantidade': 993, 'preco': 1200, '_id': 'RIriCXGV4GxADZHJ'}</msg>
<status status="PASS" starttime="20220624 16:06:37.922" endtime="20220624 16:06:37.922"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.923" endtime="20220624 16:06:37.923"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.923" endtime="20220624 16:06:37.923"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.922" endtime="20220624 16:06:37.923"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.923" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.923" endtime="20220624 16:06:37.923"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.923" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.923" endtime="20220624 16:06:37.923"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.924" endtime="20220624 16:06:37.924"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.924" endtime="20220624 16:06:37.925"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.925" endtime="20220624 16:06:37.925"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.921" endtime="20220624 16:06:37.925"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.925" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:37.925" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:37.925" endtime="20220624 16:06:37.925"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.926" level="INFO">${index_produto} = 9</msg>
<status status="PASS" starttime="20220624 16:06:37.925" endtime="20220624 16:06:37.926"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.927" level="INFO">${produto} = {'nome': 'Silverberry', 'descricao': 'Our new multifunctional Handheld with phone function in silver', 'quantidade': 996, 'preco': 549, '_id': 'Dw7bFasYs0n1UJui'}</msg>
<status status="PASS" starttime="20220624 16:06:37.926" endtime="20220624 16:06:37.927"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.927" endtime="20220624 16:06:37.927"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.927" endtime="20220624 16:06:37.927"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.927" endtime="20220624 16:06:37.927"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.928" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.927" endtime="20220624 16:06:37.928"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.928" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.928" endtime="20220624 16:06:37.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.928" endtime="20220624 16:06:37.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.929" endtime="20220624 16:06:37.929"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.929" endtime="20220624 16:06:37.929"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.925" endtime="20220624 16:06:37.929"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.929" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:37.930" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:37.929" endtime="20220624 16:06:37.930"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.930" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:37.930" endtime="20220624 16:06:37.930"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.931" level="INFO">${produto} = {'nome': 'Gaming Monster Pro', 'descricao': '3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8', 'quantidade': 997, 'preco': 1700, '_id': 'AiU2jNoXJmOd3bDF'...</msg>
<status status="PASS" starttime="20220624 16:06:37.930" endtime="20220624 16:06:37.931"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.931" endtime="20220624 16:06:37.931"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.931" endtime="20220624 16:06:37.931"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.931" endtime="20220624 16:06:37.931"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.931" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.931" endtime="20220624 16:06:37.931"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.932" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.931" endtime="20220624 16:06:37.932"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.932" endtime="20220624 16:06:37.932"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.932" endtime="20220624 16:06:37.932"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.934" endtime="20220624 16:06:37.934"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.929" endtime="20220624 16:06:37.934"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.934" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:37.934" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:37.934" endtime="20220624 16:06:37.934"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.935" level="INFO">${index_produto} = 20</msg>
<status status="PASS" starttime="20220624 16:06:37.934" endtime="20220624 16:06:37.935"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.935" level="INFO">${produto} = {'nome': 'Ergonomic Keyboard', 'descricao': 'Ergonomic USB Keyboard for Desktop, Plug&amp;Play', 'quantidade': 995, 'preco': 14, '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:37.935" endtime="20220624 16:06:37.935"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.935" endtime="20220624 16:06:37.935"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.935" endtime="20220624 16:06:37.935"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.935" endtime="20220624 16:06:37.935"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.936" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.936" endtime="20220624 16:06:37.936"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.936" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.936" endtime="20220624 16:06:37.936"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.936" endtime="20220624 16:06:37.937"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.937" endtime="20220624 16:06:37.937"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.937" endtime="20220624 16:06:37.937"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.934" endtime="20220624 16:06:37.937"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.938" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:37.938" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:37.937" endtime="20220624 16:06:37.938"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.938" level="INFO">${index_produto} = 24</msg>
<status status="PASS" starttime="20220624 16:06:37.938" endtime="20220624 16:06:37.938"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.939" level="INFO">${produto} = {'nome': 'Flyer', 'descricao': 'Flyer for our product palette', 'quantidade': 996, 'preco': 1, '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:37.938" endtime="20220624 16:06:37.939"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.939" endtime="20220624 16:06:37.939"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.939" endtime="20220624 16:06:37.939"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.939" endtime="20220624 16:06:37.939"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.939" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.939" endtime="20220624 16:06:37.939"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.939" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.939" endtime="20220624 16:06:37.939"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.939" endtime="20220624 16:06:37.940"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.940" endtime="20220624 16:06:37.940"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.940" endtime="20220624 16:06:37.940"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.937" endtime="20220624 16:06:37.940"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.941" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:37.941" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:37.941" endtime="20220624 16:06:37.941"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.941" level="INFO">${index_produto} = 30</msg>
<status status="PASS" starttime="20220624 16:06:37.941" endtime="20220624 16:06:37.943"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.943" level="INFO">${produto} = {'nome': 'Notebook Basic 17', 'descricao': 'Notebook Basic 17 with 2,80 GHz quad core, 17" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 995, 'preco': 1249, '_id': 'ikLmmmBskYjtY...</msg>
<status status="PASS" starttime="20220624 16:06:37.943" endtime="20220624 16:06:37.943"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.943" endtime="20220624 16:06:37.943"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.943" endtime="20220624 16:06:37.943"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.943" endtime="20220624 16:06:37.943"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.944" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.943" endtime="20220624 16:06:37.944"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.944" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.944" endtime="20220624 16:06:37.944"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.944" endtime="20220624 16:06:37.944"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.945" endtime="20220624 16:06:37.945"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.945" endtime="20220624 16:06:37.945"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.940" endtime="20220624 16:06:37.945"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.945" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:37.945" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:37.945" endtime="20220624 16:06:37.945"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.946" level="INFO">${index_produto} = 34</msg>
<status status="PASS" starttime="20220624 16:06:37.946" endtime="20220624 16:06:37.946"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.947" level="INFO">${produto} = {'nome': 'Ergo Screen E-II', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm', 'quantidade': 994, 'preco': 285, '_id': 'rypUQQwSXjyk3c63'}</msg>
<status status="PASS" starttime="20220624 16:06:37.946" endtime="20220624 16:06:37.947"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.947" endtime="20220624 16:06:37.947"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.947" endtime="20220624 16:06:37.947"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.947" endtime="20220624 16:06:37.947"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.947" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.947" endtime="20220624 16:06:37.947"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.948" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.947" endtime="20220624 16:06:37.948"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.948" endtime="20220624 16:06:37.948"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.948" endtime="20220624 16:06:37.949"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.949" endtime="20220624 16:06:37.949"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.945" endtime="20220624 16:06:37.949"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.949" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:37.949" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:37.949" endtime="20220624 16:06:37.949"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.950" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:37.949" endtime="20220624 16:06:37.950"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.950" level="INFO">${produto} = {'nome': 'ITelO Vault Net', 'descricao': 'Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications', 'quantidade': 996, 'preco': 459, '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:37.950" endtime="20220624 16:06:37.950"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.951" endtime="20220624 16:06:37.951"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.950" endtime="20220624 16:06:37.951"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.950" endtime="20220624 16:06:37.951"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.951" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.951" endtime="20220624 16:06:37.951"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.951" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.951" endtime="20220624 16:06:37.951"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.951" endtime="20220624 16:06:37.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.952" endtime="20220624 16:06:37.952"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.952" endtime="20220624 16:06:37.952"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.949" endtime="20220624 16:06:37.952"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.953" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:37.953" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:37.952" endtime="20220624 16:06:37.953"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.953" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:37.953" endtime="20220624 16:06:37.953"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.954" level="INFO">${produto} = {'nome': 'ITelO FlexTop I6300c', 'descricao': 'Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8', 'quantidade': 995, 'preco': 799, '_id': 'I7runwlH7VqYXvW4'}</msg>
<status status="PASS" starttime="20220624 16:06:37.953" endtime="20220624 16:06:37.954"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.954" endtime="20220624 16:06:37.954"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.954" endtime="20220624 16:06:37.954"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.954" endtime="20220624 16:06:37.954"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.954" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.954" endtime="20220624 16:06:37.954"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.954" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.954" endtime="20220624 16:06:37.954"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.954" endtime="20220624 16:06:37.956"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.956" endtime="20220624 16:06:37.956"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.956" endtime="20220624 16:06:37.956"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.952" endtime="20220624 16:06:37.956"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.956" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:37.956" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:37.956" endtime="20220624 16:06:37.956"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.956" level="INFO">${index_produto} = 30</msg>
<status status="PASS" starttime="20220624 16:06:37.956" endtime="20220624 16:06:37.956"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.957" level="INFO">${produto} = {'nome': 'Ergo Screen E-I', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm', 'quantidade': 996, 'preco': 230, '_id': 'lhIaAKnyLoxLw9NE'}</msg>
<status status="PASS" starttime="20220624 16:06:37.956" endtime="20220624 16:06:37.957"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.957" endtime="20220624 16:06:37.957"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.957" endtime="20220624 16:06:37.957"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.957" endtime="20220624 16:06:37.957"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.957" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.957" endtime="20220624 16:06:37.957"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.959" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.959" endtime="20220624 16:06:37.959"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.959" endtime="20220624 16:06:37.959"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.959" endtime="20220624 16:06:37.960"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.960" endtime="20220624 16:06:37.960"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.956" endtime="20220624 16:06:37.960"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.960" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:37.960" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:37.960" endtime="20220624 16:06:37.960"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.961" level="INFO">${index_produto} = 22</msg>
<status status="PASS" starttime="20220624 16:06:37.960" endtime="20220624 16:06:37.961"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.961" level="INFO">${produto} = {'nome': 'Web cam reality', 'descricao': 'Color webcam, color, High-Speed USB', 'quantidade': 988, 'preco': 39, '_id': 'apuGRFtiCyX0bAGm'}</msg>
<status status="PASS" starttime="20220624 16:06:37.961" endtime="20220624 16:06:37.961"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.962" endtime="20220624 16:06:37.962"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.962" endtime="20220624 16:06:37.962"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.961" endtime="20220624 16:06:37.962"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.962" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.962" endtime="20220624 16:06:37.962"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.963" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.962" endtime="20220624 16:06:37.963"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.963" endtime="20220624 16:06:37.963"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.963" endtime="20220624 16:06:37.963"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.964" endtime="20220624 16:06:37.964"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.960" endtime="20220624 16:06:37.964"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.964" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:37.964" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:37.964" endtime="20220624 16:06:37.964"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.965" level="INFO">${index_produto} = 26</msg>
<status status="PASS" starttime="20220624 16:06:37.964" endtime="20220624 16:06:37.965"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.965" level="INFO">${produto} = {'nome': 'Notebook Basic 15', 'descricao': 'Notebook Basic 15 with 2,80 GHz quad core, 15" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 991, 'preco': 956, '_id': 'ijDJyCQXRG0zUE...</msg>
<status status="PASS" starttime="20220624 16:06:37.965" endtime="20220624 16:06:37.965"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.966" endtime="20220624 16:06:37.966"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.966" endtime="20220624 16:06:37.966"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.965" endtime="20220624 16:06:37.966"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.966" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:37.966" endtime="20220624 16:06:37.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.966" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.966" endtime="20220624 16:06:37.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.966" endtime="20220624 16:06:37.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.967" endtime="20220624 16:06:37.967"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.967" endtime="20220624 16:06:37.967"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.964" endtime="20220624 16:06:37.967"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.968" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:37.968" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:37.967" endtime="20220624 16:06:37.968"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.968" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:37.968" endtime="20220624 16:06:37.968"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.969" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 995, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:37.968" endtime="20220624 16:06:37.969"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.969" endtime="20220624 16:06:37.969"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.969" endtime="20220624 16:06:37.969"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.969" endtime="20220624 16:06:37.969"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.969" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.969" endtime="20220624 16:06:37.969"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.970" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.970" endtime="20220624 16:06:37.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.970" endtime="20220624 16:06:37.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.970" endtime="20220624 16:06:37.970"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.970" endtime="20220624 16:06:37.970"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.967" endtime="20220624 16:06:37.970"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.970" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:37.970" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:37.970" endtime="20220624 16:06:37.970"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.971" level="INFO">${index_produto} = 24</msg>
<status status="PASS" starttime="20220624 16:06:37.970" endtime="20220624 16:06:37.971"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.971" level="INFO">${produto} = {'nome': 'Cordless Bluetooth Keyboard, english international', 'descricao': 'Cordless Bluetooth Keyboard with English keys', 'quantidade': 991, 'preco': 29, '_id': 'hwpiuIHmqe8VNCzw'}</msg>
<status status="PASS" starttime="20220624 16:06:37.971" endtime="20220624 16:06:37.971"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.972" endtime="20220624 16:06:37.972"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.972" endtime="20220624 16:06:37.972"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.971" endtime="20220624 16:06:37.972"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.972" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.972" endtime="20220624 16:06:37.972"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.972" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.972" endtime="20220624 16:06:37.972"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.973" endtime="20220624 16:06:37.973"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.973" endtime="20220624 16:06:37.973"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.973" endtime="20220624 16:06:37.975"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.970" endtime="20220624 16:06:37.975"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.975" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:37.975" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:37.975" endtime="20220624 16:06:37.975"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.976" level="INFO">${index_produto} = 24</msg>
<status status="PASS" starttime="20220624 16:06:37.975" endtime="20220624 16:06:37.976"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.976" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1 Wireless', 'descricao': '5.1 Headset, 40 Hz-20 kHz, Wireless', 'quantidade': 997, 'preco': 49, '_id': 'k2sDlx1dQOYwsV12'}</msg>
<status status="PASS" starttime="20220624 16:06:37.976" endtime="20220624 16:06:37.977"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.977" endtime="20220624 16:06:37.977"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.977" endtime="20220624 16:06:37.977"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.977" endtime="20220624 16:06:37.977"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.977" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.977" endtime="20220624 16:06:37.977"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.978" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.977" endtime="20220624 16:06:37.978"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.978" endtime="20220624 16:06:37.978"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.978" endtime="20220624 16:06:37.978"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.979" endtime="20220624 16:06:37.979"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.975" endtime="20220624 16:06:37.979"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.979" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:37.979" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:37.979" endtime="20220624 16:06:37.979"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.980" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:37.979" endtime="20220624 16:06:37.980"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.980" level="INFO">${produto} = {'nome': 'PC Lock', 'descricao': 'Robust 3m anti-burglary protection for your laptop computer', 'quantidade': 997, 'preco': 8, '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:37.980" endtime="20220624 16:06:37.980"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.981" endtime="20220624 16:06:37.981"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.981" endtime="20220624 16:06:37.981"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.980" endtime="20220624 16:06:37.981"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.981" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:37.981" endtime="20220624 16:06:37.981"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.981" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.981" endtime="20220624 16:06:37.981"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.981" endtime="20220624 16:06:37.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.982" endtime="20220624 16:06:37.982"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.982" endtime="20220624 16:06:37.982"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.979" endtime="20220624 16:06:37.982"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.983" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:37.983" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:37.983" endtime="20220624 16:06:37.983"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.983" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:37.983" endtime="20220624 16:06:37.983"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.984" level="INFO">${produto} = {'nome': 'Power Pro Player 80', 'descricao': 'MP3-Player with 80 GB SSD and Color Display, can play movies', 'quantidade': 998, 'preco': 299, '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:37.984" endtime="20220624 16:06:37.984"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.984" endtime="20220624 16:06:37.984"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.984" endtime="20220624 16:06:37.984"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.984" endtime="20220624 16:06:37.984"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.984" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.984" endtime="20220624 16:06:37.985"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.985" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.985" endtime="20220624 16:06:37.985"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.985" endtime="20220624 16:06:37.986"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.986" endtime="20220624 16:06:37.986"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.986" endtime="20220624 16:06:37.986"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.982" endtime="20220624 16:06:37.986"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.987" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:37.987" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:37.986" endtime="20220624 16:06:37.987"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.987" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:37.987" endtime="20220624 16:06:37.987"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.988" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 991, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:37.987" endtime="20220624 16:06:37.988"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.988" endtime="20220624 16:06:37.988"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.988" endtime="20220624 16:06:37.988"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.988" endtime="20220624 16:06:37.988"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.988" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.988" endtime="20220624 16:06:37.989"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.989" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.989" endtime="20220624 16:06:37.989"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.989" endtime="20220624 16:06:37.989"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.989" endtime="20220624 16:06:37.989"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.989" endtime="20220624 16:06:37.989"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.986" endtime="20220624 16:06:37.989"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.989" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:37.989" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:37.989" endtime="20220624 16:06:37.989"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.991" level="INFO">${index_produto} = 25</msg>
<status status="PASS" starttime="20220624 16:06:37.989" endtime="20220624 16:06:37.991"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.991" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 993, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:37.991" endtime="20220624 16:06:37.991"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.992" endtime="20220624 16:06:37.992"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.992" endtime="20220624 16:06:37.992"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.992" endtime="20220624 16:06:37.992"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.992" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.992" endtime="20220624 16:06:37.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.993" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.992" endtime="20220624 16:06:37.993"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.993" endtime="20220624 16:06:37.993"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.993" endtime="20220624 16:06:37.993"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.994" endtime="20220624 16:06:37.994"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.989" endtime="20220624 16:06:37.994"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.994" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:37.994" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:37.994" endtime="20220624 16:06:37.994"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.995" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:37.994" endtime="20220624 16:06:37.995"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.995" level="INFO">${produto} = {'nome': 'Smart Office', 'descricao': 'Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)', 'quantidade': 992, 'preco': 89, '_id': 'UxBsipHgAI1f42Ny'}</msg>
<status status="PASS" starttime="20220624 16:06:37.995" endtime="20220624 16:06:37.995"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.996" endtime="20220624 16:06:37.996"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.995" endtime="20220624 16:06:37.996"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.995" endtime="20220624 16:06:37.996"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.996" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.996" endtime="20220624 16:06:37.996"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:37.996" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:37.996" endtime="20220624 16:06:37.996"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.996" endtime="20220624 16:06:37.997"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:37.997" endtime="20220624 16:06:37.997"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:37.997" endtime="20220624 16:06:37.997"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.994" endtime="20220624 16:06:37.997"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:37.998" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:37.998" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:37.998" endtime="20220624 16:06:37.998"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.998" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:37.998" endtime="20220624 16:06:37.998"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:37.999" level="INFO">${produto} = {'nome': 'Cepat Tablet 10.5', 'descricao': '10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 990, '...</msg>
<status status="PASS" starttime="20220624 16:06:37.998" endtime="20220624 16:06:37.999"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:37.999" endtime="20220624 16:06:37.999"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:37.999" endtime="20220624 16:06:37.999"/>
</branch>
<status status="PASS" starttime="20220624 16:06:37.999" endtime="20220624 16:06:37.999"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:37.999" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:37.999" endtime="20220624 16:06:37.999"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.000" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.000" endtime="20220624 16:06:38.000"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.000" endtime="20220624 16:06:38.000"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.000" endtime="20220624 16:06:38.001"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.001" endtime="20220624 16:06:38.001"/>
</kw>
<status status="PASS" starttime="20220624 16:06:37.997" endtime="20220624 16:06:38.001"/>
</iter>
<iter>
<var name="${i}">23</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.001" level="INFO">Length is 23</msg>
<msg timestamp="20220624 16:06:38.001" level="INFO">${quantidade_de_produtos} = 23</msg>
<status status="PASS" starttime="20220624 16:06:38.001" endtime="20220624 16:06:38.001"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.001" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:38.001" endtime="20220624 16:06:38.001"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.003" level="INFO">${produto} = {'nome': 'Smartphone Beta', 'descricao': '5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support', 'quantidade': 999, 'preco': 30, '_id': 'EnPI6sCHtD7UoWQQ'}</msg>
<status status="PASS" starttime="20220624 16:06:38.001" endtime="20220624 16:06:38.003"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.003" endtime="20220624 16:06:38.003"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.003" endtime="20220624 16:06:38.003"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.003" endtime="20220624 16:06:38.003"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.003" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.003" endtime="20220624 16:06:38.003"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.004" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.003" endtime="20220624 16:06:38.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.004" endtime="20220624 16:06:38.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.004" endtime="20220624 16:06:38.005"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.005" endtime="20220624 16:06:38.005"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.001" endtime="20220624 16:06:38.005"/>
</iter>
<iter>
<var name="${i}">24</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.005" level="INFO">Length is 22</msg>
<msg timestamp="20220624 16:06:38.005" level="INFO">${quantidade_de_produtos} = 22</msg>
<status status="PASS" starttime="20220624 16:06:38.005" endtime="20220624 16:06:38.005"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.006" level="INFO">${index_produto} = 9</msg>
<status status="PASS" starttime="20220624 16:06:38.005" endtime="20220624 16:06:38.006"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.006" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 990, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:38.006" endtime="20220624 16:06:38.006"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.007" endtime="20220624 16:06:38.007"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.007" endtime="20220624 16:06:38.007"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.006" endtime="20220624 16:06:38.007"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.007" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.007" endtime="20220624 16:06:38.007"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.007" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.007" endtime="20220624 16:06:38.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.008" endtime="20220624 16:06:38.008"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.008" endtime="20220624 16:06:38.008"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.008" endtime="20220624 16:06:38.009"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.005" endtime="20220624 16:06:38.009"/>
</iter>
<iter>
<var name="${i}">25</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.009" level="INFO">Length is 21</msg>
<msg timestamp="20220624 16:06:38.009" level="INFO">${quantidade_de_produtos} = 21</msg>
<status status="PASS" starttime="20220624 16:06:38.009" endtime="20220624 16:06:38.009"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.010" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:38.009" endtime="20220624 16:06:38.010"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.010" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 989, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:38.010" endtime="20220624 16:06:38.010"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.010" endtime="20220624 16:06:38.010"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.010" endtime="20220624 16:06:38.010"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.010" endtime="20220624 16:06:38.010"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.011" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.011" endtime="20220624 16:06:38.011"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.011" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.011" endtime="20220624 16:06:38.011"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.011" endtime="20220624 16:06:38.012"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.012" endtime="20220624 16:06:38.012"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.012" endtime="20220624 16:06:38.012"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.009" endtime="20220624 16:06:38.012"/>
</iter>
<iter>
<var name="${i}">26</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.013" level="INFO">Length is 20</msg>
<msg timestamp="20220624 16:06:38.013" level="INFO">${quantidade_de_produtos} = 20</msg>
<status status="PASS" starttime="20220624 16:06:38.012" endtime="20220624 16:06:38.013"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.013" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:38.013" endtime="20220624 16:06:38.013"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.014" level="INFO">${produto} = {'nome': 'Maxi Tablet', 'descricao': '10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 995, 'preco'...</msg>
<status status="PASS" starttime="20220624 16:06:38.013" endtime="20220624 16:06:38.014"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.014" endtime="20220624 16:06:38.014"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.014" endtime="20220624 16:06:38.014"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.014" endtime="20220624 16:06:38.014"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.014" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.014" endtime="20220624 16:06:38.014"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.015" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.015" endtime="20220624 16:06:38.015"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.015" endtime="20220624 16:06:38.015"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.015" endtime="20220624 16:06:38.016"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.016" endtime="20220624 16:06:38.016"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.012" endtime="20220624 16:06:38.016"/>
</iter>
<iter>
<var name="${i}">27</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.016" level="INFO">Length is 19</msg>
<msg timestamp="20220624 16:06:38.016" level="INFO">${quantidade_de_produtos} = 19</msg>
<status status="PASS" starttime="20220624 16:06:38.016" endtime="20220624 16:06:38.016"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.016" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.016" endtime="20220624 16:06:38.016"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.016" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 990, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:38.016" endtime="20220624 16:06:38.016"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.017" endtime="20220624 16:06:38.017"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.017" endtime="20220624 16:06:38.017"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.016" endtime="20220624 16:06:38.017"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.017" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.017" endtime="20220624 16:06:38.017"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.017" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.017" endtime="20220624 16:06:38.017"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.018" endtime="20220624 16:06:38.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.018" endtime="20220624 16:06:38.018"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.018" endtime="20220624 16:06:38.019"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.016" endtime="20220624 16:06:38.019"/>
</iter>
<status status="PASS" starttime="20220624 16:06:37.913" endtime="20220624 16:06:38.019"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:38.051" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1}, {'idProduto': 'ZRsnfqcRCQFu3p3R', 'quantidade': 2}, {'idProduto': 'RIriCXGV4GxADZHJ', 'quantidade': 1}, {'idProduto': 'Dw7bFasYs0n1UJu...</msg>
<status status="PASS" starttime="20220624 16:06:38.019" endtime="20220624 16:06:38.052"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:38.052" level="INFO">${carrinho} = {"produtos": [{"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 1}, {"idProduto": "ZRsnfqcRCQFu3p3R", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 1}, {"idProduto": "Dw7bFasYs0n1UJu...</msg>
<status status="PASS" starttime="20220624 16:06:38.052" endtime="20220624 16:06:38.052"/>
</kw>
<msg timestamp="20220624 16:06:38.052" level="INFO">${carrinho} = {"produtos": [{"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 1}, {"idProduto": "ZRsnfqcRCQFu3p3R", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 1}, {"idProduto": "Dw7bFasYs0n1UJu...</msg>
<status status="PASS" starttime="20220624 16:06:37.901" endtime="20220624 16:06:38.052"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:38.054" level="INFO">${nome} = Christian Howard</msg>
<status status="PASS" starttime="20220624 16:06:38.054" endtime="20220624 16:06:38.054"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:38.054" level="INFO">${email} = basscarolyn@example.org</msg>
<status status="PASS" starttime="20220624 16:06:38.054" endtime="20220624 16:06:38.054"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:38.054" level="INFO">${senha} = (1CaBxdmy7</msg>
<status status="PASS" starttime="20220624 16:06:38.054" endtime="20220624 16:06:38.055"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.055" level="INFO">&amp;{usuario} = { nome=Christian Howard | email=basscarolyn@example.org | password=(1CaBxdmy7 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:38.055" endtime="20220624 16:06:38.055"/>
</kw>
<msg timestamp="20220624 16:06:38.055" level="INFO">${usuario} = {'nome': 'Christian Howard', 'email': 'basscarolyn@example.org', 'password': '(1CaBxdmy7', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:38.053" endtime="20220624 16:06:38.055"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.056" endtime="20220624 16:06:38.056"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.062" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '94', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Christian+Howard&amp;email=basscarolyn%40example.org&amp;password=%281CaBxdmy7&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:38.062" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '197bbf92-69c8-4870-9f9b-cdb5a80301f7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Xy1AiDqXkBvrGMEC"
} 
 </msg>
<msg timestamp="20220624 16:06:38.062" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.056" endtime="20220624 16:06:38.062"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.063" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.063" endtime="20220624 16:06:38.063"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.064" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'Xy1AiDqXkBvrGMEC'}</msg>
<status status="PASS" starttime="20220624 16:06:38.063" endtime="20220624 16:06:38.064"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.055" endtime="20220624 16:06:38.064"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.064" endtime="20220624 16:06:38.065"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.064" endtime="20220624 16:06:38.065"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.065" endtime="20220624 16:06:38.066"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.065" endtime="20220624 16:06:38.066"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.066" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:38.066" endtime="20220624 16:06:38.066"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.066" endtime="20220624 16:06:38.067"/>
</kw>
<msg timestamp="20220624 16:06:38.067" level="INFO">${usuario_valido} = {'nome': 'Christian Howard', 'email': 'basscarolyn@example.org', 'password': '(1CaBxdmy7', 'administrador': 'true', '_id': 'Xy1AiDqXkBvrGMEC'}</msg>
<status status="PASS" starttime="20220624 16:06:38.053" endtime="20220624 16:06:38.067"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:38.067" level="INFO">Removed item with key 'nome' and value 'Christian Howard'.</msg>
<msg timestamp="20220624 16:06:38.067" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:38.067" level="INFO">Removed item with key '_id' and value 'Xy1AiDqXkBvrGMEC'.</msg>
<status status="PASS" starttime="20220624 16:06:38.067" endtime="20220624 16:06:38.067"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.068" endtime="20220624 16:06:38.068"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.071" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=basscarolyn%40example.org&amp;password=%281CaBxdmy7 
 </msg>
<msg timestamp="20220624 16:06:38.071" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ffb00fb2-4bec-4fcb-aa72-dc9755d292ce', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '285', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJhc3NjYXJvbHluQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIoMUNhQnhkbXk3IiwiaWF0IjoxNjU2MDk3NTk4LCJleHAiOjE2NTYwOTgxOTh9.Yy7k_qcwfGvFZq0fsObpSP2ObFiSN628W1HLA0lyKPk"
} 
 </msg>
<msg timestamp="20220624 16:06:38.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.068" endtime="20220624 16:06:38.071"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.071" endtime="20220624 16:06:38.071"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.072" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJhc3NjYXJvbHluQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIoMUNhQnhkbXk3IiwiaWF0IjoxNjU2MDk...</msg>
<status status="PASS" starttime="20220624 16:06:38.071" endtime="20220624 16:06:38.072"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.067" endtime="20220624 16:06:38.072"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.072" endtime="20220624 16:06:38.073"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.072" endtime="20220624 16:06:38.073"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.073" endtime="20220624 16:06:38.074"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.073" endtime="20220624 16:06:38.074"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.075" level="INFO">Length is 212</msg>
<status status="PASS" starttime="20220624 16:06:38.074" endtime="20220624 16:06:38.075"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.074" endtime="20220624 16:06:38.075"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.075" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJhc3NjYXJvbHluQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIoMUNhQnhkbXk3IiwiaWF0IjoxNjU2MDk3NTk4LCJleHAiOjE2NTYwOTgxOTh9.Yy7k_qcwfGvFZq0...</msg>
<status status="PASS" starttime="20220624 16:06:38.075" endtime="20220624 16:06:38.076"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.076" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJhc3NjYXJvbHluQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIoMUNhQnhkbXk3IiwiaWF0IjoxNjU2MDk3NTk4LCJleHAiOjE2NTYwOTgxOTh9.Yy7k_qcwfGvF...</msg>
<status status="PASS" starttime="20220624 16:06:38.076" endtime="20220624 16:06:38.076"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.053" endtime="20220624 16:06:38.076"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.077" endtime="20220624 16:06:38.077"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.077" endtime="20220624 16:06:38.077"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.078" endtime="20220624 16:06:38.079"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.301" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJhc3NjYXJvbHluQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiIoMUNhQnhkbXk3IiwiaWF0IjoxNjU2MDk3NTk4LCJleHAiOjE2NTYwOTgxOTh9.Yy7k_qcwfGvFZq0fsObpSP2ObFiSN628W1HLA0lyKPk', 'Content-Type': 'application/json', 'Content-Length': '1470'} 
 body={"produtos": [{"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 1}, {"idProduto": "ZRsnfqcRCQFu3p3R", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 1}, {"idProduto": "Dw7bFasYs0n1UJui", "quantidade": 3}, {"idProduto": "AiU2jNoXJmOd3bDF", "quantidade": 3}, {"idProduto": "QGdxANGY4iYthlwM", "quantidade": 1}, {"idProduto": "ahZuij7poMV9daxr", "quantidade": 3}, {"idProduto": "ikLmmmBskYjtYPNo", "quantidade": 2}, {"idProduto": "rypUQQwSXjyk3c63", "quantidade": 3}, {"idProduto": "FCfDTwwdXcVf14BM", "quantidade": 1}, {"idProduto": "I7runwlH7VqYXvW4", "quantidade": 1}, {"idProduto": "lhIaAKnyLoxLw9NE", "quantidade": 1}, {"idProduto": "apuGRFtiCyX0bAGm", "quantidade": 2}, {"idProduto": "ijDJyCQXRG0zUEPV", "quantidade": 3}, {"idProduto": "JwKn0Q6ngqhxLTEi", "quantidade": 1}, {"idProduto": "hwpiuIHmqe8VNCzw", "quantidade": 2}, {"idProduto": "k2sDlx1dQOYwsV12", "quantidade": 2}, {"idProduto": "GlZXPUNWt8islmer", "quantidade": 1}, {"idProduto": "O00lW65c7tzOcrGU", "quantidade": 2}, {"idProduto": "DgHgvcvchJSgovHR", "quantidade": 2}, {"idProduto": "vF7r7dBj4AgssVDy", "quantidade": 2}, {"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 2}, {"idProduto": "MxCklG58QjmexNXH", "quantidade": 2}, {"idProduto": "EnPI6sCHtD7UoWQQ", "quantidade": 2}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 2}, {"idProduto": "OrMw3RBLx971CAKX", "quantidade": 2}, {"idProduto": "ZRzOB3olwrZP7xEa", "quantidade": 1}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 2}]} 
 </msg>
<msg timestamp="20220624 16:06:38.301" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '20431566-48ca-41d3-86ad-bff14f246cd8', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "i2WWp2wmIHGr4VOT"
} 
 </msg>
<msg timestamp="20220624 16:06:38.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.079" endtime="20220624 16:06:38.301"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.301" endtime="20220624 16:06:38.301"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.302" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'i2WWp2wmIHGr4VOT'}</msg>
<status status="PASS" starttime="20220624 16:06:38.302" endtime="20220624 16:06:38.302"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.078" endtime="20220624 16:06:38.302"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.303" endtime="20220624 16:06:38.304"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.303" endtime="20220624 16:06:38.304"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.305" endtime="20220624 16:06:38.305"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.304" endtime="20220624 16:06:38.305"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.306" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:38.306" endtime="20220624 16:06:38.306"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.306" endtime="20220624 16:06:38.307"/>
</kw>
<tag>Cadastrar_Carrinho_Valido_Administrador</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:37.900" endtime="20220624 16:06:38.307"/>
</test>
<test id="s1-s4-s2-t2" name="Cenario: Cadastrar Carrinho Valido Nao Administrador" line="20">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:38.309" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:38.309" endtime="20220624 16:06:38.309"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.308" endtime="20220624 16:06:38.309"/>
</kw>
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.315" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:38.315" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c7f5caa5-e446-4d7d-9f3b-8c6304c8f9eb', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 996,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 991,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 988,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 990,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 991,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 996,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 991,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 989,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 993,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 997,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 991,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 995,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 988,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 994,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 995,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 994,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 988,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 996,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 987,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 994,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 998,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 990,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 994,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 994,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 994,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 993,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 986,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 988,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 992,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 995,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 988,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 995,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 995,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:38.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.310" endtime="20220624 16:06:38.315"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.315" endtime="20220624 16:06:38.315"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.317" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:38.316" endtime="20220624 16:06:38.317"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.310" endtime="20220624 16:06:38.317"/>
</kw>
<msg timestamp="20220624 16:06:38.317" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:38.310" endtime="20220624 16:06:38.317"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.318" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:38.317" endtime="20220624 16:06:38.318"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.318" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:38.318" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:38.318" endtime="20220624 16:06:38.318"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.319" level="INFO">${quantidade_aleatoria} = 26</msg>
<status status="PASS" starttime="20220624 16:06:38.319" endtime="20220624 16:06:38.319"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:38.319" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:38.319" endtime="20220624 16:06:38.319"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.320" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:38.320" endtime="20220624 16:06:38.320"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.320" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:38.320" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:38.320" endtime="20220624 16:06:38.320"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.321" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.320" endtime="20220624 16:06:38.321"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.321" level="INFO">${produto} = {'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 991, 'preco': 250, '_id': '3xTNa4i2sU4...</msg>
<status status="PASS" starttime="20220624 16:06:38.321" endtime="20220624 16:06:38.321"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.322" endtime="20220624 16:06:38.322"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.322" endtime="20220624 16:06:38.322"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.321" endtime="20220624 16:06:38.322"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.322" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.322" endtime="20220624 16:06:38.322"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.323" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.323" endtime="20220624 16:06:38.323"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.323" endtime="20220624 16:06:38.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.324" endtime="20220624 16:06:38.324"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.324" endtime="20220624 16:06:38.325"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.320" endtime="20220624 16:06:38.325"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.325" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:38.325" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:38.325" endtime="20220624 16:06:38.325"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.326" level="INFO">${index_produto} = 37</msg>
<status status="PASS" starttime="20220624 16:06:38.326" endtime="20220624 16:06:38.326"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.327" level="INFO">${produto} = {'nome': 'Hurricane GX', 'descricao': 'Hurricane GX: PCI-E 691 GFLOPS game-optimized', 'quantidade': 995, 'preco': 101, '_id': 'k7RwzHsvxWkz58Nr'}</msg>
<status status="PASS" starttime="20220624 16:06:38.326" endtime="20220624 16:06:38.327"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.327" endtime="20220624 16:06:38.327"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.327" endtime="20220624 16:06:38.327"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.327" endtime="20220624 16:06:38.327"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.328" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.327" endtime="20220624 16:06:38.328"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.328" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.328" endtime="20220624 16:06:38.328"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.328" endtime="20220624 16:06:38.328"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.329" endtime="20220624 16:06:38.329"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.329" endtime="20220624 16:06:38.329"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.325" endtime="20220624 16:06:38.329"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.329" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:38.329" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:38.329" endtime="20220624 16:06:38.329"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.330" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:38.330" endtime="20220624 16:06:38.330"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.330" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 996, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:38.330" endtime="20220624 16:06:38.331"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.331" endtime="20220624 16:06:38.331"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.331" endtime="20220624 16:06:38.331"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.331" endtime="20220624 16:06:38.331"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.332" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.331" endtime="20220624 16:06:38.332"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.332" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.332" endtime="20220624 16:06:38.332"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.332" endtime="20220624 16:06:38.332"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.333" endtime="20220624 16:06:38.333"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.333" endtime="20220624 16:06:38.333"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.329" endtime="20220624 16:06:38.333"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.333" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:38.333" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:38.333" endtime="20220624 16:06:38.333"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.334" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:38.334" endtime="20220624 16:06:38.334"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.334" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 994, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:38.334" endtime="20220624 16:06:38.334"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.335" endtime="20220624 16:06:38.335"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.335" endtime="20220624 16:06:38.335"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.335" endtime="20220624 16:06:38.335"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.335" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.335" endtime="20220624 16:06:38.335"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.336" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.335" endtime="20220624 16:06:38.336"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.336" endtime="20220624 16:06:38.336"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.336" endtime="20220624 16:06:38.337"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.337" endtime="20220624 16:06:38.337"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.333" endtime="20220624 16:06:38.337"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.337" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:38.337" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:38.337" endtime="20220624 16:06:38.337"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.338" level="INFO">${index_produto} = 24</msg>
<status status="PASS" starttime="20220624 16:06:38.337" endtime="20220624 16:06:38.338"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.338" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 994, 'preco': 299, '_id': 'ZRsnfqcRCQFu3p3R'}</msg>
<status status="PASS" starttime="20220624 16:06:38.338" endtime="20220624 16:06:38.338"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.339" endtime="20220624 16:06:38.339"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.339" endtime="20220624 16:06:38.339"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.338" endtime="20220624 16:06:38.339"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.339" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.339" endtime="20220624 16:06:38.339"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.340" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.340" endtime="20220624 16:06:38.340"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.340" endtime="20220624 16:06:38.341"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.341" endtime="20220624 16:06:38.341"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.341" endtime="20220624 16:06:38.342"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.337" endtime="20220624 16:06:38.342"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.342" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:38.342" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:38.342" endtime="20220624 16:06:38.342"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.343" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:38.342" endtime="20220624 16:06:38.343"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.343" level="INFO">${produto} = {'nome': 'Notebook Basic 15', 'descricao': 'Notebook Basic 15 with 2,80 GHz quad core, 15" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 988, 'preco': 956, '_id': 'ijDJyCQXRG0zUE...</msg>
<status status="PASS" starttime="20220624 16:06:38.343" endtime="20220624 16:06:38.343"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.344" endtime="20220624 16:06:38.344"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.344" endtime="20220624 16:06:38.344"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.343" endtime="20220624 16:06:38.344"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.344" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.344" endtime="20220624 16:06:38.344"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.344" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.344" endtime="20220624 16:06:38.344"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.345" endtime="20220624 16:06:38.345"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.345" endtime="20220624 16:06:38.345"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.346" endtime="20220624 16:06:38.346"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.342" endtime="20220624 16:06:38.346"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.346" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:38.346" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:38.346" endtime="20220624 16:06:38.346"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.347" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:38.346" endtime="20220624 16:06:38.347"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.347" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 987, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:38.347" endtime="20220624 16:06:38.347"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.348" endtime="20220624 16:06:38.348"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.348" endtime="20220624 16:06:38.348"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.347" endtime="20220624 16:06:38.348"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.348" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.348" endtime="20220624 16:06:38.348"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.348" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.348" endtime="20220624 16:06:38.348"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.348" endtime="20220624 16:06:38.349"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.349" endtime="20220624 16:06:38.349"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.349" endtime="20220624 16:06:38.349"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.346" endtime="20220624 16:06:38.349"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.350" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:38.350" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:38.350" endtime="20220624 16:06:38.350"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.350" level="INFO">${index_produto} = 35</msg>
<status status="PASS" starttime="20220624 16:06:38.350" endtime="20220624 16:06:38.351"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.351" level="INFO">${produto} = {'nome': 'Ergo Screen E-II', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm', 'quantidade': 991, 'preco': 285, '_id': 'rypUQQwSXjyk3c63'}</msg>
<status status="PASS" starttime="20220624 16:06:38.351" endtime="20220624 16:06:38.351"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.351" endtime="20220624 16:06:38.351"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.351" endtime="20220624 16:06:38.351"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.351" endtime="20220624 16:06:38.351"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.352" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.351" endtime="20220624 16:06:38.352"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.352" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.352" endtime="20220624 16:06:38.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.352" endtime="20220624 16:06:38.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.353" endtime="20220624 16:06:38.353"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.353" endtime="20220624 16:06:38.353"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.350" endtime="20220624 16:06:38.353"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.353" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:38.353" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:38.353" endtime="20220624 16:06:38.354"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.354" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:38.354" endtime="20220624 16:06:38.354"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.355" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1 Wireless', 'descricao': '5.1 Headset, 40 Hz-20 kHz, Wireless', 'quantidade': 995, 'preco': 49, '_id': 'k2sDlx1dQOYwsV12'}</msg>
<status status="PASS" starttime="20220624 16:06:38.354" endtime="20220624 16:06:38.355"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.355" endtime="20220624 16:06:38.355"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.355" endtime="20220624 16:06:38.355"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.355" endtime="20220624 16:06:38.355"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.356" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.355" endtime="20220624 16:06:38.356"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.357" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.356" endtime="20220624 16:06:38.357"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.357" endtime="20220624 16:06:38.357"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.357" endtime="20220624 16:06:38.358"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.358" endtime="20220624 16:06:38.358"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.353" endtime="20220624 16:06:38.358"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.358" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:38.358" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:38.358" endtime="20220624 16:06:38.358"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.359" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:38.358" endtime="20220624 16:06:38.359"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.359" level="INFO">${produto} = {'nome': 'ITelO Vault Net', 'descricao': 'Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications', 'quantidade': 995, 'preco': 459, '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:38.359" endtime="20220624 16:06:38.359"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.360" endtime="20220624 16:06:38.360"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.360" endtime="20220624 16:06:38.360"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.359" endtime="20220624 16:06:38.360"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.360" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.360" endtime="20220624 16:06:38.360"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.360" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.360" endtime="20220624 16:06:38.360"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.361" endtime="20220624 16:06:38.361"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.361" endtime="20220624 16:06:38.361"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.361" endtime="20220624 16:06:38.362"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.358" endtime="20220624 16:06:38.362"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.362" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:38.362" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:38.362" endtime="20220624 16:06:38.362"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.363" level="INFO">${index_produto} = 35</msg>
<status status="PASS" starttime="20220624 16:06:38.362" endtime="20220624 16:06:38.363"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.363" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 991, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:38.363" endtime="20220624 16:06:38.363"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.364" endtime="20220624 16:06:38.364"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.364" endtime="20220624 16:06:38.364"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.363" endtime="20220624 16:06:38.364"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.364" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.364" endtime="20220624 16:06:38.364"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.364" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.364" endtime="20220624 16:06:38.364"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.364" endtime="20220624 16:06:38.365"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.365" endtime="20220624 16:06:38.365"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.365" endtime="20220624 16:06:38.365"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.362" endtime="20220624 16:06:38.365"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.366" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:38.366" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:38.366" endtime="20220624 16:06:38.366"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.366" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:38.366" endtime="20220624 16:06:38.366"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.367" level="INFO">${produto} = {'nome': 'Silverberry', 'descricao': 'Our new multifunctional Handheld with phone function in silver', 'quantidade': 993, 'preco': 549, '_id': 'Dw7bFasYs0n1UJui'}</msg>
<status status="PASS" starttime="20220624 16:06:38.367" endtime="20220624 16:06:38.367"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.367" endtime="20220624 16:06:38.367"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.367" endtime="20220624 16:06:38.367"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.367" endtime="20220624 16:06:38.367"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.368" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.367" endtime="20220624 16:06:38.368"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.368" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.368" endtime="20220624 16:06:38.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.368" endtime="20220624 16:06:38.369"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.369" endtime="20220624 16:06:38.369"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.369" endtime="20220624 16:06:38.369"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.365" endtime="20220624 16:06:38.369"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.369" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:38.369" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:38.369" endtime="20220624 16:06:38.369"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.370" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:38.370" endtime="20220624 16:06:38.370"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.370" level="INFO">${produto} = {'nome': 'ITelO FlexTop I6300c', 'descricao': 'Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8', 'quantidade': 994, 'preco': 799, '_id': 'I7runwlH7VqYXvW4'}</msg>
<status status="PASS" starttime="20220624 16:06:38.370" endtime="20220624 16:06:38.370"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.371" endtime="20220624 16:06:38.371"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.371" endtime="20220624 16:06:38.371"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.370" endtime="20220624 16:06:38.371"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.371" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.371" endtime="20220624 16:06:38.371"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.372" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.371" endtime="20220624 16:06:38.372"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.372" endtime="20220624 16:06:38.373"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.373" endtime="20220624 16:06:38.373"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.373" endtime="20220624 16:06:38.373"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.369" endtime="20220624 16:06:38.373"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.374" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:38.374" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:38.373" endtime="20220624 16:06:38.374"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.375" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:38.374" endtime="20220624 16:06:38.375"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.375" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 991, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:38.375" endtime="20220624 16:06:38.375"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.375" endtime="20220624 16:06:38.375"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.375" endtime="20220624 16:06:38.375"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.375" endtime="20220624 16:06:38.376"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.376" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.376" endtime="20220624 16:06:38.376"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.376" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.376" endtime="20220624 16:06:38.376"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.376" endtime="20220624 16:06:38.377"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.377" endtime="20220624 16:06:38.377"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.377" endtime="20220624 16:06:38.378"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.373" endtime="20220624 16:06:38.378"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.378" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:38.378" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:38.378" endtime="20220624 16:06:38.378"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.379" level="INFO">${index_produto} = 30</msg>
<status status="PASS" starttime="20220624 16:06:38.378" endtime="20220624 16:06:38.379"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.379" level="INFO">${produto} = {'nome': 'Cerdik Phone 7', 'descricao': '7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of ...</msg>
<status status="PASS" starttime="20220624 16:06:38.379" endtime="20220624 16:06:38.379"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.380" endtime="20220624 16:06:38.380"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.380" endtime="20220624 16:06:38.380"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.379" endtime="20220624 16:06:38.380"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.380" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.380" endtime="20220624 16:06:38.381"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.381" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.381" endtime="20220624 16:06:38.381"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.381" endtime="20220624 16:06:38.382"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.382" endtime="20220624 16:06:38.382"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.382" endtime="20220624 16:06:38.382"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.378" endtime="20220624 16:06:38.382"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.383" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:38.383" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:38.383" endtime="20220624 16:06:38.383"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.384" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:38.383" endtime="20220624 16:06:38.384"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.384" level="INFO">${produto} = {'nome': 'Power Pro Player 80', 'descricao': 'MP3-Player with 80 GB SSD and Color Display, can play movies', 'quantidade': 996, 'preco': 299, '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:38.384" endtime="20220624 16:06:38.384"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.385" endtime="20220624 16:06:38.385"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.385" endtime="20220624 16:06:38.385"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.384" endtime="20220624 16:06:38.385"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.385" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.385" endtime="20220624 16:06:38.385"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.386" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.385" endtime="20220624 16:06:38.386"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.386" endtime="20220624 16:06:38.387"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.387" endtime="20220624 16:06:38.387"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.387" endtime="20220624 16:06:38.387"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.383" endtime="20220624 16:06:38.387"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.388" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:38.388" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:38.388" endtime="20220624 16:06:38.388"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.389" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:38.388" endtime="20220624 16:06:38.389"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.390" level="INFO">${produto} = {'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 996, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}</msg>
<status status="PASS" starttime="20220624 16:06:38.389" endtime="20220624 16:06:38.390"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.390" endtime="20220624 16:06:38.390"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.390" endtime="20220624 16:06:38.390"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.390" endtime="20220624 16:06:38.390"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.390" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.390" endtime="20220624 16:06:38.391"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.391" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.391" endtime="20220624 16:06:38.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.391" endtime="20220624 16:06:38.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.392" endtime="20220624 16:06:38.392"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.392" endtime="20220624 16:06:38.392"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.388" endtime="20220624 16:06:38.392"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.393" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:38.393" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:38.392" endtime="20220624 16:06:38.393"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.393" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:38.393" endtime="20220624 16:06:38.393"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.394" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 988, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:38.394" endtime="20220624 16:06:38.394"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.394" endtime="20220624 16:06:38.394"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.394" endtime="20220624 16:06:38.394"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.394" endtime="20220624 16:06:38.394"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.395" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.394" endtime="20220624 16:06:38.395"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.395" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.395" endtime="20220624 16:06:38.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.395" endtime="20220624 16:06:38.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.396" endtime="20220624 16:06:38.396"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.396" endtime="20220624 16:06:38.396"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.392" endtime="20220624 16:06:38.396"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.396" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:38.396" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:38.396" endtime="20220624 16:06:38.396"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.397" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:38.397" endtime="20220624 16:06:38.397"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.398" level="INFO">${produto} = {'nome': 'PC Power Station', 'descricao': 'PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro', 'quantidade': 998, 'preco': 2399, '_id': 'RhTxSnY2aSwilmO...</msg>
<status status="PASS" starttime="20220624 16:06:38.397" endtime="20220624 16:06:38.398"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.398" endtime="20220624 16:06:38.398"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.398" endtime="20220624 16:06:38.398"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.398" endtime="20220624 16:06:38.398"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.398" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.398" endtime="20220624 16:06:38.398"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.399" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.398" endtime="20220624 16:06:38.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.399" endtime="20220624 16:06:38.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.400" endtime="20220624 16:06:38.400"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.400" endtime="20220624 16:06:38.400"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.396" endtime="20220624 16:06:38.400"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.401" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:38.401" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:38.400" endtime="20220624 16:06:38.401"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.401" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:38.401" endtime="20220624 16:06:38.401"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.402" level="INFO">${produto} = {'nome': 'Smartphone Beta', 'descricao': '5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support', 'quantidade': 997, 'preco': 30, '_id': 'EnPI6sCHtD7UoWQQ'}</msg>
<status status="PASS" starttime="20220624 16:06:38.402" endtime="20220624 16:06:38.402"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.403" endtime="20220624 16:06:38.403"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.403" endtime="20220624 16:06:38.403"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.402" endtime="20220624 16:06:38.403"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.403" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.403" endtime="20220624 16:06:38.403"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.403" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.403" endtime="20220624 16:06:38.403"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.404" endtime="20220624 16:06:38.405"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.405" endtime="20220624 16:06:38.405"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.405" endtime="20220624 16:06:38.405"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.400" endtime="20220624 16:06:38.405"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.406" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:38.406" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:38.405" endtime="20220624 16:06:38.406"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.406" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:38.406" endtime="20220624 16:06:38.406"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.407" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 991, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:38.407" endtime="20220624 16:06:38.407"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.407" endtime="20220624 16:06:38.407"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.407" endtime="20220624 16:06:38.407"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.407" endtime="20220624 16:06:38.407"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.408" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.407" endtime="20220624 16:06:38.408"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.408" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.408" endtime="20220624 16:06:38.408"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.408" endtime="20220624 16:06:38.409"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.409" endtime="20220624 16:06:38.409"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.409" endtime="20220624 16:06:38.410"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.405" endtime="20220624 16:06:38.410"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.410" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:38.410" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:38.410" endtime="20220624 16:06:38.410"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.411" level="INFO">${index_produto} = 22</msg>
<status status="PASS" starttime="20220624 16:06:38.410" endtime="20220624 16:06:38.411"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.411" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 995, 'preco': 39, '_id': 'nCwNCrDsvlkZa8Zw'}</msg>
<status status="PASS" starttime="20220624 16:06:38.411" endtime="20220624 16:06:38.411"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.412" endtime="20220624 16:06:38.412"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.412" endtime="20220624 16:06:38.412"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.411" endtime="20220624 16:06:38.412"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.412" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.412" endtime="20220624 16:06:38.412"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.412" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.412" endtime="20220624 16:06:38.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.412" endtime="20220624 16:06:38.413"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.413" endtime="20220624 16:06:38.413"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.413" endtime="20220624 16:06:38.414"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.410" endtime="20220624 16:06:38.414"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.414" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:38.414" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:38.414" endtime="20220624 16:06:38.414"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.415" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:38.414" endtime="20220624 16:06:38.415"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.415" level="INFO">${produto} = {'nome': 'Beam Breaker B-3', 'descricao': '1080p, DLP max. 12,3 Meter, 3D-ready', 'quantidade': 997, 'preco': 889, '_id': 'tEyF4402lspTNQCb'}</msg>
<status status="PASS" starttime="20220624 16:06:38.415" endtime="20220624 16:06:38.415"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.415" endtime="20220624 16:06:38.415"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.415" endtime="20220624 16:06:38.415"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.415" endtime="20220624 16:06:38.416"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.416" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.416" endtime="20220624 16:06:38.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.416" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.416" endtime="20220624 16:06:38.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.416" endtime="20220624 16:06:38.417"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.417" endtime="20220624 16:06:38.417"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.417" endtime="20220624 16:06:38.417"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.414" endtime="20220624 16:06:38.417"/>
</iter>
<iter>
<var name="${i}">23</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.418" level="INFO">Length is 23</msg>
<msg timestamp="20220624 16:06:38.418" level="INFO">${quantidade_de_produtos} = 23</msg>
<status status="PASS" starttime="20220624 16:06:38.417" endtime="20220624 16:06:38.418"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.418" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.418" endtime="20220624 16:06:38.418"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.419" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 989, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:38.419" endtime="20220624 16:06:38.419"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.420" endtime="20220624 16:06:38.420"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.419" endtime="20220624 16:06:38.420"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.419" endtime="20220624 16:06:38.420"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.420" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.420" endtime="20220624 16:06:38.420"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.420" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.420" endtime="20220624 16:06:38.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.420" endtime="20220624 16:06:38.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.421" endtime="20220624 16:06:38.421"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.421" endtime="20220624 16:06:38.422"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.417" endtime="20220624 16:06:38.422"/>
</iter>
<iter>
<var name="${i}">24</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.422" level="INFO">Length is 22</msg>
<msg timestamp="20220624 16:06:38.422" level="INFO">${quantidade_de_produtos} = 22</msg>
<status status="PASS" starttime="20220624 16:06:38.422" endtime="20220624 16:06:38.422"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.423" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:38.422" endtime="20220624 16:06:38.423"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.423" level="INFO">${produto} = {'nome': 'Track Mouse', 'descricao': 'Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play', 'quantidade': 988, 'preco': 11, '_id': 'b9EEy3P5l9HpD2pB'}</msg>
<status status="PASS" starttime="20220624 16:06:38.423" endtime="20220624 16:06:38.423"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.424" endtime="20220624 16:06:38.424"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.424" endtime="20220624 16:06:38.424"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.423" endtime="20220624 16:06:38.424"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.424" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.424" endtime="20220624 16:06:38.424"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.425" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.424" endtime="20220624 16:06:38.425"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.425" endtime="20220624 16:06:38.425"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.426" endtime="20220624 16:06:38.426"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.426" endtime="20220624 16:06:38.426"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.422" endtime="20220624 16:06:38.426"/>
</iter>
<iter>
<var name="${i}">25</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.426" level="INFO">Length is 21</msg>
<msg timestamp="20220624 16:06:38.426" level="INFO">${quantidade_de_produtos} = 21</msg>
<status status="PASS" starttime="20220624 16:06:38.426" endtime="20220624 16:06:38.426"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.427" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:38.427" endtime="20220624 16:06:38.427"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.428" level="INFO">${produto} = {'nome': 'Smart Office', 'descricao': 'Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)', 'quantidade': 990, 'preco': 89, '_id': 'UxBsipHgAI1f42Ny'}</msg>
<status status="PASS" starttime="20220624 16:06:38.427" endtime="20220624 16:06:38.428"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.428" endtime="20220624 16:06:38.428"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.428" endtime="20220624 16:06:38.428"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.428" endtime="20220624 16:06:38.428"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.428" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.428" endtime="20220624 16:06:38.428"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.429" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.429" endtime="20220624 16:06:38.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.429" endtime="20220624 16:06:38.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.430" endtime="20220624 16:06:38.430"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.430" endtime="20220624 16:06:38.430"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.426" endtime="20220624 16:06:38.430"/>
</iter>
<status status="PASS" starttime="20220624 16:06:38.320" endtime="20220624 16:06:38.430"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:38.464" level="INFO">${carrinho} = {'produtos': [{'idProduto': '3xTNa4i2sU41rPig', 'quantidade': 1}, {'idProduto': 'k7RwzHsvxWkz58Nr', 'quantidade': 2}, {'idProduto': 'ArEArsbw9iH7meyd', 'quantidade': 1}, {'idProduto': 'JwKn0Q6ngqhxLTE...</msg>
<status status="PASS" starttime="20220624 16:06:38.430" endtime="20220624 16:06:38.464"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:38.465" level="INFO">${carrinho} = {"produtos": [{"idProduto": "3xTNa4i2sU41rPig", "quantidade": 1}, {"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 2}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 1}, {"idProduto": "JwKn0Q6ngqhxLTE...</msg>
<status status="PASS" starttime="20220624 16:06:38.464" endtime="20220624 16:06:38.465"/>
</kw>
<msg timestamp="20220624 16:06:38.465" level="INFO">${carrinho} = {"produtos": [{"idProduto": "3xTNa4i2sU41rPig", "quantidade": 1}, {"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 2}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 1}, {"idProduto": "JwKn0Q6ngqhxLTE...</msg>
<status status="PASS" starttime="20220624 16:06:38.310" endtime="20220624 16:06:38.465"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:38.468" level="INFO">${nome} = David Leonard</msg>
<status status="PASS" starttime="20220624 16:06:38.468" endtime="20220624 16:06:38.468"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:38.469" level="INFO">${email} = nodonnell@example.com</msg>
<status status="PASS" starttime="20220624 16:06:38.469" endtime="20220624 16:06:38.469"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:38.470" level="INFO">${senha} = 9%U7QZCyIQ</msg>
<status status="PASS" starttime="20220624 16:06:38.469" endtime="20220624 16:06:38.470"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.471" level="INFO">&amp;{usuario} = { nome=David Leonard | email=nodonnell@example.com | password=9%U7QZCyIQ | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:38.470" endtime="20220624 16:06:38.471"/>
</kw>
<msg timestamp="20220624 16:06:38.471" level="INFO">${usuario} = {'nome': 'David Leonard', 'email': 'nodonnell@example.com', 'password': '9%U7QZCyIQ', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:38.467" endtime="20220624 16:06:38.471"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.471" endtime="20220624 16:06:38.471"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.478" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=David+Leonard&amp;email=nodonnell%40example.com&amp;password=9%25U7QZCyIQ&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:38.478" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '70197d50-8ea6-4a39-8cc6-aad464ffc01d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "9QK6aJljXM0SOVy3"
} 
 </msg>
<msg timestamp="20220624 16:06:38.478" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.472" endtime="20220624 16:06:38.478"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.479" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.478" endtime="20220624 16:06:38.479"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.479" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '9QK6aJljXM0SOVy3'}</msg>
<status status="PASS" starttime="20220624 16:06:38.479" endtime="20220624 16:06:38.479"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.471" endtime="20220624 16:06:38.480"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.480" endtime="20220624 16:06:38.481"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.480" endtime="20220624 16:06:38.481"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.481" endtime="20220624 16:06:38.482"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.481" endtime="20220624 16:06:38.482"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.482" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:38.482" endtime="20220624 16:06:38.482"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.482" endtime="20220624 16:06:38.483"/>
</kw>
<msg timestamp="20220624 16:06:38.483" level="INFO">${usuario_valido} = {'nome': 'David Leonard', 'email': 'nodonnell@example.com', 'password': '9%U7QZCyIQ', 'administrador': 'false', '_id': '9QK6aJljXM0SOVy3'}</msg>
<status status="PASS" starttime="20220624 16:06:38.467" endtime="20220624 16:06:38.483"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:38.483" level="INFO">Removed item with key 'nome' and value 'David Leonard'.</msg>
<msg timestamp="20220624 16:06:38.483" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:38.483" level="INFO">Removed item with key '_id' and value '9QK6aJljXM0SOVy3'.</msg>
<status status="PASS" starttime="20220624 16:06:38.483" endtime="20220624 16:06:38.483"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.484" endtime="20220624 16:06:38.484"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.487" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=nodonnell%40example.com&amp;password=9%25U7QZCyIQ 
 </msg>
<msg timestamp="20220624 16:06:38.487" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f9f7c2f4-2703-40bd-b3cb-23f49e2fba3d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '283', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vZG9ubmVsbEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiOSVVN1FaQ3lJUSIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.KP-ynz7KqfBw6guNrRPdhpApxuHgJgXyIqr6F2aBsAk"
} 
 </msg>
<msg timestamp="20220624 16:06:38.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.484" endtime="20220624 16:06:38.487"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.487" endtime="20220624 16:06:38.487"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.488" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vZG9ubmVsbEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiOSVVN1FaQ3lJUSIsImlhdCI6MTY1NjA5NzU...</msg>
<status status="PASS" starttime="20220624 16:06:38.488" endtime="20220624 16:06:38.488"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.483" endtime="20220624 16:06:38.488"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.489" endtime="20220624 16:06:38.490"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.488" endtime="20220624 16:06:38.490"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.490" endtime="20220624 16:06:38.491"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.490" endtime="20220624 16:06:38.491"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.491" level="INFO">Length is 210</msg>
<status status="PASS" starttime="20220624 16:06:38.491" endtime="20220624 16:06:38.491"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.491" endtime="20220624 16:06:38.491"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.492" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vZG9ubmVsbEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiOSVVN1FaQ3lJUSIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.KP-ynz7KqfBw6guNr...</msg>
<status status="PASS" starttime="20220624 16:06:38.492" endtime="20220624 16:06:38.492"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.492" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vZG9ubmVsbEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiOSVVN1FaQ3lJUSIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.KP-ynz7KqfBw6g...</msg>
<status status="PASS" starttime="20220624 16:06:38.492" endtime="20220624 16:06:38.492"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.466" endtime="20220624 16:06:38.492"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.493" endtime="20220624 16:06:38.494"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.493" endtime="20220624 16:06:38.494"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.494" endtime="20220624 16:06:38.495"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.690" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vZG9ubmVsbEBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiOSVVN1FaQ3lJUSIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.KP-ynz7KqfBw6guNrRPdhpApxuHgJgXyIqr6F2aBsAk', 'Content-Type': 'application/json', 'Content-Length': '1366'} 
 body={"produtos": [{"idProduto": "3xTNa4i2sU41rPig", "quantidade": 1}, {"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 2}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 1}, {"idProduto": "JwKn0Q6ngqhxLTEi", "quantidade": 2}, {"idProduto": "ZRsnfqcRCQFu3p3R", "quantidade": 3}, {"idProduto": "ijDJyCQXRG0zUEPV", "quantidade": 2}, {"idProduto": "OrMw3RBLx971CAKX", "quantidade": 3}, {"idProduto": "rypUQQwSXjyk3c63", "quantidade": 1}, {"idProduto": "k2sDlx1dQOYwsV12", "quantidade": 1}, {"idProduto": "FCfDTwwdXcVf14BM", "quantidade": 2}, {"idProduto": "vF7r7dBj4AgssVDy", "quantidade": 3}, {"idProduto": "Dw7bFasYs0n1UJui", "quantidade": 3}, {"idProduto": "I7runwlH7VqYXvW4", "quantidade": 3}, {"idProduto": "CpaEbTwGcZnLduFY", "quantidade": 3}, {"idProduto": "sBU6QOj9dSzUd9LE", "quantidade": 3}, {"idProduto": "O00lW65c7tzOcrGU", "quantidade": 1}, {"idProduto": "3SZBJdzB87fc4ego", "quantidade": 2}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 1}, {"idProduto": "RhTxSnY2aSwilmOB", "quantidade": 1}, {"idProduto": "EnPI6sCHtD7UoWQQ", "quantidade": 3}, {"idProduto": "F0Coyvmskz0RwoB9", "quantidade": 2}, {"idProduto": "nCwNCrDsvlkZa8Zw", "quantidade": 1}, {"idProduto": "tEyF4402lspTNQCb", "quantidade": 3}, {"idProduto": "DgHgvcvchJSgovHR", "quantidade": 2}, {"idProduto": "b9EEy3P5l9HpD2pB", "quantidade": 3}, {"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 3}]} 
 </msg>
<msg timestamp="20220624 16:06:38.690" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6d56110f-5659-4e9e-945c-aafeba68297f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "vtjjRwg95rOB8joc"
} 
 </msg>
<msg timestamp="20220624 16:06:38.690" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.495" endtime="20220624 16:06:38.690"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.690" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.690" endtime="20220624 16:06:38.691"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.691" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'vtjjRwg95rOB8joc'}</msg>
<status status="PASS" starttime="20220624 16:06:38.691" endtime="20220624 16:06:38.691"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.494" endtime="20220624 16:06:38.691"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.692" endtime="20220624 16:06:38.693"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.692" endtime="20220624 16:06:38.693"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.694" endtime="20220624 16:06:38.694"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.693" endtime="20220624 16:06:38.694"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.696" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:38.695" endtime="20220624 16:06:38.696"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.695" endtime="20220624 16:06:38.696"/>
</kw>
<tag>Cadastrar_Carrinho_Valido_Nao_Administrador</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:38.308" endtime="20220624 16:06:38.696"/>
</test>
<test id="s1-s4-s2-t3" name="Cenario: Tentar Cadastrar Mais de Um Carrinho" line="33">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:38.699" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:38.698" endtime="20220624 16:06:38.699"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.698" endtime="20220624 16:06:38.699"/>
</kw>
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.704" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:38.704" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '342c3622-4b61-4381-b204-9af55083970d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 994,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 990,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 987,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 990,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 991,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 995,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 988,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 987,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 990,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 994,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 989,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 993,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 988,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 995,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 992,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 988,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 995,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 984,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 994,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 987,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 994,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 991,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 994,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 993,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 986,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 985,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 992,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 995,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 986,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 994,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 993,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:38.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.700" endtime="20220624 16:06:38.704"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.704" endtime="20220624 16:06:38.705"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.706" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 994, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:38.705" endtime="20220624 16:06:38.706"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.700" endtime="20220624 16:06:38.706"/>
</kw>
<msg timestamp="20220624 16:06:38.706" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 994, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:38.700" endtime="20220624 16:06:38.706"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.707" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 994, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:38.706" endtime="20220624 16:06:38.707"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.708" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:38.708" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:38.708" endtime="20220624 16:06:38.708"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.708" level="INFO">${quantidade_aleatoria} = 27</msg>
<status status="PASS" starttime="20220624 16:06:38.708" endtime="20220624 16:06:38.709"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:38.709" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:38.709" endtime="20220624 16:06:38.709"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.709" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:38.709" endtime="20220624 16:06:38.709"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.710" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:38.710" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:38.710" endtime="20220624 16:06:38.710"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.711" level="INFO">${index_produto} = 40</msg>
<status status="PASS" starttime="20220624 16:06:38.710" endtime="20220624 16:06:38.711"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.711" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 994, 'preco': 39, '_id': 'nCwNCrDsvlkZa8Zw'}</msg>
<status status="PASS" starttime="20220624 16:06:38.711" endtime="20220624 16:06:38.711"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.711" endtime="20220624 16:06:38.711"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.711" endtime="20220624 16:06:38.711"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.711" endtime="20220624 16:06:38.711"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.712" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.711" endtime="20220624 16:06:38.712"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.712" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.712" endtime="20220624 16:06:38.712"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.712" endtime="20220624 16:06:38.713"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.713" endtime="20220624 16:06:38.713"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.713" endtime="20220624 16:06:38.713"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.709" endtime="20220624 16:06:38.713"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.714" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:38.714" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:38.713" endtime="20220624 16:06:38.714"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.714" level="INFO">${index_produto} = 26</msg>
<status status="PASS" starttime="20220624 16:06:38.714" endtime="20220624 16:06:38.714"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.715" level="INFO">${produto} = {'nome': 'Flat Watch HD37', 'descricao': '37-inch, 1366x768 Pixel, 16:9, HDTV ready', 'quantidade': 994, 'preco': 1199, '_id': 'WcqUhn61i2GkONUE'}</msg>
<status status="PASS" starttime="20220624 16:06:38.714" endtime="20220624 16:06:38.715"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.715" endtime="20220624 16:06:38.715"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.715" endtime="20220624 16:06:38.715"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.715" endtime="20220624 16:06:38.715"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.715" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.715" endtime="20220624 16:06:38.715"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.716" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.716" endtime="20220624 16:06:38.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.716" endtime="20220624 16:06:38.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.716" endtime="20220624 16:06:38.717"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.717" endtime="20220624 16:06:38.717"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.713" endtime="20220624 16:06:38.717"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.717" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:38.717" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:38.717" endtime="20220624 16:06:38.717"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.718" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.717" endtime="20220624 16:06:38.718"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.718" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 987, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:38.718" endtime="20220624 16:06:38.718"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.719" endtime="20220624 16:06:38.719"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.719" endtime="20220624 16:06:38.719"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.718" endtime="20220624 16:06:38.719"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.719" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.719" endtime="20220624 16:06:38.719"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.719" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.719" endtime="20220624 16:06:38.719"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.719" endtime="20220624 16:06:38.720"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.720" endtime="20220624 16:06:38.720"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.720" endtime="20220624 16:06:38.720"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.717" endtime="20220624 16:06:38.721"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.721" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:38.721" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:38.721" endtime="20220624 16:06:38.721"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.721" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:38.721" endtime="20220624 16:06:38.722"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.722" level="INFO">${produto} = {'nome': 'Cepat Tablet 10.5', 'descricao': '10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 988, '...</msg>
<status status="PASS" starttime="20220624 16:06:38.722" endtime="20220624 16:06:38.722"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.722" endtime="20220624 16:06:38.722"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.722" endtime="20220624 16:06:38.722"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.722" endtime="20220624 16:06:38.722"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.723" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.723" endtime="20220624 16:06:38.723"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.723" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.723" endtime="20220624 16:06:38.723"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.723" endtime="20220624 16:06:38.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.724" endtime="20220624 16:06:38.724"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.724" endtime="20220624 16:06:38.724"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.721" endtime="20220624 16:06:38.724"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.725" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:38.725" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:38.724" endtime="20220624 16:06:38.725"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.725" level="INFO">${index_produto} = 36</msg>
<status status="PASS" starttime="20220624 16:06:38.725" endtime="20220624 16:06:38.725"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.726" level="INFO">${produto} = {'nome': 'Ergo Screen E-I', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm', 'quantidade': 995, 'preco': 230, '_id': 'lhIaAKnyLoxLw9NE'}</msg>
<status status="PASS" starttime="20220624 16:06:38.725" endtime="20220624 16:06:38.726"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.726" endtime="20220624 16:06:38.726"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.726" endtime="20220624 16:06:38.726"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.726" endtime="20220624 16:06:38.726"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.727" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.726" endtime="20220624 16:06:38.727"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.727" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.727" endtime="20220624 16:06:38.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.727" endtime="20220624 16:06:38.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.728" endtime="20220624 16:06:38.728"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.728" endtime="20220624 16:06:38.728"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.724" endtime="20220624 16:06:38.728"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.728" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:38.728" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:38.728" endtime="20220624 16:06:38.728"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.729" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:38.728" endtime="20220624 16:06:38.729"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.729" level="INFO">${produto} = {'nome': 'Smart Office', 'descricao': 'Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)', 'quantidade': 987, 'preco': 89, '_id': 'UxBsipHgAI1f42Ny'}</msg>
<status status="PASS" starttime="20220624 16:06:38.729" endtime="20220624 16:06:38.729"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.730" endtime="20220624 16:06:38.730"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.730" endtime="20220624 16:06:38.730"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.729" endtime="20220624 16:06:38.730"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.730" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.730" endtime="20220624 16:06:38.730"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.730" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.730" endtime="20220624 16:06:38.730"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.730" endtime="20220624 16:06:38.731"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.731" endtime="20220624 16:06:38.731"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.731" endtime="20220624 16:06:38.732"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.728" endtime="20220624 16:06:38.732"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.732" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:38.732" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:38.732" endtime="20220624 16:06:38.732"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.733" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.732" endtime="20220624 16:06:38.733"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.733" level="INFO">${produto} = {'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 990, 'preco': 250, '_id': '3xTNa4i2sU4...</msg>
<status status="PASS" starttime="20220624 16:06:38.733" endtime="20220624 16:06:38.733"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.734" endtime="20220624 16:06:38.734"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.734" endtime="20220624 16:06:38.734"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.733" endtime="20220624 16:06:38.734"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.734" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.734" endtime="20220624 16:06:38.734"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.734" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.734" endtime="20220624 16:06:38.734"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.734" endtime="20220624 16:06:38.735"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.735" endtime="20220624 16:06:38.735"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.735" endtime="20220624 16:06:38.735"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.732" endtime="20220624 16:06:38.735"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.736" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:38.736" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:38.736" endtime="20220624 16:06:38.736"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.736" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:38.736" endtime="20220624 16:06:38.736"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.737" level="INFO">${produto} = {'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 994, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}</msg>
<status status="PASS" starttime="20220624 16:06:38.737" endtime="20220624 16:06:38.737"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.737" endtime="20220624 16:06:38.737"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.737" endtime="20220624 16:06:38.737"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.737" endtime="20220624 16:06:38.737"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.738" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.737" endtime="20220624 16:06:38.738"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.738" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.738" endtime="20220624 16:06:38.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.738" endtime="20220624 16:06:38.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.739" endtime="20220624 16:06:38.739"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.739" endtime="20220624 16:06:38.739"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.736" endtime="20220624 16:06:38.739"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.739" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:38.740" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:38.739" endtime="20220624 16:06:38.740"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.740" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:38.740" endtime="20220624 16:06:38.740"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.741" level="INFO">${produto} = {'nome': 'Flyer', 'descricao': 'Flyer for our product palette', 'quantidade': 993, 'preco': 1, '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:38.740" endtime="20220624 16:06:38.741"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.741" endtime="20220624 16:06:38.741"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.741" endtime="20220624 16:06:38.741"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.741" endtime="20220624 16:06:38.741"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.741" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.741" endtime="20220624 16:06:38.741"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.742" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.742" endtime="20220624 16:06:38.742"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.742" endtime="20220624 16:06:38.742"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.742" endtime="20220624 16:06:38.743"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.743" endtime="20220624 16:06:38.743"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.739" endtime="20220624 16:06:38.743"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.743" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:38.743" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:38.743" endtime="20220624 16:06:38.743"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.744" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:38.743" endtime="20220624 16:06:38.744"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.744" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 988, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:38.744" endtime="20220624 16:06:38.744"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.745" endtime="20220624 16:06:38.745"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.745" endtime="20220624 16:06:38.745"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.744" endtime="20220624 16:06:38.745"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.745" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.745" endtime="20220624 16:06:38.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.745" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.745" endtime="20220624 16:06:38.745"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.745" endtime="20220624 16:06:38.746"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.746" endtime="20220624 16:06:38.746"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.746" endtime="20220624 16:06:38.746"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.743" endtime="20220624 16:06:38.746"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.747" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:38.747" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:38.747" endtime="20220624 16:06:38.747"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.747" level="INFO">${index_produto} = 21</msg>
<status status="PASS" starttime="20220624 16:06:38.747" endtime="20220624 16:06:38.748"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.748" level="INFO">${produto} = {'nome': 'Maxi Tablet', 'descricao': '10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 994, 'preco'...</msg>
<status status="PASS" starttime="20220624 16:06:38.748" endtime="20220624 16:06:38.748"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.749" endtime="20220624 16:06:38.749"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.749" endtime="20220624 16:06:38.749"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.748" endtime="20220624 16:06:38.749"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.749" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.749" endtime="20220624 16:06:38.749"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.749" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.749" endtime="20220624 16:06:38.749"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.749" endtime="20220624 16:06:38.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.750" endtime="20220624 16:06:38.750"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.750" endtime="20220624 16:06:38.750"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.747" endtime="20220624 16:06:38.750"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.751" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:38.751" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:38.751" endtime="20220624 16:06:38.751"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.752" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:38.751" endtime="20220624 16:06:38.752"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.752" level="INFO">${produto} = {'nome': 'ITelO Vault Net', 'descricao': 'Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications', 'quantidade': 993, 'preco': 459, '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:38.752" endtime="20220624 16:06:38.752"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.753" endtime="20220624 16:06:38.753"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.753" endtime="20220624 16:06:38.753"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.752" endtime="20220624 16:06:38.753"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.753" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.753" endtime="20220624 16:06:38.753"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.753" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.753" endtime="20220624 16:06:38.753"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.753" endtime="20220624 16:06:38.754"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.754" endtime="20220624 16:06:38.754"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.754" endtime="20220624 16:06:38.754"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.751" endtime="20220624 16:06:38.754"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.755" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:38.755" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:38.755" endtime="20220624 16:06:38.755"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.755" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:38.755" endtime="20220624 16:06:38.755"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.755" level="INFO">${produto} = {'nome': 'Ergonomic Keyboard', 'descricao': 'Ergonomic USB Keyboard for Desktop, Plug&amp;Play', 'quantidade': 994, 'preco': 14, '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:38.755" endtime="20220624 16:06:38.755"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.756" endtime="20220624 16:06:38.756"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.756" endtime="20220624 16:06:38.756"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.755" endtime="20220624 16:06:38.756"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.756" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.756" endtime="20220624 16:06:38.756"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.756" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.756" endtime="20220624 16:06:38.757"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.757" endtime="20220624 16:06:38.757"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.757" endtime="20220624 16:06:38.757"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.758" endtime="20220624 16:06:38.758"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.754" endtime="20220624 16:06:38.758"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.758" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:38.759" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:38.758" endtime="20220624 16:06:38.759"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.759" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:38.759" endtime="20220624 16:06:38.759"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.759" level="INFO">${produto} = {'nome': 'Beam Breaker B-3', 'descricao': '1080p, DLP max. 12,3 Meter, 3D-ready', 'quantidade': 994, 'preco': 889, '_id': 'tEyF4402lspTNQCb'}</msg>
<status status="PASS" starttime="20220624 16:06:38.759" endtime="20220624 16:06:38.760"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.760" endtime="20220624 16:06:38.760"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.760" endtime="20220624 16:06:38.760"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.760" endtime="20220624 16:06:38.760"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.760" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.760" endtime="20220624 16:06:38.760"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.761" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.760" endtime="20220624 16:06:38.761"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.761" endtime="20220624 16:06:38.761"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.761" endtime="20220624 16:06:38.761"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.762" endtime="20220624 16:06:38.762"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.758" endtime="20220624 16:06:38.762"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.762" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:38.762" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:38.762" endtime="20220624 16:06:38.762"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.763" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:38.762" endtime="20220624 16:06:38.763"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.763" level="INFO">${produto} = {'nome': 'Portable DVD Player with 9" LCD Monitor', 'descricao': '9" LCD Screen, storage holds up to 8 hours, 2 speakers included', 'quantidade': 990, 'preco': 853, '_id': '5DDmCSnTAl8gVAEh'}</msg>
<status status="PASS" starttime="20220624 16:06:38.763" endtime="20220624 16:06:38.763"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.764" endtime="20220624 16:06:38.764"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.764" endtime="20220624 16:06:38.764"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.763" endtime="20220624 16:06:38.764"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.764" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.764" endtime="20220624 16:06:38.764"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.764" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.764" endtime="20220624 16:06:38.764"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.765" endtime="20220624 16:06:38.765"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.765" endtime="20220624 16:06:38.765"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.765" endtime="20220624 16:06:38.766"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.762" endtime="20220624 16:06:38.766"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.766" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:38.766" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:38.766" endtime="20220624 16:06:38.766"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.767" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.766" endtime="20220624 16:06:38.767"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.767" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 995, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:38.767" endtime="20220624 16:06:38.767"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.767" endtime="20220624 16:06:38.767"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.767" endtime="20220624 16:06:38.767"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.767" endtime="20220624 16:06:38.767"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.768" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.768" endtime="20220624 16:06:38.768"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.768" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.768" endtime="20220624 16:06:38.768"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.768" endtime="20220624 16:06:38.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.769" endtime="20220624 16:06:38.769"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.769" endtime="20220624 16:06:38.769"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.766" endtime="20220624 16:06:38.769"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.769" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:38.770" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:38.769" endtime="20220624 16:06:38.770"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.770" level="INFO">${index_produto} = 27</msg>
<status status="PASS" starttime="20220624 16:06:38.770" endtime="20220624 16:06:38.770"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.770" level="INFO">${produto} = {'nome': 'Ergo Screen E-II', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm', 'quantidade': 990, 'preco': 285, '_id': 'rypUQQwSXjyk3c63'}</msg>
<status status="PASS" starttime="20220624 16:06:38.770" endtime="20220624 16:06:38.771"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.771" endtime="20220624 16:06:38.771"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.771" endtime="20220624 16:06:38.771"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.771" endtime="20220624 16:06:38.771"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.771" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.771" endtime="20220624 16:06:38.771"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.772" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.771" endtime="20220624 16:06:38.772"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.772" endtime="20220624 16:06:38.772"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.772" endtime="20220624 16:06:38.773"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.773" endtime="20220624 16:06:38.773"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.769" endtime="20220624 16:06:38.773"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.773" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:38.773" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:38.773" endtime="20220624 16:06:38.773"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.774" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:38.773" endtime="20220624 16:06:38.774"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.774" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 989, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:38.774" endtime="20220624 16:06:38.774"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.775" endtime="20220624 16:06:38.775"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.775" endtime="20220624 16:06:38.775"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.774" endtime="20220624 16:06:38.775"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.775" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.775" endtime="20220624 16:06:38.775"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.775" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.775" endtime="20220624 16:06:38.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.775" endtime="20220624 16:06:38.776"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.776" endtime="20220624 16:06:38.776"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.776" endtime="20220624 16:06:38.777"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.773" endtime="20220624 16:06:38.777"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.777" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:38.777" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:38.777" endtime="20220624 16:06:38.777"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.778" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:38.777" endtime="20220624 16:06:38.778"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.778" level="INFO">${produto} = {'nome': 'Astro Laptop 1516', 'descricao': 'Flexible Laptop with 2,5 GHz Quad Core, 15" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro', 'quantidade': 992, 'preco': 989, '_id': 'e3Lai0wKA0BCZHBl'}</msg>
<status status="PASS" starttime="20220624 16:06:38.778" endtime="20220624 16:06:38.778"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.778" endtime="20220624 16:06:38.778"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.778" endtime="20220624 16:06:38.778"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.778" endtime="20220624 16:06:38.778"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.779" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.778" endtime="20220624 16:06:38.779"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.779" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.779" endtime="20220624 16:06:38.779"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.779" endtime="20220624 16:06:38.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.780" endtime="20220624 16:06:38.780"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.780" endtime="20220624 16:06:38.780"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.777" endtime="20220624 16:06:38.780"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.780" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:38.781" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:38.780" endtime="20220624 16:06:38.781"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.781" level="INFO">${index_produto} = 9</msg>
<status status="PASS" starttime="20220624 16:06:38.781" endtime="20220624 16:06:38.781"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.782" level="INFO">${produto} = {'nome': 'Platinberry', 'descricao': 'Our new multifunctional Handheld with phone function in platinum', 'quantidade': 995, 'preco': 549, '_id': 'INAYXR7KbRCo2DKf'}</msg>
<status status="PASS" starttime="20220624 16:06:38.781" endtime="20220624 16:06:38.782"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.782" endtime="20220624 16:06:38.782"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.782" endtime="20220624 16:06:38.782"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.782" endtime="20220624 16:06:38.782"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.782" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.782" endtime="20220624 16:06:38.782"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.783" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.782" endtime="20220624 16:06:38.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.783" endtime="20220624 16:06:38.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.783" endtime="20220624 16:06:38.784"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.784" endtime="20220624 16:06:38.784"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.780" endtime="20220624 16:06:38.784"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.784" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:38.784" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:38.784" endtime="20220624 16:06:38.784"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.785" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:38.784" endtime="20220624 16:06:38.785"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.785" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 991, 'preco': 299, '_id': 'ZRsnfqcRCQFu3p3R'}</msg>
<status status="PASS" starttime="20220624 16:06:38.785" endtime="20220624 16:06:38.785"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.786" endtime="20220624 16:06:38.786"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.786" endtime="20220624 16:06:38.786"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.785" endtime="20220624 16:06:38.786"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.786" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.786" endtime="20220624 16:06:38.786"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.786" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.786" endtime="20220624 16:06:38.786"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.786" endtime="20220624 16:06:38.787"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.787" endtime="20220624 16:06:38.787"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.787" endtime="20220624 16:06:38.787"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.784" endtime="20220624 16:06:38.788"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.788" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:38.788" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:38.788" endtime="20220624 16:06:38.788"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.788" level="INFO">${index_produto} = 20</msg>
<status status="PASS" starttime="20220624 16:06:38.788" endtime="20220624 16:06:38.789"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.789" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1 Wireless', 'descricao': '5.1 Headset, 40 Hz-20 kHz, Wireless', 'quantidade': 994, 'preco': 49, '_id': 'k2sDlx1dQOYwsV12'}</msg>
<status status="PASS" starttime="20220624 16:06:38.789" endtime="20220624 16:06:38.789"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.789" endtime="20220624 16:06:38.789"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.789" endtime="20220624 16:06:38.789"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.789" endtime="20220624 16:06:38.789"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.790" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.789" endtime="20220624 16:06:38.790"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.790" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.790" endtime="20220624 16:06:38.790"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.790" endtime="20220624 16:06:38.791"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.791" endtime="20220624 16:06:38.791"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.791" endtime="20220624 16:06:38.791"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.788" endtime="20220624 16:06:38.791"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.791" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:38.791" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:38.791" endtime="20220624 16:06:38.791"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.792" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:38.792" endtime="20220624 16:06:38.792"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.792" level="INFO">${produto} = {'nome': 'Smart Design', 'descricao': 'Complete package, 1 User, Image editing, processing', 'quantidade': 995, 'preco': 79, '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:38.792" endtime="20220624 16:06:38.792"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.793" endtime="20220624 16:06:38.793"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.793" endtime="20220624 16:06:38.793"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.792" endtime="20220624 16:06:38.793"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.793" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.793" endtime="20220624 16:06:38.793"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.793" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.793" endtime="20220624 16:06:38.793"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.794" endtime="20220624 16:06:38.794"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.794" endtime="20220624 16:06:38.794"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.794" endtime="20220624 16:06:38.795"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.791" endtime="20220624 16:06:38.795"/>
</iter>
<iter>
<var name="${i}">23</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.795" level="INFO">Length is 23</msg>
<msg timestamp="20220624 16:06:38.795" level="INFO">${quantidade_de_produtos} = 23</msg>
<status status="PASS" starttime="20220624 16:06:38.795" endtime="20220624 16:06:38.795"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.796" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:38.795" endtime="20220624 16:06:38.796"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.796" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 991, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:38.796" endtime="20220624 16:06:38.796"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.796" endtime="20220624 16:06:38.797"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.796" endtime="20220624 16:06:38.797"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.796" endtime="20220624 16:06:38.797"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.797" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:38.797" endtime="20220624 16:06:38.797"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.797" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.797" endtime="20220624 16:06:38.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.797" endtime="20220624 16:06:38.798"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.798" endtime="20220624 16:06:38.798"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.798" endtime="20220624 16:06:38.798"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.795" endtime="20220624 16:06:38.798"/>
</iter>
<iter>
<var name="${i}">24</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.799" level="INFO">Length is 22</msg>
<msg timestamp="20220624 16:06:38.799" level="INFO">${quantidade_de_produtos} = 22</msg>
<status status="PASS" starttime="20220624 16:06:38.798" endtime="20220624 16:06:38.799"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.799" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:38.799" endtime="20220624 16:06:38.799"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.800" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 984, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:38.799" endtime="20220624 16:06:38.800"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.800" endtime="20220624 16:06:38.800"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.800" endtime="20220624 16:06:38.800"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.800" endtime="20220624 16:06:38.800"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.800" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.800" endtime="20220624 16:06:38.800"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.801" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.801" endtime="20220624 16:06:38.801"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.801" endtime="20220624 16:06:38.801"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.802" endtime="20220624 16:06:38.802"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.802" endtime="20220624 16:06:38.802"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.798" endtime="20220624 16:06:38.802"/>
</iter>
<iter>
<var name="${i}">25</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.802" level="INFO">Length is 21</msg>
<msg timestamp="20220624 16:06:38.802" level="INFO">${quantidade_de_produtos} = 21</msg>
<status status="PASS" starttime="20220624 16:06:38.802" endtime="20220624 16:06:38.802"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.803" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.802" endtime="20220624 16:06:38.803"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.803" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 987, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:38.803" endtime="20220624 16:06:38.803"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.804" endtime="20220624 16:06:38.804"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.804" endtime="20220624 16:06:38.804"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.803" endtime="20220624 16:06:38.804"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.804" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:38.804" endtime="20220624 16:06:38.804"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.804" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.804" endtime="20220624 16:06:38.804"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.805" endtime="20220624 16:06:38.805"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.805" endtime="20220624 16:06:38.805"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.806" endtime="20220624 16:06:38.806"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.802" endtime="20220624 16:06:38.806"/>
</iter>
<iter>
<var name="${i}">26</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:38.806" level="INFO">Length is 20</msg>
<msg timestamp="20220624 16:06:38.806" level="INFO">${quantidade_de_produtos} = 20</msg>
<status status="PASS" starttime="20220624 16:06:38.806" endtime="20220624 16:06:38.806"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.807" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:38.806" endtime="20220624 16:06:38.807"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:38.807" level="INFO">${produto} = {'nome': 'Web cam reality', 'descricao': 'Color webcam, color, High-Speed USB', 'quantidade': 986, 'preco': 39, '_id': 'apuGRFtiCyX0bAGm'}</msg>
<status status="PASS" starttime="20220624 16:06:38.807" endtime="20220624 16:06:38.807"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:38.808" endtime="20220624 16:06:38.808"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:38.808" endtime="20220624 16:06:38.808"/>
</branch>
<status status="PASS" starttime="20220624 16:06:38.807" endtime="20220624 16:06:38.808"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:38.808" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:38.808" endtime="20220624 16:06:38.808"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.808" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:38.808" endtime="20220624 16:06:38.808"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.808" endtime="20220624 16:06:38.809"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.809" endtime="20220624 16:06:38.809"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:38.809" endtime="20220624 16:06:38.809"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.806" endtime="20220624 16:06:38.809"/>
</iter>
<status status="PASS" starttime="20220624 16:06:38.709" endtime="20220624 16:06:38.809"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:38.840" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'nCwNCrDsvlkZa8Zw', 'quantidade': 3}, {'idProduto': 'WcqUhn61i2GkONUE', 'quantidade': 3}, {'idProduto': '4adMxRTEPyeiqujT', 'quantidade': 1}, {'idProduto': 'MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:38.810" endtime="20220624 16:06:38.841"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:38.841" level="INFO">${carrinho} = {"produtos": [{"idProduto": "nCwNCrDsvlkZa8Zw", "quantidade": 3}, {"idProduto": "WcqUhn61i2GkONUE", "quantidade": 3}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 1}, {"idProduto": "MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:38.841" endtime="20220624 16:06:38.841"/>
</kw>
<msg timestamp="20220624 16:06:38.841" level="INFO">${carrinho} = {"produtos": [{"idProduto": "nCwNCrDsvlkZa8Zw", "quantidade": 3}, {"idProduto": "WcqUhn61i2GkONUE", "quantidade": 3}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 1}, {"idProduto": "MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:38.699" endtime="20220624 16:06:38.841"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:38.843" level="INFO">${nome} = Vincent Evans</msg>
<status status="PASS" starttime="20220624 16:06:38.843" endtime="20220624 16:06:38.843"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:38.844" level="INFO">${email} = munozmichael@example.net</msg>
<status status="PASS" starttime="20220624 16:06:38.843" endtime="20220624 16:06:38.844"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:38.844" level="INFO">${senha} = mn$7Ct@AR^</msg>
<status status="PASS" starttime="20220624 16:06:38.844" endtime="20220624 16:06:38.844"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.844" level="INFO">&amp;{usuario} = { nome=Vincent Evans | email=munozmichael@example.net | password=mn$7Ct@AR^ | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:38.844" endtime="20220624 16:06:38.844"/>
</kw>
<msg timestamp="20220624 16:06:38.844" level="INFO">${usuario} = {'nome': 'Vincent Evans', 'email': 'munozmichael@example.net', 'password': 'mn$7Ct@AR^', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:38.843" endtime="20220624 16:06:38.844"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.845" endtime="20220624 16:06:38.845"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.851" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '96', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Vincent+Evans&amp;email=munozmichael%40example.net&amp;password=mn%247Ct%40AR%5E&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:38.851" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd05339ff-52fe-4885-bfb1-5a23141d0e37', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "fTbB87G3SVmglr1m"
} 
 </msg>
<msg timestamp="20220624 16:06:38.851" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.845" endtime="20220624 16:06:38.851"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.851" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.851" endtime="20220624 16:06:38.851"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.852" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'fTbB87G3SVmglr1m'}</msg>
<status status="PASS" starttime="20220624 16:06:38.852" endtime="20220624 16:06:38.852"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.845" endtime="20220624 16:06:38.852"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.853" endtime="20220624 16:06:38.853"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.852" endtime="20220624 16:06:38.853"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.854" endtime="20220624 16:06:38.854"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.854" endtime="20220624 16:06:38.854"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.855" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:38.854" endtime="20220624 16:06:38.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.855" endtime="20220624 16:06:38.856"/>
</kw>
<msg timestamp="20220624 16:06:38.856" level="INFO">${usuario_valido} = {'nome': 'Vincent Evans', 'email': 'munozmichael@example.net', 'password': 'mn$7Ct@AR^', 'administrador': 'true', '_id': 'fTbB87G3SVmglr1m'}</msg>
<status status="PASS" starttime="20220624 16:06:38.842" endtime="20220624 16:06:38.856"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:38.856" level="INFO">Removed item with key 'nome' and value 'Vincent Evans'.</msg>
<msg timestamp="20220624 16:06:38.856" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:38.856" level="INFO">Removed item with key '_id' and value 'fTbB87G3SVmglr1m'.</msg>
<status status="PASS" starttime="20220624 16:06:38.856" endtime="20220624 16:06:38.856"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.857" endtime="20220624 16:06:38.857"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:38.860" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '58', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=munozmichael%40example.net&amp;password=mn%247Ct%40AR%5E 
 </msg>
<msg timestamp="20220624 16:06:38.860" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '08dd70a5-a94a-4881-842f-b218af0dcfb0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '287', 'Date': 'Fri, 24 Jun 2022 19:06:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im11bm96bWljaGFlbEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoibW4kN0N0QEFSXiIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.htep1XrRsNVBA4sqghO-lhy1YJX0S_A1NqORffBvA9k"
} 
 </msg>
<msg timestamp="20220624 16:06:38.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.857" endtime="20220624 16:06:38.860"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.861" endtime="20220624 16:06:38.861"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.861" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im11bm96bWljaGFlbEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoibW4kN0N0QEFSXiIsImlhdCI6MTY1NjA...</msg>
<status status="PASS" starttime="20220624 16:06:38.861" endtime="20220624 16:06:38.861"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.856" endtime="20220624 16:06:38.862"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:38.862" endtime="20220624 16:06:38.863"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.862" endtime="20220624 16:06:38.863"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:38.863" endtime="20220624 16:06:38.864"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.863" endtime="20220624 16:06:38.864"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:38.864" level="INFO">Length is 214</msg>
<status status="PASS" starttime="20220624 16:06:38.864" endtime="20220624 16:06:38.864"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.864" endtime="20220624 16:06:38.864"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:38.865" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im11bm96bWljaGFlbEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoibW4kN0N0QEFSXiIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.htep1XrRsNVBA...</msg>
<status status="PASS" starttime="20220624 16:06:38.865" endtime="20220624 16:06:38.865"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:38.865" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im11bm96bWljaGFlbEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoibW4kN0N0QEFSXiIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.htep1XrRsN...</msg>
<status status="PASS" starttime="20220624 16:06:38.865" endtime="20220624 16:06:38.865"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.842" endtime="20220624 16:06:38.865"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:38.866" endtime="20220624 16:06:38.866"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.866" endtime="20220624 16:06:38.866"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:38.867" endtime="20220624 16:06:38.867"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.067" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im11bm96bWljaGFlbEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoibW4kN0N0QEFSXiIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.htep1XrRsNVBA4sqghO-lhy1YJX0S_A1NqORffBvA9k', 'Content-Type': 'application/json', 'Content-Length': '1418'} 
 body={"produtos": [{"idProduto": "nCwNCrDsvlkZa8Zw", "quantidade": 3}, {"idProduto": "WcqUhn61i2GkONUE", "quantidade": 3}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 1}, {"idProduto": "MxCklG58QjmexNXH", "quantidade": 2}, {"idProduto": "lhIaAKnyLoxLw9NE", "quantidade": 3}, {"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 2}, {"idProduto": "3xTNa4i2sU41rPig", "quantidade": 3}, {"idProduto": "3SZBJdzB87fc4ego", "quantidade": 3}, {"idProduto": "ahZuij7poMV9daxr", "quantidade": 1}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 1}, {"idProduto": "ZRzOB3olwrZP7xEa", "quantidade": 3}, {"idProduto": "FCfDTwwdXcVf14BM", "quantidade": 3}, {"idProduto": "QGdxANGY4iYthlwM", "quantidade": 3}, {"idProduto": "tEyF4402lspTNQCb", "quantidade": 2}, {"idProduto": "5DDmCSnTAl8gVAEh", "quantidade": 2}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 3}, {"idProduto": "rypUQQwSXjyk3c63", "quantidade": 1}, {"idProduto": "F0Coyvmskz0RwoB9", "quantidade": 2}, {"idProduto": "e3Lai0wKA0BCZHBl", "quantidade": 2}, {"idProduto": "INAYXR7KbRCo2DKf", "quantidade": 2}, {"idProduto": "ZRsnfqcRCQFu3p3R", "quantidade": 2}, {"idProduto": "k2sDlx1dQOYwsV12", "quantidade": 2}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 2}, {"idProduto": "7nxOYuxBPGlpKz5A", "quantidade": 3}, {"idProduto": "OrMw3RBLx971CAKX", "quantidade": 2}, {"idProduto": "DgHgvcvchJSgovHR", "quantidade": 2}, {"idProduto": "apuGRFtiCyX0bAGm", "quantidade": 1}]} 
 </msg>
<msg timestamp="20220624 16:06:39.068" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '19c30b71-017a-40db-a9ef-c51eb9e318ab', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "blXSZykBUNLdrYlV"
} 
 </msg>
<msg timestamp="20220624 16:06:39.068" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:38.868" endtime="20220624 16:06:39.068"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.068" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.068" endtime="20220624 16:06:39.068"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.069" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'blXSZykBUNLdrYlV'}</msg>
<status status="PASS" starttime="20220624 16:06:39.068" endtime="20220624 16:06:39.069"/>
</kw>
<status status="PASS" starttime="20220624 16:06:38.867" endtime="20220624 16:06:39.069"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.070" endtime="20220624 16:06:39.071"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.070" endtime="20220624 16:06:39.071"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.072" endtime="20220624 16:06:39.072"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.072" endtime="20220624 16:06:39.072"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.074" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:39.073" endtime="20220624 16:06:39.074"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.073" endtime="20220624 16:06:39.074"/>
</kw>
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.078" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:39.078" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '288a9f63-b706-4c1b-960c-4659f838989f', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 991,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 987,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 986,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 988,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 988,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 992,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 988,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 985,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 990,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 994,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 987,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 990,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 987,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 993,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 992,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 986,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 995,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 982,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 991,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 985,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 991,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 989,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 991,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 992,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 985,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 985,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 990,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 993,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 986,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 992,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 993,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:39.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.075" endtime="20220624 16:06:39.079"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.079" endtime="20220624 16:06:39.079"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.080" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.079" endtime="20220624 16:06:39.080"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.075" endtime="20220624 16:06:39.080"/>
</kw>
<msg timestamp="20220624 16:06:39.080" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.074" endtime="20220624 16:06:39.080"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.081" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:39.080" endtime="20220624 16:06:39.081"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.081" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.081" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.081" endtime="20220624 16:06:39.081"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.082" level="INFO">${quantidade_aleatoria} = 11</msg>
<status status="PASS" starttime="20220624 16:06:39.081" endtime="20220624 16:06:39.082"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:39.082" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:39.082" endtime="20220624 16:06:39.082"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.082" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:39.082" endtime="20220624 16:06:39.083"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.083" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.083" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.083" endtime="20220624 16:06:39.083"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.084" level="INFO">${index_produto} = 33</msg>
<status status="PASS" starttime="20220624 16:06:39.083" endtime="20220624 16:06:39.084"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.084" level="INFO">${produto} = {'nome': 'Smart Design', 'descricao': 'Complete package, 1 User, Image editing, processing', 'quantidade': 993, 'preco': 79, '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:39.084" endtime="20220624 16:06:39.084"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.084" endtime="20220624 16:06:39.084"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.084" endtime="20220624 16:06:39.085"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.084" endtime="20220624 16:06:39.085"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.085" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.085" endtime="20220624 16:06:39.085"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.085" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.085" endtime="20220624 16:06:39.085"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.085" endtime="20220624 16:06:39.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.086" endtime="20220624 16:06:39.086"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.086" endtime="20220624 16:06:39.086"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.083" endtime="20220624 16:06:39.086"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.087" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:39.087" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:39.086" endtime="20220624 16:06:39.087"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.087" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:39.087" endtime="20220624 16:06:39.087"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.088" level="INFO">${produto} = {'nome': 'ITelO Vault Net', 'descricao': 'Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications', 'quantidade': 990, 'preco': 459, '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:39.088" endtime="20220624 16:06:39.088"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.088" endtime="20220624 16:06:39.088"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.088" endtime="20220624 16:06:39.088"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.088" endtime="20220624 16:06:39.088"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.089" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.088" endtime="20220624 16:06:39.089"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.089" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.089" endtime="20220624 16:06:39.089"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.089" endtime="20220624 16:06:39.090"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.090" endtime="20220624 16:06:39.090"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.090" endtime="20220624 16:06:39.090"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.086" endtime="20220624 16:06:39.090"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.091" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:39.091" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:39.090" endtime="20220624 16:06:39.091"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.092" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:39.091" endtime="20220624 16:06:39.092"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.092" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 987, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:39.092" endtime="20220624 16:06:39.092"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.093" endtime="20220624 16:06:39.093"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.092" endtime="20220624 16:06:39.093"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.092" endtime="20220624 16:06:39.093"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.093" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.093" endtime="20220624 16:06:39.093"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.093" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.093" endtime="20220624 16:06:39.093"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.093" endtime="20220624 16:06:39.094"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.094" endtime="20220624 16:06:39.094"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.094" endtime="20220624 16:06:39.094"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.090" endtime="20220624 16:06:39.094"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.095" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:39.095" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:39.095" endtime="20220624 16:06:39.095"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.095" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.095" endtime="20220624 16:06:39.096"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.096" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 986, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:39.096" endtime="20220624 16:06:39.096"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.096" endtime="20220624 16:06:39.096"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.096" endtime="20220624 16:06:39.096"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.096" endtime="20220624 16:06:39.096"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.097" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.096" endtime="20220624 16:06:39.097"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.097" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.097" endtime="20220624 16:06:39.097"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.097" endtime="20220624 16:06:39.098"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.098" endtime="20220624 16:06:39.098"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.098" endtime="20220624 16:06:39.098"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.094" endtime="20220624 16:06:39.098"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.099" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:39.099" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:39.098" endtime="20220624 16:06:39.099"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.099" level="INFO">${index_produto} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.099" endtime="20220624 16:06:39.099"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.100" level="INFO">${produto} = {'nome': 'Beam Breaker B-3', 'descricao': '1080p, DLP max. 12,3 Meter, 3D-ready', 'quantidade': 992, 'preco': 889, '_id': 'tEyF4402lspTNQCb'}</msg>
<status status="PASS" starttime="20220624 16:06:39.099" endtime="20220624 16:06:39.100"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.100" endtime="20220624 16:06:39.100"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.100" endtime="20220624 16:06:39.100"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.100" endtime="20220624 16:06:39.100"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.100" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.100" endtime="20220624 16:06:39.100"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.101" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.101" endtime="20220624 16:06:39.101"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.101" endtime="20220624 16:06:39.101"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.101" endtime="20220624 16:06:39.102"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.102" endtime="20220624 16:06:39.102"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.098" endtime="20220624 16:06:39.102"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.102" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:39.102" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:39.102" endtime="20220624 16:06:39.102"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.103" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:39.102" endtime="20220624 16:06:39.103"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.104" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 992, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:39.103" endtime="20220624 16:06:39.104"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.104" endtime="20220624 16:06:39.104"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.104" endtime="20220624 16:06:39.104"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.104" endtime="20220624 16:06:39.104"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.104" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.104" endtime="20220624 16:06:39.104"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.105" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.104" endtime="20220624 16:06:39.105"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.105" endtime="20220624 16:06:39.105"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.105" endtime="20220624 16:06:39.106"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.106" endtime="20220624 16:06:39.106"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.102" endtime="20220624 16:06:39.106"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.106" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:39.106" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.106" endtime="20220624 16:06:39.106"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.107" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.106" endtime="20220624 16:06:39.108"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.108" level="INFO">${produto} = {'nome': 'Portable DVD Player with 9" LCD Monitor', 'descricao': '9" LCD Screen, storage holds up to 8 hours, 2 speakers included', 'quantidade': 988, 'preco': 853, '_id': '5DDmCSnTAl8gVAEh'}</msg>
<status status="PASS" starttime="20220624 16:06:39.108" endtime="20220624 16:06:39.108"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.108" endtime="20220624 16:06:39.108"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.108" endtime="20220624 16:06:39.108"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.108" endtime="20220624 16:06:39.108"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.109" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.109" endtime="20220624 16:06:39.109"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.109" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.109" endtime="20220624 16:06:39.109"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.109" endtime="20220624 16:06:39.110"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.110" endtime="20220624 16:06:39.110"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.110" endtime="20220624 16:06:39.110"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.106" endtime="20220624 16:06:39.110"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.111" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:39.111" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:39.111" endtime="20220624 16:06:39.111"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.111" level="INFO">${index_produto} = 17</msg>
<status status="PASS" starttime="20220624 16:06:39.111" endtime="20220624 16:06:39.111"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.112" level="INFO">${produto} = {'nome': 'Ergonomic Keyboard', 'descricao': 'Ergonomic USB Keyboard for Desktop, Plug&amp;Play', 'quantidade': 991, 'preco': 14, '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:39.112" endtime="20220624 16:06:39.112"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.112" endtime="20220624 16:06:39.112"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.112" endtime="20220624 16:06:39.112"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.112" endtime="20220624 16:06:39.112"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.112" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.112" endtime="20220624 16:06:39.113"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.113" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.113" endtime="20220624 16:06:39.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.113" endtime="20220624 16:06:39.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.113" endtime="20220624 16:06:39.114"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.114" endtime="20220624 16:06:39.114"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.110" endtime="20220624 16:06:39.114"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.114" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:39.114" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:39.114" endtime="20220624 16:06:39.114"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.115" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:39.114" endtime="20220624 16:06:39.115"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.115" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 982, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:39.115" endtime="20220624 16:06:39.115"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.116" endtime="20220624 16:06:39.116"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.116" endtime="20220624 16:06:39.116"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.115" endtime="20220624 16:06:39.116"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.116" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.116" endtime="20220624 16:06:39.116"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.116" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.116" endtime="20220624 16:06:39.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.116" endtime="20220624 16:06:39.117"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.117" endtime="20220624 16:06:39.117"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.117" endtime="20220624 16:06:39.117"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.114" endtime="20220624 16:06:39.117"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.118" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:39.118" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:39.118" endtime="20220624 16:06:39.118"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.119" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.118" endtime="20220624 16:06:39.119"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.119" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 988, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:39.119" endtime="20220624 16:06:39.119"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.120" endtime="20220624 16:06:39.120"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.120" endtime="20220624 16:06:39.120"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.119" endtime="20220624 16:06:39.120"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.120" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.120" endtime="20220624 16:06:39.120"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.120" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.120" endtime="20220624 16:06:39.120"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.120" endtime="20220624 16:06:39.121"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.121" endtime="20220624 16:06:39.121"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.121" endtime="20220624 16:06:39.121"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.118" endtime="20220624 16:06:39.121"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.122" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:39.122" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:39.122" endtime="20220624 16:06:39.122"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.122" level="INFO">${index_produto} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.122" endtime="20220624 16:06:39.123"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.123" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 988, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:39.123" endtime="20220624 16:06:39.123"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.124" endtime="20220624 16:06:39.124"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.123" endtime="20220624 16:06:39.124"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.123" endtime="20220624 16:06:39.124"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.124" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.124" endtime="20220624 16:06:39.124"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.124" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.124" endtime="20220624 16:06:39.124"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.124" endtime="20220624 16:06:39.125"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.125" endtime="20220624 16:06:39.125"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.125" endtime="20220624 16:06:39.125"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.121" endtime="20220624 16:06:39.125"/>
</iter>
<status status="PASS" starttime="20220624 16:06:39.083" endtime="20220624 16:06:39.126"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:39.157" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'ftkkuY0qIIn3MBPk', 'quantidade': 1}, {'idProduto': 'FCfDTwwdXcVf14BM', 'quantidade': 3}, {'idProduto': 'HQiQD1cNBI3UpUlB', 'quantidade': 2}, {'idProduto': '4adMxRTEPyeiquj...</msg>
<status status="PASS" starttime="20220624 16:06:39.126" endtime="20220624 16:06:39.157"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:39.158" level="INFO">${carrinho} = {"produtos": [{"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 1}, {"idProduto": "FCfDTwwdXcVf14BM", "quantidade": 3}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 2}, {"idProduto": "4adMxRTEPyeiquj...</msg>
<status status="PASS" starttime="20220624 16:06:39.157" endtime="20220624 16:06:39.158"/>
</kw>
<msg timestamp="20220624 16:06:39.158" level="INFO">${carrinho} = {"produtos": [{"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 1}, {"idProduto": "FCfDTwwdXcVf14BM", "quantidade": 3}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 2}, {"idProduto": "4adMxRTEPyeiquj...</msg>
<status status="PASS" starttime="20220624 16:06:39.074" endtime="20220624 16:06:39.158"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.159" endtime="20220624 16:06:39.159"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.162" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im11bm96bWljaGFlbEBleGFtcGxlLm5ldCIsInBhc3N3b3JkIjoibW4kN0N0QEFSXiIsImlhdCI6MTY1NjA5NzU5OCwiZXhwIjoxNjU2MDk4MTk4fQ.htep1XrRsNVBA4sqghO-lhy1YJX0S_A1NqORffBvA9k', 'Content-Type': 'application/json', 'Content-Length': '586'} 
 body={"produtos": [{"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 1}, {"idProduto": "FCfDTwwdXcVf14BM", "quantidade": 3}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 2}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 1}, {"idProduto": "tEyF4402lspTNQCb", "quantidade": 1}, {"idProduto": "JwKn0Q6ngqhxLTEi", "quantidade": 2}, {"idProduto": "5DDmCSnTAl8gVAEh", "quantidade": 2}, {"idProduto": "QGdxANGY4iYthlwM", "quantidade": 3}, {"idProduto": "OrMw3RBLx971CAKX", "quantidade": 1}, {"idProduto": "7nxOYuxBPGlpKz5A", "quantidade": 1}, {"idProduto": "vF7r7dBj4AgssVDy", "quantidade": 2}]} 
 </msg>
<msg timestamp="20220624 16:06:39.162" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '600ff230-49c3-4b62-8485-fcd216b664d3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '61', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Não é permitido ter mais de 1 carrinho"
} 
 </msg>
<msg timestamp="20220624 16:06:39.162" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.159" endtime="20220624 16:06:39.162"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.163" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.162" endtime="20220624 16:06:39.163"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.163" level="INFO">${response_body} = {'message': 'Não é permitido ter mais de 1 carrinho'}</msg>
<status status="PASS" starttime="20220624 16:06:39.163" endtime="20220624 16:06:39.163"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.158" endtime="20220624 16:06:39.163"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.164" endtime="20220624 16:06:39.165"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.164" endtime="20220624 16:06:39.165"/>
</kw>
<kw name="Validar Mensagem &quot;Não é permitido ter mais de 1 carrinho&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.166" endtime="20220624 16:06:39.166"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.165" endtime="20220624 16:06:39.166"/>
</kw>
<tag>Cadastrar_Carrinho_Mais_De_Um</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:38.697" endtime="20220624 16:06:39.167"/>
</test>
<test id="s1-s4-s2-t4" name="Cenraio: Tentar Cadastrar Carrinho Com Produto Invalido" line="47">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:39.169" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:39.169" endtime="20220624 16:06:39.169"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.168" endtime="20220624 16:06:39.169"/>
</kw>
<kw name="Gerar Carrinho Produto Invalido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:39.170" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:39.170" endtime="20220624 16:06:39.170"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.170" level="INFO">&amp;{carrinho} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.170" endtime="20220624 16:06:39.170"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.170" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.170" endtime="20220624 16:06:39.170"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=NaoExisto</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.170" endtime="20220624 16:06:39.171"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=5</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.171" endtime="20220624 16:06:39.171"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.171" endtime="20220624 16:06:39.171"/>
</kw>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:39.203" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'NaoExisto', 'quantidade': '5'}]}</msg>
<status status="PASS" starttime="20220624 16:06:39.171" endtime="20220624 16:06:39.203"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:39.204" level="INFO">${carrinho} = {"produtos": [{"idProduto": "NaoExisto", "quantidade": "5"}]}</msg>
<status status="PASS" starttime="20220624 16:06:39.203" endtime="20220624 16:06:39.204"/>
</kw>
<msg timestamp="20220624 16:06:39.204" level="INFO">${carrinho} = {"produtos": [{"idProduto": "NaoExisto", "quantidade": "5"}]}</msg>
<status status="PASS" starttime="20220624 16:06:39.169" endtime="20220624 16:06:39.204"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:39.205" level="INFO">${nome} = Shawn Miller</msg>
<status status="PASS" starttime="20220624 16:06:39.205" endtime="20220624 16:06:39.205"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:39.206" level="INFO">${email} = denise79@example.net</msg>
<status status="PASS" starttime="20220624 16:06:39.205" endtime="20220624 16:06:39.206"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:39.206" level="INFO">${senha} = 921Fdq0p@z</msg>
<status status="PASS" starttime="20220624 16:06:39.206" endtime="20220624 16:06:39.206"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.206" level="INFO">&amp;{usuario} = { nome=Shawn Miller | email=denise79@example.net | password=921Fdq0p@z | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:39.206" endtime="20220624 16:06:39.206"/>
</kw>
<msg timestamp="20220624 16:06:39.207" level="INFO">${usuario} = {'nome': 'Shawn Miller', 'email': 'denise79@example.net', 'password': '921Fdq0p@z', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:39.205" endtime="20220624 16:06:39.207"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.207" endtime="20220624 16:06:39.207"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.213" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '88', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Shawn+Miller&amp;email=denise79%40example.net&amp;password=921Fdq0p%40z&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:39.213" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6fd429e5-1960-4ef4-b046-5117838ce778', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "AwnwFkZyCmBVWqr2"
} 
 </msg>
<msg timestamp="20220624 16:06:39.213" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.207" endtime="20220624 16:06:39.213"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.214" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.214" endtime="20220624 16:06:39.214"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.215" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'AwnwFkZyCmBVWqr2'}</msg>
<status status="PASS" starttime="20220624 16:06:39.214" endtime="20220624 16:06:39.215"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.207" endtime="20220624 16:06:39.215"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.216" endtime="20220624 16:06:39.216"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.215" endtime="20220624 16:06:39.216"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.217" endtime="20220624 16:06:39.217"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.216" endtime="20220624 16:06:39.217"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.218" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:39.217" endtime="20220624 16:06:39.218"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.218" endtime="20220624 16:06:39.218"/>
</kw>
<msg timestamp="20220624 16:06:39.218" level="INFO">${usuario_valido} = {'nome': 'Shawn Miller', 'email': 'denise79@example.net', 'password': '921Fdq0p@z', 'administrador': 'false', '_id': 'AwnwFkZyCmBVWqr2'}</msg>
<status status="PASS" starttime="20220624 16:06:39.205" endtime="20220624 16:06:39.218"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.219" level="INFO">Removed item with key 'nome' and value 'Shawn Miller'.</msg>
<msg timestamp="20220624 16:06:39.219" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:39.219" level="INFO">Removed item with key '_id' and value 'AwnwFkZyCmBVWqr2'.</msg>
<status status="PASS" starttime="20220624 16:06:39.219" endtime="20220624 16:06:39.219"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.219" endtime="20220624 16:06:39.219"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.222" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=denise79%40example.net&amp;password=921Fdq0p%40z 
 </msg>
<msg timestamp="20220624 16:06:39.222" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5eb4e2ed-5c94-4c6f-a895-1db1f721df0b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '281', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRlbmlzZTc5QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiI5MjFGZHEwcEB6IiwiaWF0IjoxNjU2MDk3NTk5LCJleHAiOjE2NTYwOTgxOTl9.V8ut6pQBM6xiO3q0L__-LeJ6xRapQZxyXUoeADX0jIU"
} 
 </msg>
<msg timestamp="20220624 16:06:39.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.219" endtime="20220624 16:06:39.222"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.223" endtime="20220624 16:06:39.223"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.223" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRlbmlzZTc5QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiI5MjFGZHEwcEB6IiwiaWF0IjoxNjU2MDk3NTk...</msg>
<status status="PASS" starttime="20220624 16:06:39.223" endtime="20220624 16:06:39.223"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.219" endtime="20220624 16:06:39.224"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.224" endtime="20220624 16:06:39.225"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.224" endtime="20220624 16:06:39.225"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.225" endtime="20220624 16:06:39.226"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.225" endtime="20220624 16:06:39.226"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.227" level="INFO">Length is 208</msg>
<status status="PASS" starttime="20220624 16:06:39.226" endtime="20220624 16:06:39.227"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.226" endtime="20220624 16:06:39.227"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.227" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRlbmlzZTc5QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiI5MjFGZHEwcEB6IiwiaWF0IjoxNjU2MDk3NTk5LCJleHAiOjE2NTYwOTgxOTl9.V8ut6pQBM6xiO3q0L__...</msg>
<status status="PASS" starttime="20220624 16:06:39.227" endtime="20220624 16:06:39.227"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.228" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRlbmlzZTc5QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiI5MjFGZHEwcEB6IiwiaWF0IjoxNjU2MDk3NTk5LCJleHAiOjE2NTYwOTgxOTl9.V8ut6pQBM6xiO3q0...</msg>
<status status="PASS" starttime="20220624 16:06:39.227" endtime="20220624 16:06:39.228"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.204" endtime="20220624 16:06:39.228"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.229" endtime="20220624 16:06:39.229"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.229" endtime="20220624 16:06:39.229"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.230" endtime="20220624 16:06:39.230"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.234" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRlbmlzZTc5QGV4YW1wbGUubmV0IiwicGFzc3dvcmQiOiI5MjFGZHEwcEB6IiwiaWF0IjoxNjU2MDk3NTk5LCJleHAiOjE2NTYwOTgxOTl9.V8ut6pQBM6xiO3q0L__-LeJ6xRapQZxyXUoeADX0jIU', 'Content-Type': 'application/json', 'Content-Length': '61'} 
 body={"produtos": [{"idProduto": "NaoExisto", "quantidade": "5"}]} 
 </msg>
<msg timestamp="20220624 16:06:39.234" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '56253031-60d9-4dac-b6b5-7599407230e1', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '143', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Produto não encontrado",
    "item": {
        "index": 0,
        "idProduto": "NaoExisto",
        "quantidade": 5
    }
} 
 </msg>
<msg timestamp="20220624 16:06:39.234" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.230" endtime="20220624 16:06:39.234"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.234" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.234" endtime="20220624 16:06:39.234"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.235" level="INFO">${response_body} = {'message': 'Produto não encontrado', 'item': {'index': 0, 'idProduto': 'NaoExisto', 'quantidade': 5}}</msg>
<status status="PASS" starttime="20220624 16:06:39.234" endtime="20220624 16:06:39.235"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.230" endtime="20220624 16:06:39.235"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.235" endtime="20220624 16:06:39.236"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.235" endtime="20220624 16:06:39.236"/>
</kw>
<kw name="Validar Mensagem &quot;Produto não encontrado&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.237" endtime="20220624 16:06:39.237"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.236" endtime="20220624 16:06:39.237"/>
</kw>
<tag>Cadastrar_Carrinho_Produto_Invalido</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:39.168" endtime="20220624 16:06:39.237"/>
</test>
<test id="s1-s4-s2-t5" name="Cenario: Tentar Cadastrar Carrinho Com Quantidade Insuficiente" line="56">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:39.240" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:39.240" endtime="20220624 16:06:39.240"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.239" endtime="20220624 16:06:39.240"/>
</kw>
<kw name="Gerar Carrinho Quantidade Insuficiente" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.245" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:39.245" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2b44fed5-4780-4947-8042-9bea4d9bee03', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 991,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 987,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 986,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 988,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 988,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 992,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 988,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 985,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 990,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 994,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 987,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 990,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 987,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 993,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 992,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 986,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 995,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 982,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 991,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 985,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 991,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 989,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 991,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 992,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 985,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 985,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 990,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 993,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 986,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 992,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 993,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:39.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.241" endtime="20220624 16:06:39.245"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.245" endtime="20220624 16:06:39.246"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.248" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.246" endtime="20220624 16:06:39.248"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.241" endtime="20220624 16:06:39.248"/>
</kw>
<msg timestamp="20220624 16:06:39.249" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.241" endtime="20220624 16:06:39.249"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:39.249" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:39.249" endtime="20220624 16:06:39.249"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.250" level="INFO">&amp;{carrinho} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.250" endtime="20220624 16:06:39.250"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.250" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.250" endtime="20220624 16:06:39.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produtos['produtos'][0]['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.251" endtime="20220624 16:06:39.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=99999</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.252" endtime="20220624 16:06:39.252"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.252" endtime="20220624 16:06:39.253"/>
</kw>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:39.285" level="INFO">${carrinho} = {'produtos': [{'idProduto': '3SZBJdzB87fc4ego', 'quantidade': '99999'}]}</msg>
<status status="PASS" starttime="20220624 16:06:39.253" endtime="20220624 16:06:39.285"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:39.285" level="INFO">${carrinho} = {"produtos": [{"idProduto": "3SZBJdzB87fc4ego", "quantidade": "99999"}]}</msg>
<status status="PASS" starttime="20220624 16:06:39.285" endtime="20220624 16:06:39.285"/>
</kw>
<msg timestamp="20220624 16:06:39.286" level="INFO">${carrinho} = {"produtos": [{"idProduto": "3SZBJdzB87fc4ego", "quantidade": "99999"}]}</msg>
<status status="PASS" starttime="20220624 16:06:39.241" endtime="20220624 16:06:39.286"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:39.288" level="INFO">${nome} = Alvin Rodriguez</msg>
<status status="PASS" starttime="20220624 16:06:39.288" endtime="20220624 16:06:39.288"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:39.288" level="INFO">${email} = erichards@example.com</msg>
<status status="PASS" starttime="20220624 16:06:39.288" endtime="20220624 16:06:39.288"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:39.289" level="INFO">${senha} = +h@4Ot5iKw</msg>
<status status="PASS" starttime="20220624 16:06:39.288" endtime="20220624 16:06:39.289"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.289" level="INFO">&amp;{usuario} = { nome=Alvin Rodriguez | email=erichards@example.com | password=+h@4Ot5iKw | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:39.289" endtime="20220624 16:06:39.289"/>
</kw>
<msg timestamp="20220624 16:06:39.289" level="INFO">${usuario} = {'nome': 'Alvin Rodriguez', 'email': 'erichards@example.com', 'password': '+h@4Ot5iKw', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:39.287" endtime="20220624 16:06:39.289"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.290" endtime="20220624 16:06:39.290"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.296" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '94', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Alvin+Rodriguez&amp;email=erichards%40example.com&amp;password=%2Bh%404Ot5iKw&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:39.296" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c5e51fe1-3cfa-4e3a-b082-07f05e4aa071', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ZrIJQhcuJtgkQZQX"
} 
 </msg>
<msg timestamp="20220624 16:06:39.296" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.290" endtime="20220624 16:06:39.296"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.296" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.296" endtime="20220624 16:06:39.296"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.297" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'ZrIJQhcuJtgkQZQX'}</msg>
<status status="PASS" starttime="20220624 16:06:39.296" endtime="20220624 16:06:39.297"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.289" endtime="20220624 16:06:39.297"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.298" endtime="20220624 16:06:39.298"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.297" endtime="20220624 16:06:39.298"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.299" endtime="20220624 16:06:39.299"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.298" endtime="20220624 16:06:39.299"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.300" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:39.299" endtime="20220624 16:06:39.300"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.300" endtime="20220624 16:06:39.300"/>
</kw>
<msg timestamp="20220624 16:06:39.300" level="INFO">${usuario_valido} = {'nome': 'Alvin Rodriguez', 'email': 'erichards@example.com', 'password': '+h@4Ot5iKw', 'administrador': 'false', '_id': 'ZrIJQhcuJtgkQZQX'}</msg>
<status status="PASS" starttime="20220624 16:06:39.287" endtime="20220624 16:06:39.300"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.301" level="INFO">Removed item with key 'nome' and value 'Alvin Rodriguez'.</msg>
<msg timestamp="20220624 16:06:39.301" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:39.301" level="INFO">Removed item with key '_id' and value 'ZrIJQhcuJtgkQZQX'.</msg>
<status status="PASS" starttime="20220624 16:06:39.300" endtime="20220624 16:06:39.301"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.301" endtime="20220624 16:06:39.301"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.304" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=erichards%40example.com&amp;password=%2Bh%404Ot5iKw 
 </msg>
<msg timestamp="20220624 16:06:39.304" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c18c9104-e90f-4b35-adf8-935fe03328e3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '283', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVyaWNoYXJkc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiK2hANE90NWlLdyIsImlhdCI6MTY1NjA5NzU5OSwiZXhwIjoxNjU2MDk4MTk5fQ.eLJsTGgqwH0h0WwPmV3byKyJ4RpFEgy0z2Gq3rzvcfI"
} 
 </msg>
<msg timestamp="20220624 16:06:39.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.301" endtime="20220624 16:06:39.304"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.304" endtime="20220624 16:06:39.305"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.305" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVyaWNoYXJkc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiK2hANE90NWlLdyIsImlhdCI6MTY1NjA5NzU...</msg>
<status status="PASS" starttime="20220624 16:06:39.305" endtime="20220624 16:06:39.305"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.301" endtime="20220624 16:06:39.305"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.306" endtime="20220624 16:06:39.306"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.305" endtime="20220624 16:06:39.306"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.307" endtime="20220624 16:06:39.307"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.307" endtime="20220624 16:06:39.307"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.308" level="INFO">Length is 210</msg>
<status status="PASS" starttime="20220624 16:06:39.308" endtime="20220624 16:06:39.308"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.307" endtime="20220624 16:06:39.308"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.309" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVyaWNoYXJkc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiK2hANE90NWlLdyIsImlhdCI6MTY1NjA5NzU5OSwiZXhwIjoxNjU2MDk4MTk5fQ.eLJsTGgqwH0h0WwPm...</msg>
<status status="PASS" starttime="20220624 16:06:39.308" endtime="20220624 16:06:39.309"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.310" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVyaWNoYXJkc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiK2hANE90NWlLdyIsImlhdCI6MTY1NjA5NzU5OSwiZXhwIjoxNjU2MDk4MTk5fQ.eLJsTGgqwH0h0W...</msg>
<status status="PASS" starttime="20220624 16:06:39.309" endtime="20220624 16:06:39.310"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.287" endtime="20220624 16:06:39.310"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.311" endtime="20220624 16:06:39.311"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.310" endtime="20220624 16:06:39.311"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.311" endtime="20220624 16:06:39.312"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.315" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVyaWNoYXJkc0BleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoiK2hANE90NWlLdyIsImlhdCI6MTY1NjA5NzU5OSwiZXhwIjoxNjU2MDk4MTk5fQ.eLJsTGgqwH0h0WwPmV3byKyJ4RpFEgy0z2Gq3rzvcfI', 'Content-Type': 'application/json', 'Content-Length': '72'} 
 body={"produtos": [{"idProduto": "3SZBJdzB87fc4ego", "quantidade": "99999"}]} 
 </msg>
<msg timestamp="20220624 16:06:39.315" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e96c41f1-836f-4a59-a616-7ff986d54293', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '206', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Produto não possui quantidade suficiente",
    "item": {
        "index": 0,
        "idProduto": "3SZBJdzB87fc4ego",
        "quantidade": 99999,
        "quantidadeEstoque": 991
    }
} 
 </msg>
<msg timestamp="20220624 16:06:39.315" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.312" endtime="20220624 16:06:39.315"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.316" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.315" endtime="20220624 16:06:39.316"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.316" level="INFO">${response_body} = {'message': 'Produto não possui quantidade suficiente', 'item': {'index': 0, 'idProduto': '3SZBJdzB87fc4ego', 'quantidade': 99999, 'quantidadeEstoque': 991}}</msg>
<status status="PASS" starttime="20220624 16:06:39.316" endtime="20220624 16:06:39.316"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.311" endtime="20220624 16:06:39.316"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.317" endtime="20220624 16:06:39.318"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.317" endtime="20220624 16:06:39.318"/>
</kw>
<kw name="Validar Mensagem &quot;Produto não possui quantidade suficiente&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.318" endtime="20220624 16:06:39.319"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.318" endtime="20220624 16:06:39.319"/>
</kw>
<tag>Cadastrar_Carrinho_Quantidade_Insuficiente</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:39.239" endtime="20220624 16:06:39.319"/>
</test>
<test id="s1-s4-s2-t6" name="Cenario: Tentar Cadastrar Carrinho Valido Sem Autenticacao" line="65">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:39.322" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:39.321" endtime="20220624 16:06:39.322"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.321" endtime="20220624 16:06:39.322"/>
</kw>
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.327" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:39.327" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ae69f57f-d634-4f64-9471-0478a26f7cc1', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 991,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 987,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 986,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 988,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 988,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 992,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 988,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 985,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 990,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 994,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 987,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 990,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 987,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 993,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 992,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 986,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 995,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 982,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 991,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 985,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 991,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 989,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 991,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 992,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 985,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 985,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 990,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 993,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 986,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 992,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 993,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:39.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.323" endtime="20220624 16:06:39.327"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.327" endtime="20220624 16:06:39.328"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.329" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.328" endtime="20220624 16:06:39.329"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.323" endtime="20220624 16:06:39.329"/>
</kw>
<msg timestamp="20220624 16:06:39.329" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.322" endtime="20220624 16:06:39.329"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.330" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:39.329" endtime="20220624 16:06:39.330"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.330" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.331" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.330" endtime="20220624 16:06:39.331"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.331" level="INFO">${quantidade_aleatoria} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.331" endtime="20220624 16:06:39.331"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:39.331" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:39.331" endtime="20220624 16:06:39.331"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.332" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:39.332" endtime="20220624 16:06:39.332"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.332" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.332" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.332" endtime="20220624 16:06:39.332"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.333" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:39.332" endtime="20220624 16:06:39.333"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.333" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 987, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:39.333" endtime="20220624 16:06:39.333"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.334" endtime="20220624 16:06:39.334"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.334" endtime="20220624 16:06:39.334"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.333" endtime="20220624 16:06:39.334"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.334" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.334" endtime="20220624 16:06:39.334"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.334" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.334" endtime="20220624 16:06:39.334"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.334" endtime="20220624 16:06:39.335"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.335" endtime="20220624 16:06:39.335"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.335" endtime="20220624 16:06:39.336"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.332" endtime="20220624 16:06:39.336"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.336" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:39.336" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:39.336" endtime="20220624 16:06:39.336"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.337" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.336" endtime="20220624 16:06:39.337"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.337" level="INFO">${produto} = {'nome': 'PC Power Station', 'descricao': 'PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro', 'quantidade': 997, 'preco': 2399, '_id': 'RhTxSnY2aSwilmO...</msg>
<status status="PASS" starttime="20220624 16:06:39.337" endtime="20220624 16:06:39.337"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.337" endtime="20220624 16:06:39.337"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.337" endtime="20220624 16:06:39.337"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.337" endtime="20220624 16:06:39.337"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.338" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.337" endtime="20220624 16:06:39.338"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.338" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.338" endtime="20220624 16:06:39.338"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.338" endtime="20220624 16:06:39.339"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.339" endtime="20220624 16:06:39.339"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.339" endtime="20220624 16:06:39.340"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.336" endtime="20220624 16:06:39.340"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.340" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:39.340" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:39.340" endtime="20220624 16:06:39.340"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.341" level="INFO">${index_produto} = 32</msg>
<status status="PASS" starttime="20220624 16:06:39.341" endtime="20220624 16:06:39.341"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.342" level="INFO">${produto} = {'nome': 'Cordless Bluetooth Keyboard, english international', 'descricao': 'Cordless Bluetooth Keyboard with English keys', 'quantidade': 989, 'preco': 29, '_id': 'hwpiuIHmqe8VNCzw'}</msg>
<status status="PASS" starttime="20220624 16:06:39.342" endtime="20220624 16:06:39.342"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.342" endtime="20220624 16:06:39.342"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.342" endtime="20220624 16:06:39.342"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.342" endtime="20220624 16:06:39.342"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.343" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.342" endtime="20220624 16:06:39.343"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.343" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.343" endtime="20220624 16:06:39.343"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.343" endtime="20220624 16:06:39.344"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.344" endtime="20220624 16:06:39.344"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.344" endtime="20220624 16:06:39.344"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.340" endtime="20220624 16:06:39.344"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.344" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:39.345" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:39.344" endtime="20220624 16:06:39.345"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.345" level="INFO">${index_produto} = 26</msg>
<status status="PASS" starttime="20220624 16:06:39.345" endtime="20220624 16:06:39.345"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.346" level="INFO">${produto} = {'nome': 'Maxi Tablet', 'descricao': '10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 991, 'preco'...</msg>
<status status="PASS" starttime="20220624 16:06:39.345" endtime="20220624 16:06:39.346"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.346" endtime="20220624 16:06:39.346"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.346" endtime="20220624 16:06:39.346"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.346" endtime="20220624 16:06:39.346"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.346" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.346" endtime="20220624 16:06:39.346"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.347" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.346" endtime="20220624 16:06:39.347"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.347" endtime="20220624 16:06:39.347"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.347" endtime="20220624 16:06:39.348"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.348" endtime="20220624 16:06:39.348"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.344" endtime="20220624 16:06:39.348"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.348" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:39.348" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:39.348" endtime="20220624 16:06:39.348"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.349" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:39.348" endtime="20220624 16:06:39.349"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.349" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 988, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:39.349" endtime="20220624 16:06:39.349"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.350" endtime="20220624 16:06:39.350"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.350" endtime="20220624 16:06:39.350"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.349" endtime="20220624 16:06:39.350"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.350" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.350" endtime="20220624 16:06:39.350"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.350" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.350" endtime="20220624 16:06:39.350"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.351" endtime="20220624 16:06:39.351"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.351" endtime="20220624 16:06:39.351"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.351" endtime="20220624 16:06:39.352"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.348" endtime="20220624 16:06:39.352"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.352" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:39.352" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:39.352" endtime="20220624 16:06:39.352"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.353" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:39.352" endtime="20220624 16:06:39.353"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.353" level="INFO">${produto} = {'nome': 'PC Lock', 'descricao': 'Robust 3m anti-burglary protection for your laptop computer', 'quantidade': 996, 'preco': 8, '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:39.353" endtime="20220624 16:06:39.353"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.353" endtime="20220624 16:06:39.353"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.353" endtime="20220624 16:06:39.353"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.353" endtime="20220624 16:06:39.353"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.354" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.354" endtime="20220624 16:06:39.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.354" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.354" endtime="20220624 16:06:39.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.354" endtime="20220624 16:06:39.355"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.355" endtime="20220624 16:06:39.355"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.355" endtime="20220624 16:06:39.355"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.352" endtime="20220624 16:06:39.355"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.356" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:39.356" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.356" endtime="20220624 16:06:39.356"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.357" level="INFO">${index_produto} = 36</msg>
<status status="PASS" starttime="20220624 16:06:39.356" endtime="20220624 16:06:39.357"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.357" level="INFO">${produto} = {'nome': 'Ergo Screen E-II', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1200 @ 85Hz, Dot Pitch: 0.26mm', 'quantidade': 989, 'preco': 285, '_id': 'rypUQQwSXjyk3c63'}</msg>
<status status="PASS" starttime="20220624 16:06:39.357" endtime="20220624 16:06:39.357"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.357" endtime="20220624 16:06:39.357"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.357" endtime="20220624 16:06:39.357"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.357" endtime="20220624 16:06:39.357"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.358" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.358" endtime="20220624 16:06:39.358"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.358" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.358" endtime="20220624 16:06:39.358"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.358" endtime="20220624 16:06:39.359"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.359" endtime="20220624 16:06:39.359"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.359" endtime="20220624 16:06:39.359"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.355" endtime="20220624 16:06:39.359"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.360" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:39.360" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:39.359" endtime="20220624 16:06:39.360"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.360" level="INFO">${index_produto} = 20</msg>
<status status="PASS" starttime="20220624 16:06:39.360" endtime="20220624 16:06:39.360"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.361" level="INFO">${produto} = {'nome': 'Gaming Monster', 'descricao': '3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8', 'quantidade': 992, 'preco': 1200, '_id': 'RIriCXGV4GxADZHJ'}</msg>
<status status="PASS" starttime="20220624 16:06:39.361" endtime="20220624 16:06:39.361"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.361" endtime="20220624 16:06:39.361"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.361" endtime="20220624 16:06:39.361"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.361" endtime="20220624 16:06:39.361"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.362" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.361" endtime="20220624 16:06:39.362"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.362" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.362" endtime="20220624 16:06:39.362"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.362" endtime="20220624 16:06:39.362"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.362" endtime="20220624 16:06:39.363"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.363" endtime="20220624 16:06:39.363"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.359" endtime="20220624 16:06:39.363"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.363" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:39.363" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:39.363" endtime="20220624 16:06:39.363"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.364" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:39.364" endtime="20220624 16:06:39.364"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.364" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 985, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:39.364" endtime="20220624 16:06:39.364"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.365" endtime="20220624 16:06:39.365"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.365" endtime="20220624 16:06:39.365"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.364" endtime="20220624 16:06:39.365"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.365" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.365" endtime="20220624 16:06:39.365"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.366" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.365" endtime="20220624 16:06:39.366"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.366" endtime="20220624 16:06:39.366"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.366" endtime="20220624 16:06:39.367"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.367" endtime="20220624 16:06:39.367"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.363" endtime="20220624 16:06:39.367"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.367" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:39.367" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:39.367" endtime="20220624 16:06:39.367"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.368" level="INFO">${index_produto} = 30</msg>
<status status="PASS" starttime="20220624 16:06:39.367" endtime="20220624 16:06:39.368"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.368" level="INFO">${produto} = {'nome': 'Hurricane GX', 'descricao': 'Hurricane GX: PCI-E 691 GFLOPS game-optimized', 'quantidade': 993, 'preco': 101, '_id': 'k7RwzHsvxWkz58Nr'}</msg>
<status status="PASS" starttime="20220624 16:06:39.368" endtime="20220624 16:06:39.368"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.369" endtime="20220624 16:06:39.369"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.369" endtime="20220624 16:06:39.369"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.368" endtime="20220624 16:06:39.369"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.369" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.369" endtime="20220624 16:06:39.369"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.369" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.369" endtime="20220624 16:06:39.369"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.369" endtime="20220624 16:06:39.370"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.370" endtime="20220624 16:06:39.370"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.371" endtime="20220624 16:06:39.371"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.367" endtime="20220624 16:06:39.371"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.371" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:39.371" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:39.371" endtime="20220624 16:06:39.371"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.372" level="INFO">${index_produto} = 26</msg>
<status status="PASS" starttime="20220624 16:06:39.371" endtime="20220624 16:06:39.372"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.372" level="INFO">${produto} = {'nome': 'Smart Design', 'descricao': 'Complete package, 1 User, Image editing, processing', 'quantidade': 993, 'preco': 79, '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:39.372" endtime="20220624 16:06:39.372"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.373" endtime="20220624 16:06:39.373"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.373" endtime="20220624 16:06:39.373"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.372" endtime="20220624 16:06:39.373"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.373" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.373" endtime="20220624 16:06:39.373"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.373" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.373" endtime="20220624 16:06:39.373"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.373" endtime="20220624 16:06:39.374"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.374" endtime="20220624 16:06:39.374"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.374" endtime="20220624 16:06:39.374"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.371" endtime="20220624 16:06:39.374"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.375" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:39.375" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.375" endtime="20220624 16:06:39.375"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.376" level="INFO">${index_produto} = 28</msg>
<status status="PASS" starttime="20220624 16:06:39.375" endtime="20220624 16:06:39.376"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.376" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1 Wireless', 'descricao': '5.1 Headset, 40 Hz-20 kHz, Wireless', 'quantidade': 992, 'preco': 49, '_id': 'k2sDlx1dQOYwsV12'}</msg>
<status status="PASS" starttime="20220624 16:06:39.376" endtime="20220624 16:06:39.376"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.376" endtime="20220624 16:06:39.376"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.376" endtime="20220624 16:06:39.376"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.376" endtime="20220624 16:06:39.376"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.377" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.376" endtime="20220624 16:06:39.377"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.377" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.377" endtime="20220624 16:06:39.377"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.377" endtime="20220624 16:06:39.378"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.378" endtime="20220624 16:06:39.378"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.378" endtime="20220624 16:06:39.378"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.375" endtime="20220624 16:06:39.378"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.378" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:39.378" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:39.378" endtime="20220624 16:06:39.378"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.379" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.379" endtime="20220624 16:06:39.379"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.379" level="INFO">${produto} = {'nome': 'Web cam reality', 'descricao': 'Color webcam, color, High-Speed USB', 'quantidade': 985, 'preco': 39, '_id': 'apuGRFtiCyX0bAGm'}</msg>
<status status="PASS" starttime="20220624 16:06:39.379" endtime="20220624 16:06:39.379"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.380" endtime="20220624 16:06:39.380"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.380" endtime="20220624 16:06:39.380"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.379" endtime="20220624 16:06:39.380"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.380" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.380" endtime="20220624 16:06:39.380"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.381" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.380" endtime="20220624 16:06:39.381"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.381" endtime="20220624 16:06:39.381"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.381" endtime="20220624 16:06:39.382"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.382" endtime="20220624 16:06:39.382"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.378" endtime="20220624 16:06:39.382"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.382" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:39.382" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:39.382" endtime="20220624 16:06:39.382"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.383" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:39.382" endtime="20220624 16:06:39.383"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.383" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 987, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:39.383" endtime="20220624 16:06:39.383"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.384" endtime="20220624 16:06:39.384"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.384" endtime="20220624 16:06:39.384"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.383" endtime="20220624 16:06:39.384"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.384" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.384" endtime="20220624 16:06:39.384"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.384" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.384" endtime="20220624 16:06:39.384"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.384" endtime="20220624 16:06:39.385"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.385" endtime="20220624 16:06:39.386"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.386" endtime="20220624 16:06:39.386"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.382" endtime="20220624 16:06:39.386"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.386" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:39.386" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:39.386" endtime="20220624 16:06:39.386"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.387" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:39.386" endtime="20220624 16:06:39.387"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.387" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 988, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:39.387" endtime="20220624 16:06:39.387"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.388" endtime="20220624 16:06:39.388"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.388" endtime="20220624 16:06:39.388"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.387" endtime="20220624 16:06:39.388"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.388" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.388" endtime="20220624 16:06:39.388"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.388" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.388" endtime="20220624 16:06:39.388"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.388" endtime="20220624 16:06:39.389"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.389" endtime="20220624 16:06:39.389"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.389" endtime="20220624 16:06:39.390"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.386" endtime="20220624 16:06:39.390"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.390" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:39.390" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:39.390" endtime="20220624 16:06:39.390"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.391" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.390" endtime="20220624 16:06:39.391"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.391" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 986, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:39.391" endtime="20220624 16:06:39.391"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.392" endtime="20220624 16:06:39.392"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.391" endtime="20220624 16:06:39.392"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.391" endtime="20220624 16:06:39.392"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.392" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.392" endtime="20220624 16:06:39.392"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.392" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.392" endtime="20220624 16:06:39.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.392" endtime="20220624 16:06:39.393"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.393" endtime="20220624 16:06:39.393"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.393" endtime="20220624 16:06:39.394"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.390" endtime="20220624 16:06:39.394"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.394" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:39.394" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:39.394" endtime="20220624 16:06:39.394"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.395" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:39.394" endtime="20220624 16:06:39.395"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.395" level="INFO">${produto} = {'nome': 'Smartphone Beta', 'descricao': '5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support', 'quantidade': 994, 'preco': 30, '_id': 'EnPI6sCHtD7UoWQQ'}</msg>
<status status="PASS" starttime="20220624 16:06:39.395" endtime="20220624 16:06:39.395"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.396" endtime="20220624 16:06:39.396"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.396" endtime="20220624 16:06:39.396"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.395" endtime="20220624 16:06:39.396"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.396" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.396" endtime="20220624 16:06:39.396"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.397" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.396" endtime="20220624 16:06:39.397"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.397" endtime="20220624 16:06:39.397"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.397" endtime="20220624 16:06:39.398"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.398" endtime="20220624 16:06:39.398"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.394" endtime="20220624 16:06:39.398"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.398" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:39.398" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:39.398" endtime="20220624 16:06:39.398"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.399" level="INFO">${index_produto} = 27</msg>
<status status="PASS" starttime="20220624 16:06:39.398" endtime="20220624 16:06:39.399"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.399" level="INFO">${produto} = {'nome': 'Beam Breaker B-3', 'descricao': '1080p, DLP max. 12,3 Meter, 3D-ready', 'quantidade': 992, 'preco': 889, '_id': 'tEyF4402lspTNQCb'}</msg>
<status status="PASS" starttime="20220624 16:06:39.399" endtime="20220624 16:06:39.399"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.400" endtime="20220624 16:06:39.400"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.400" endtime="20220624 16:06:39.400"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.399" endtime="20220624 16:06:39.400"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.400" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.400" endtime="20220624 16:06:39.400"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.400" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.400" endtime="20220624 16:06:39.400"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.401" endtime="20220624 16:06:39.401"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.401" endtime="20220624 16:06:39.401"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.402" endtime="20220624 16:06:39.402"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.398" endtime="20220624 16:06:39.402"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.402" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:39.402" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:39.402" endtime="20220624 16:06:39.402"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.403" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.402" endtime="20220624 16:06:39.403"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.403" level="INFO">${produto} = {'nome': 'Gaming Monster Pro', 'descricao': '3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8', 'quantidade': 994, 'preco': 1700, '_id': 'AiU2jNoXJmOd3bDF'...</msg>
<status status="PASS" starttime="20220624 16:06:39.403" endtime="20220624 16:06:39.403"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.404" endtime="20220624 16:06:39.404"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.404" endtime="20220624 16:06:39.404"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.403" endtime="20220624 16:06:39.404"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.404" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.404" endtime="20220624 16:06:39.404"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.404" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.404" endtime="20220624 16:06:39.404"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.405" endtime="20220624 16:06:39.405"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.405" endtime="20220624 16:06:39.405"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.405" endtime="20220624 16:06:39.406"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.402" endtime="20220624 16:06:39.406"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.406" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:39.406" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:39.406" endtime="20220624 16:06:39.406"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.407" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:39.407" endtime="20220624 16:06:39.407"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.408" level="INFO">${produto} = {'nome': 'Power Pro Player 80', 'descricao': 'MP3-Player with 80 GB SSD and Color Display, can play movies', 'quantidade': 995, 'preco': 299, '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:39.407" endtime="20220624 16:06:39.408"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.408" endtime="20220624 16:06:39.408"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.408" endtime="20220624 16:06:39.408"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.408" endtime="20220624 16:06:39.408"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.408" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.408" endtime="20220624 16:06:39.408"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.409" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.409" endtime="20220624 16:06:39.409"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.409" endtime="20220624 16:06:39.409"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.409" endtime="20220624 16:06:39.410"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.410" endtime="20220624 16:06:39.410"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.406" endtime="20220624 16:06:39.410"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.410" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:39.410" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:39.410" endtime="20220624 16:06:39.410"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.411" level="INFO">${index_produto} = 22</msg>
<status status="PASS" starttime="20220624 16:06:39.410" endtime="20220624 16:06:39.411"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.411" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1', 'descricao': '5.1 Headset, 40 Hz-20 kHz, 3m cable', 'quantidade': 991, 'preco': 39, '_id': 'nCwNCrDsvlkZa8Zw'}</msg>
<status status="PASS" starttime="20220624 16:06:39.411" endtime="20220624 16:06:39.411"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.412" endtime="20220624 16:06:39.412"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.412" endtime="20220624 16:06:39.412"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.411" endtime="20220624 16:06:39.412"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.412" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.412" endtime="20220624 16:06:39.412"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.412" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.412" endtime="20220624 16:06:39.413"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.413" endtime="20220624 16:06:39.413"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.413" endtime="20220624 16:06:39.413"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.414" endtime="20220624 16:06:39.414"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.410" endtime="20220624 16:06:39.414"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.414" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:39.414" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:39.414" endtime="20220624 16:06:39.414"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.415" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.414" endtime="20220624 16:06:39.415"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.415" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 992, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:39.415" endtime="20220624 16:06:39.415"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.416" endtime="20220624 16:06:39.416"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.416" endtime="20220624 16:06:39.416"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.415" endtime="20220624 16:06:39.416"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.416" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.416" endtime="20220624 16:06:39.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.416" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.416" endtime="20220624 16:06:39.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.416" endtime="20220624 16:06:39.417"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.417" endtime="20220624 16:06:39.417"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.417" endtime="20220624 16:06:39.418"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.414" endtime="20220624 16:06:39.418"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.418" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:39.418" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:39.418" endtime="20220624 16:06:39.418"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.419" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:39.418" endtime="20220624 16:06:39.419"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.419" level="INFO">${produto} = {'nome': 'Flat Watch HD37', 'descricao': '37-inch, 1366x768 Pixel, 16:9, HDTV ready', 'quantidade': 991, 'preco': 1199, '_id': 'WcqUhn61i2GkONUE'}</msg>
<status status="PASS" starttime="20220624 16:06:39.419" endtime="20220624 16:06:39.419"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.419" endtime="20220624 16:06:39.419"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.419" endtime="20220624 16:06:39.419"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.419" endtime="20220624 16:06:39.419"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.420" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.420" endtime="20220624 16:06:39.420"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.420" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.420" endtime="20220624 16:06:39.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.420" endtime="20220624 16:06:39.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.421" endtime="20220624 16:06:39.421"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.421" endtime="20220624 16:06:39.421"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.418" endtime="20220624 16:06:39.421"/>
</iter>
<status status="PASS" starttime="20220624 16:06:39.332" endtime="20220624 16:06:39.421"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:39.454" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'HQiQD1cNBI3UpUlB', 'quantidade': 2}, {'idProduto': 'RhTxSnY2aSwilmOB', 'quantidade': 1}, {'idProduto': 'hwpiuIHmqe8VNCzw', 'quantidade': 3}, {'idProduto': 'ZRzOB3olwrZP7xE...</msg>
<status status="PASS" starttime="20220624 16:06:39.421" endtime="20220624 16:06:39.454"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:39.455" level="INFO">${carrinho} = {"produtos": [{"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 2}, {"idProduto": "RhTxSnY2aSwilmOB", "quantidade": 1}, {"idProduto": "hwpiuIHmqe8VNCzw", "quantidade": 3}, {"idProduto": "ZRzOB3olwrZP7xE...</msg>
<status status="PASS" starttime="20220624 16:06:39.454" endtime="20220624 16:06:39.455"/>
</kw>
<msg timestamp="20220624 16:06:39.455" level="INFO">${carrinho} = {"produtos": [{"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 2}, {"idProduto": "RhTxSnY2aSwilmOB", "quantidade": 1}, {"idProduto": "hwpiuIHmqe8VNCzw", "quantidade": 3}, {"idProduto": "ZRzOB3olwrZP7xE...</msg>
<status status="PASS" starttime="20220624 16:06:39.322" endtime="20220624 16:06:39.455"/>
</kw>
<kw name="POST EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.456" endtime="20220624 16:06:39.456"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.459" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '1210'} 
 body={"produtos": [{"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 2}, {"idProduto": "RhTxSnY2aSwilmOB", "quantidade": 1}, {"idProduto": "hwpiuIHmqe8VNCzw", "quantidade": 3}, {"idProduto": "ZRzOB3olwrZP7xEa", "quantidade": 3}, {"idProduto": "7nxOYuxBPGlpKz5A", "quantidade": 3}, {"idProduto": "GlZXPUNWt8islmer", "quantidade": 1}, {"idProduto": "rypUQQwSXjyk3c63", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 2}, {"idProduto": "DgHgvcvchJSgovHR", "quantidade": 2}, {"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 1}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 3}, {"idProduto": "k2sDlx1dQOYwsV12", "quantidade": 2}, {"idProduto": "apuGRFtiCyX0bAGm", "quantidade": 2}, {"idProduto": "F0Coyvmskz0RwoB9", "quantidade": 3}, {"idProduto": "CpaEbTwGcZnLduFY", "quantidade": 3}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 3}, {"idProduto": "EnPI6sCHtD7UoWQQ", "quantidade": 3}, {"idProduto": "tEyF4402lspTNQCb", "quantidade": 3}, {"idProduto": "AiU2jNoXJmOd3bDF", "quantidade": 2}, {"idProduto": "O00lW65c7tzOcrGU", "quantidade": 3}, {"idProduto": "nCwNCrDsvlkZa8Zw", "quantidade": 2}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 3}, {"idProduto": "WcqUhn61i2GkONUE", "quantidade": 1}]} 
 </msg>
<msg timestamp="20220624 16:06:39.459" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '32234c7b-ec6d-4142-961d-3a3fde230021', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:39.459" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.456" endtime="20220624 16:06:39.459"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.459" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.459" endtime="20220624 16:06:39.459"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.460" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:39.459" endtime="20220624 16:06:39.460"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.455" endtime="20220624 16:06:39.460"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.461" endtime="20220624 16:06:39.462"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.460" endtime="20220624 16:06:39.462"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.462" endtime="20220624 16:06:39.463"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.462" endtime="20220624 16:06:39.463"/>
</kw>
<tag>Cadastrar_Carrinho_Valido_Sem_Autenticacao</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:39.321" endtime="20220624 16:06:39.463"/>
</test>
<test id="s1-s4-s2-t7" name="Cenario: Tentar Cadastrar Carrinho Invalido Sem idProduto" line="72">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:39.466" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:39.465" endtime="20220624 16:06:39.466"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.465" endtime="20220624 16:06:39.466"/>
</kw>
<kw name="Gerar Carrinho Invalido Sem &quot;idProduto&quot;" library="carrinhos_keywords" sourcename="Gerar Carrinho Invalido Sem &quot;${key}&quot;">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.472" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:39.472" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bd3cbda5-bc8b-46df-87f7-cbb0a00c4bc9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 991,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 987,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 986,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 988,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 988,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 992,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 988,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 985,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 990,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 994,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 987,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 990,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 987,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 993,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 992,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 986,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 995,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 982,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 991,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 985,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 991,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 989,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 991,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 992,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 985,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 985,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 990,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 993,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 986,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 992,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 993,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:39.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.467" endtime="20220624 16:06:39.473"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.473" endtime="20220624 16:06:39.473"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.475" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.474" endtime="20220624 16:06:39.475"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.467" endtime="20220624 16:06:39.475"/>
</kw>
<msg timestamp="20220624 16:06:39.475" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.466" endtime="20220624 16:06:39.475"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.476" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:39.475" endtime="20220624 16:06:39.476"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.477" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.477" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.476" endtime="20220624 16:06:39.477"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.477" level="INFO">${quantidade_aleatoria} = 19</msg>
<status status="PASS" starttime="20220624 16:06:39.477" endtime="20220624 16:06:39.477"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:39.478" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:39.477" endtime="20220624 16:06:39.478"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.478" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:39.478" endtime="20220624 16:06:39.478"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.478" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.478" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.478" endtime="20220624 16:06:39.478"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.479" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:39.478" endtime="20220624 16:06:39.479"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.480" level="INFO">${produto} = {'nome': 'PC Lock', 'descricao': 'Robust 3m anti-burglary protection for your laptop computer', 'quantidade': 996, 'preco': 8, '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:39.479" endtime="20220624 16:06:39.480"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.480" endtime="20220624 16:06:39.480"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.480" endtime="20220624 16:06:39.480"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.480" endtime="20220624 16:06:39.480"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.481" level="INFO">${quantidade} = 611</msg>
<status status="PASS" starttime="20220624 16:06:39.480" endtime="20220624 16:06:39.481"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.481" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.481" endtime="20220624 16:06:39.481"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.481" endtime="20220624 16:06:39.482"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.482" endtime="20220624 16:06:39.482"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.483" level="INFO">Removed item with key 'idProduto' and value 'GlZXPUNWt8islmer'.</msg>
<status status="PASS" starttime="20220624 16:06:39.482" endtime="20220624 16:06:39.483"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.483" endtime="20220624 16:06:39.483"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.478" endtime="20220624 16:06:39.483"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.483" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:39.483" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:39.483" endtime="20220624 16:06:39.483"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.484" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:39.483" endtime="20220624 16:06:39.484"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.484" level="INFO">${produto} = {'nome': 'ITelO Vault Net', 'descricao': 'Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications', 'quantidade': 990, 'preco': 459, '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:39.484" endtime="20220624 16:06:39.484"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.485" endtime="20220624 16:06:39.485"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.485" endtime="20220624 16:06:39.485"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.484" endtime="20220624 16:06:39.485"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.485" level="INFO">${quantidade} = 553</msg>
<status status="PASS" starttime="20220624 16:06:39.485" endtime="20220624 16:06:39.485"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.486" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.486" endtime="20220624 16:06:39.486"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.486" endtime="20220624 16:06:39.486"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.486" endtime="20220624 16:06:39.487"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.487" level="INFO">Removed item with key 'idProduto' and value 'FCfDTwwdXcVf14BM'.</msg>
<status status="PASS" starttime="20220624 16:06:39.487" endtime="20220624 16:06:39.487"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.487" endtime="20220624 16:06:39.487"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.483" endtime="20220624 16:06:39.487"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.488" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:39.488" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:39.487" endtime="20220624 16:06:39.488"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.488" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:39.488" endtime="20220624 16:06:39.488"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.489" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 992, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:39.488" endtime="20220624 16:06:39.489"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.489" endtime="20220624 16:06:39.489"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.489" endtime="20220624 16:06:39.489"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.489" endtime="20220624 16:06:39.489"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.490" level="INFO">${quantidade} = 370</msg>
<status status="PASS" starttime="20220624 16:06:39.489" endtime="20220624 16:06:39.490"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.490" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.490" endtime="20220624 16:06:39.490"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.490" endtime="20220624 16:06:39.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.491" endtime="20220624 16:06:39.491"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.492" level="INFO">Removed item with key 'idProduto' and value 'JwKn0Q6ngqhxLTEi'.</msg>
<status status="PASS" starttime="20220624 16:06:39.491" endtime="20220624 16:06:39.492"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.492" endtime="20220624 16:06:39.492"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.487" endtime="20220624 16:06:39.492"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.492" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:39.492" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:39.492" endtime="20220624 16:06:39.492"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.493" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:39.492" endtime="20220624 16:06:39.493"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.493" level="INFO">${produto} = {'nome': 'Cordless Bluetooth Keyboard, english international', 'descricao': 'Cordless Bluetooth Keyboard with English keys', 'quantidade': 989, 'preco': 29, '_id': 'hwpiuIHmqe8VNCzw'}</msg>
<status status="PASS" starttime="20220624 16:06:39.493" endtime="20220624 16:06:39.493"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.494" endtime="20220624 16:06:39.494"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.494" endtime="20220624 16:06:39.494"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.493" endtime="20220624 16:06:39.494"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.495" level="INFO">${quantidade} = 816</msg>
<status status="PASS" starttime="20220624 16:06:39.494" endtime="20220624 16:06:39.495"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.495" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.495" endtime="20220624 16:06:39.495"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.495" endtime="20220624 16:06:39.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.496" endtime="20220624 16:06:39.496"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.497" level="INFO">Removed item with key 'idProduto' and value 'hwpiuIHmqe8VNCzw'.</msg>
<status status="PASS" starttime="20220624 16:06:39.497" endtime="20220624 16:06:39.497"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.497" endtime="20220624 16:06:39.497"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.492" endtime="20220624 16:06:39.497"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.497" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:39.497" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:39.497" endtime="20220624 16:06:39.497"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.498" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.498" endtime="20220624 16:06:39.498"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.498" level="INFO">${produto} = {'nome': 'Gaming Monster Pro', 'descricao': '3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8', 'quantidade': 994, 'preco': 1700, '_id': 'AiU2jNoXJmOd3bDF'...</msg>
<status status="PASS" starttime="20220624 16:06:39.498" endtime="20220624 16:06:39.498"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.499" endtime="20220624 16:06:39.499"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.499" endtime="20220624 16:06:39.499"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.499" endtime="20220624 16:06:39.499"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.500" level="INFO">${quantidade} = 55</msg>
<status status="PASS" starttime="20220624 16:06:39.499" endtime="20220624 16:06:39.500"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.500" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.500" endtime="20220624 16:06:39.500"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.500" endtime="20220624 16:06:39.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.501" endtime="20220624 16:06:39.501"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.501" level="INFO">Removed item with key 'idProduto' and value 'AiU2jNoXJmOd3bDF'.</msg>
<status status="PASS" starttime="20220624 16:06:39.501" endtime="20220624 16:06:39.501"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.501" endtime="20220624 16:06:39.501"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.497" endtime="20220624 16:06:39.501"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.502" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:39.502" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:39.502" endtime="20220624 16:06:39.502"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.502" level="INFO">${index_produto} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.502" endtime="20220624 16:06:39.502"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.503" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 988, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:39.503" endtime="20220624 16:06:39.503"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.503" endtime="20220624 16:06:39.503"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.503" endtime="20220624 16:06:39.503"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.503" endtime="20220624 16:06:39.503"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.504" level="INFO">${quantidade} = 73</msg>
<status status="PASS" starttime="20220624 16:06:39.503" endtime="20220624 16:06:39.504"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.504" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.504" endtime="20220624 16:06:39.504"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.504" endtime="20220624 16:06:39.505"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.505" endtime="20220624 16:06:39.505"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.505" level="INFO">Removed item with key 'idProduto' and value 'vF7r7dBj4AgssVDy'.</msg>
<status status="PASS" starttime="20220624 16:06:39.505" endtime="20220624 16:06:39.506"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.506" endtime="20220624 16:06:39.506"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.501" endtime="20220624 16:06:39.506"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.506" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:39.506" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.506" endtime="20220624 16:06:39.506"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.507" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:39.506" endtime="20220624 16:06:39.507"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.507" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 988, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:39.507" endtime="20220624 16:06:39.507"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.508" endtime="20220624 16:06:39.508"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.508" endtime="20220624 16:06:39.508"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.507" endtime="20220624 16:06:39.508"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.509" level="INFO">${quantidade} = 384</msg>
<status status="PASS" starttime="20220624 16:06:39.508" endtime="20220624 16:06:39.509"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.509" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.509" endtime="20220624 16:06:39.509"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.509" endtime="20220624 16:06:39.510"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.510" endtime="20220624 16:06:39.510"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.510" level="INFO">Removed item with key 'idProduto' and value 'CpaEbTwGcZnLduFY'.</msg>
<status status="PASS" starttime="20220624 16:06:39.510" endtime="20220624 16:06:39.510"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.510" endtime="20220624 16:06:39.510"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.506" endtime="20220624 16:06:39.510"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.511" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:39.511" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:39.511" endtime="20220624 16:06:39.511"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.512" level="INFO">${index_produto} = 30</msg>
<status status="PASS" starttime="20220624 16:06:39.511" endtime="20220624 16:06:39.512"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.512" level="INFO">${produto} = {'nome': 'Notebook Basic 17', 'descricao': 'Notebook Basic 17 with 2,80 GHz quad core, 17" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 993, 'preco': 1249, '_id': 'ikLmmmBskYjtY...</msg>
<status status="PASS" starttime="20220624 16:06:39.512" endtime="20220624 16:06:39.512"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.513" endtime="20220624 16:06:39.513"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.513" endtime="20220624 16:06:39.513"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.512" endtime="20220624 16:06:39.513"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.513" level="INFO">${quantidade} = 858</msg>
<status status="PASS" starttime="20220624 16:06:39.513" endtime="20220624 16:06:39.513"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.514" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.514" endtime="20220624 16:06:39.514"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.514" endtime="20220624 16:06:39.514"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.514" endtime="20220624 16:06:39.515"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.515" level="INFO">Removed item with key 'idProduto' and value 'ikLmmmBskYjtYPNo'.</msg>
<status status="PASS" starttime="20220624 16:06:39.515" endtime="20220624 16:06:39.515"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.515" endtime="20220624 16:06:39.515"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.510" endtime="20220624 16:06:39.515"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.515" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:39.516" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:39.515" endtime="20220624 16:06:39.516"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.516" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.516" endtime="20220624 16:06:39.516"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.517" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 992, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:39.516" endtime="20220624 16:06:39.517"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.517" endtime="20220624 16:06:39.517"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.517" endtime="20220624 16:06:39.517"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.517" endtime="20220624 16:06:39.517"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.518" level="INFO">${quantidade} = 619</msg>
<status status="PASS" starttime="20220624 16:06:39.517" endtime="20220624 16:06:39.518"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.518" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.518" endtime="20220624 16:06:39.518"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.518" endtime="20220624 16:06:39.519"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.519" endtime="20220624 16:06:39.519"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.519" level="INFO">Removed item with key 'idProduto' and value 'ArEArsbw9iH7meyd'.</msg>
<status status="PASS" starttime="20220624 16:06:39.519" endtime="20220624 16:06:39.519"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.520" endtime="20220624 16:06:39.520"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.515" endtime="20220624 16:06:39.520"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.520" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:39.520" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:39.520" endtime="20220624 16:06:39.520"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.521" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:39.520" endtime="20220624 16:06:39.521"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.521" level="INFO">${produto} = {'nome': 'USB Stick', 'descricao': 'USB 2.0 High-Speed 64 GB', 'quantidade': 995, 'preco': 35, '_id': 'Dx9dkgTndSJTuL1W'}</msg>
<status status="PASS" starttime="20220624 16:06:39.521" endtime="20220624 16:06:39.521"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.522" endtime="20220624 16:06:39.522"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.522" endtime="20220624 16:06:39.522"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.521" endtime="20220624 16:06:39.522"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.523" level="INFO">${quantidade} = 941</msg>
<status status="PASS" starttime="20220624 16:06:39.522" endtime="20220624 16:06:39.523"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.523" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.523" endtime="20220624 16:06:39.523"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.523" endtime="20220624 16:06:39.524"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.524" endtime="20220624 16:06:39.524"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.524" level="INFO">Removed item with key 'idProduto' and value 'Dx9dkgTndSJTuL1W'.</msg>
<status status="PASS" starttime="20220624 16:06:39.524" endtime="20220624 16:06:39.524"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.524" endtime="20220624 16:06:39.524"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.520" endtime="20220624 16:06:39.525"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.525" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:39.525" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:39.525" endtime="20220624 16:06:39.525"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.526" level="INFO">${index_produto} = 24</msg>
<status status="PASS" starttime="20220624 16:06:39.525" endtime="20220624 16:06:39.526"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.526" level="INFO">${produto} = {'nome': 'Track Mouse', 'descricao': 'Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play', 'quantidade': 985, 'preco': 11, '_id': 'b9EEy3P5l9HpD2pB'}</msg>
<status status="PASS" starttime="20220624 16:06:39.526" endtime="20220624 16:06:39.526"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.526" endtime="20220624 16:06:39.526"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.526" endtime="20220624 16:06:39.526"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.526" endtime="20220624 16:06:39.526"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.527" level="INFO">${quantidade} = 178</msg>
<status status="PASS" starttime="20220624 16:06:39.527" endtime="20220624 16:06:39.527"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.528" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.527" endtime="20220624 16:06:39.528"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.528" endtime="20220624 16:06:39.528"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.528" endtime="20220624 16:06:39.529"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.529" level="INFO">Removed item with key 'idProduto' and value 'b9EEy3P5l9HpD2pB'.</msg>
<status status="PASS" starttime="20220624 16:06:39.529" endtime="20220624 16:06:39.529"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.529" endtime="20220624 16:06:39.529"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.525" endtime="20220624 16:06:39.529"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.530" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:39.530" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.529" endtime="20220624 16:06:39.530"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.530" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:39.530" endtime="20220624 16:06:39.530"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.531" level="INFO">${produto} = {'nome': 'Sound Booster', 'descricao': 'PC multimedia speakers - optimized for Blutooth/A2DP', 'quantidade': 994, 'preco': 45, '_id': 'qe7RSBXih8PwxPl8'}</msg>
<status status="PASS" starttime="20220624 16:06:39.531" endtime="20220624 16:06:39.531"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.531" endtime="20220624 16:06:39.531"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.531" endtime="20220624 16:06:39.531"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.531" endtime="20220624 16:06:39.531"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.532" level="INFO">${quantidade} = 355</msg>
<status status="PASS" starttime="20220624 16:06:39.531" endtime="20220624 16:06:39.532"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.532" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.532" endtime="20220624 16:06:39.532"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.532" endtime="20220624 16:06:39.533"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.533" endtime="20220624 16:06:39.533"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.533" level="INFO">Removed item with key 'idProduto' and value 'qe7RSBXih8PwxPl8'.</msg>
<status status="PASS" starttime="20220624 16:06:39.533" endtime="20220624 16:06:39.533"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.533" endtime="20220624 16:06:39.534"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.529" endtime="20220624 16:06:39.534"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.534" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:39.534" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:39.534" endtime="20220624 16:06:39.534"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.535" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:39.534" endtime="20220624 16:06:39.535"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.535" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 988, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:39.535" endtime="20220624 16:06:39.535"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.535" endtime="20220624 16:06:39.535"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.535" endtime="20220624 16:06:39.535"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.535" endtime="20220624 16:06:39.536"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.536" level="INFO">${quantidade} = 426</msg>
<status status="PASS" starttime="20220624 16:06:39.536" endtime="20220624 16:06:39.536"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.536" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.536" endtime="20220624 16:06:39.536"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.537" endtime="20220624 16:06:39.537"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.537" endtime="20220624 16:06:39.537"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.538" level="INFO">Removed item with key 'idProduto' and value '7nxOYuxBPGlpKz5A'.</msg>
<status status="PASS" starttime="20220624 16:06:39.537" endtime="20220624 16:06:39.538"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.538" endtime="20220624 16:06:39.538"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.534" endtime="20220624 16:06:39.538"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.538" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:39.538" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:39.538" endtime="20220624 16:06:39.538"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.539" level="INFO">${index_produto} = 21</msg>
<status status="PASS" starttime="20220624 16:06:39.538" endtime="20220624 16:06:39.539"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.539" level="INFO">${produto} = {'nome': 'Flyer', 'descricao': 'Flyer for our product palette', 'quantidade': 992, 'preco': 1, '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:39.539" endtime="20220624 16:06:39.539"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.540" endtime="20220624 16:06:39.540"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.540" endtime="20220624 16:06:39.540"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.539" endtime="20220624 16:06:39.540"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.540" level="INFO">${quantidade} = 350</msg>
<status status="PASS" starttime="20220624 16:06:39.540" endtime="20220624 16:06:39.540"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.541" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.541" endtime="20220624 16:06:39.541"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.541" endtime="20220624 16:06:39.541"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.541" endtime="20220624 16:06:39.542"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.542" level="INFO">Removed item with key 'idProduto' and value 'ahZuij7poMV9daxr'.</msg>
<status status="PASS" starttime="20220624 16:06:39.542" endtime="20220624 16:06:39.542"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.542" endtime="20220624 16:06:39.542"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.538" endtime="20220624 16:06:39.542"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.542" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:39.543" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:39.542" endtime="20220624 16:06:39.543"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.543" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.543" endtime="20220624 16:06:39.543"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.544" level="INFO">${produto} = {'nome': 'Smart Design', 'descricao': 'Complete package, 1 User, Image editing, processing', 'quantidade': 993, 'preco': 79, '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:39.543" endtime="20220624 16:06:39.544"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.544" endtime="20220624 16:06:39.544"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.544" endtime="20220624 16:06:39.544"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.544" endtime="20220624 16:06:39.544"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.545" level="INFO">${quantidade} = 21</msg>
<status status="PASS" starttime="20220624 16:06:39.544" endtime="20220624 16:06:39.545"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.545" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.545" endtime="20220624 16:06:39.545"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.545" endtime="20220624 16:06:39.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.546" endtime="20220624 16:06:39.546"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.546" level="INFO">Removed item with key 'idProduto' and value 'ftkkuY0qIIn3MBPk'.</msg>
<status status="PASS" starttime="20220624 16:06:39.546" endtime="20220624 16:06:39.546"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.546" endtime="20220624 16:06:39.547"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.542" endtime="20220624 16:06:39.547"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.547" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:39.547" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:39.547" endtime="20220624 16:06:39.547"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.548" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:39.547" endtime="20220624 16:06:39.548"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.548" level="INFO">${produto} = {'nome': 'Flat Watch HD37', 'descricao': '37-inch, 1366x768 Pixel, 16:9, HDTV ready', 'quantidade': 991, 'preco': 1199, '_id': 'WcqUhn61i2GkONUE'}</msg>
<status status="PASS" starttime="20220624 16:06:39.548" endtime="20220624 16:06:39.548"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.549" endtime="20220624 16:06:39.549"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.549" endtime="20220624 16:06:39.549"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.548" endtime="20220624 16:06:39.549"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.549" level="INFO">${quantidade} = 341</msg>
<status status="PASS" starttime="20220624 16:06:39.549" endtime="20220624 16:06:39.549"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.550" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.549" endtime="20220624 16:06:39.550"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.550" endtime="20220624 16:06:39.550"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.550" endtime="20220624 16:06:39.550"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.551" level="INFO">Removed item with key 'idProduto' and value 'WcqUhn61i2GkONUE'.</msg>
<status status="PASS" starttime="20220624 16:06:39.551" endtime="20220624 16:06:39.551"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.551" endtime="20220624 16:06:39.551"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.547" endtime="20220624 16:06:39.551"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.551" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:39.551" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:39.551" endtime="20220624 16:06:39.551"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.552" level="INFO">${index_produto} = 18</msg>
<status status="PASS" starttime="20220624 16:06:39.551" endtime="20220624 16:06:39.552"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.552" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 989, 'preco': 299, '_id': 'ZRsnfqcRCQFu3p3R'}</msg>
<status status="PASS" starttime="20220624 16:06:39.552" endtime="20220624 16:06:39.552"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.553" endtime="20220624 16:06:39.553"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.553" endtime="20220624 16:06:39.553"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.552" endtime="20220624 16:06:39.553"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.554" level="INFO">${quantidade} = 880</msg>
<status status="PASS" starttime="20220624 16:06:39.553" endtime="20220624 16:06:39.554"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.554" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.554" endtime="20220624 16:06:39.554"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.554" endtime="20220624 16:06:39.554"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.555" endtime="20220624 16:06:39.555"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.555" level="INFO">Removed item with key 'idProduto' and value 'ZRsnfqcRCQFu3p3R'.</msg>
<status status="PASS" starttime="20220624 16:06:39.555" endtime="20220624 16:06:39.555"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.555" endtime="20220624 16:06:39.555"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.551" endtime="20220624 16:06:39.555"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.556" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:39.556" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:39.555" endtime="20220624 16:06:39.556"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.556" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:39.556" endtime="20220624 16:06:39.556"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.557" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 987, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:39.556" endtime="20220624 16:06:39.557"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.557" endtime="20220624 16:06:39.557"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.557" endtime="20220624 16:06:39.557"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.557" endtime="20220624 16:06:39.557"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.558" level="INFO">${quantidade} = 384</msg>
<status status="PASS" starttime="20220624 16:06:39.557" endtime="20220624 16:06:39.558"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.558" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.558" endtime="20220624 16:06:39.558"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.558" endtime="20220624 16:06:39.559"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.559" endtime="20220624 16:06:39.559"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.560" level="INFO">Removed item with key 'idProduto' and value 'F0Coyvmskz0RwoB9'.</msg>
<status status="PASS" starttime="20220624 16:06:39.559" endtime="20220624 16:06:39.560"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.560" endtime="20220624 16:06:39.560"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.555" endtime="20220624 16:06:39.560"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.560" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:39.560" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:39.560" endtime="20220624 16:06:39.560"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.561" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.560" endtime="20220624 16:06:39.561"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.562" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 986, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:39.561" endtime="20220624 16:06:39.562"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.562" endtime="20220624 16:06:39.562"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.562" endtime="20220624 16:06:39.562"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.562" endtime="20220624 16:06:39.562"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.563" level="INFO">${quantidade} = 975</msg>
<status status="PASS" starttime="20220624 16:06:39.562" endtime="20220624 16:06:39.563"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.564" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.563" endtime="20220624 16:06:39.564"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.564" endtime="20220624 16:06:39.564"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.564" endtime="20220624 16:06:39.565"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.565" level="INFO">Removed item with key 'idProduto' and value '4adMxRTEPyeiqujT'.</msg>
<status status="PASS" starttime="20220624 16:06:39.565" endtime="20220624 16:06:39.565"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.565" endtime="20220624 16:06:39.565"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.560" endtime="20220624 16:06:39.565"/>
</iter>
<status status="PASS" starttime="20220624 16:06:39.478" endtime="20220624 16:06:39.565"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:39.596" level="INFO">${carrinho} = {'produtos': [{'quantidade': 611}, {'quantidade': 553}, {'quantidade': 370}, {'quantidade': 816}, {'quantidade': 55}, {'quantidade': 73}, {'quantidade': 384}, {'quantidade': 858}, {'quantidade': 619},...</msg>
<status status="PASS" starttime="20220624 16:06:39.565" endtime="20220624 16:06:39.596"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:39.596" level="INFO">${carrinho} = {"produtos": [{"quantidade": 611}, {"quantidade": 553}, {"quantidade": 370}, {"quantidade": 816}, {"quantidade": 55}, {"quantidade": 73}, {"quantidade": 384}, {"quantidade": 858}, {"quantidade": 619},...</msg>
<status status="PASS" starttime="20220624 16:06:39.596" endtime="20220624 16:06:39.596"/>
</kw>
<msg timestamp="20220624 16:06:39.597" level="INFO">${carrinho} = {"produtos": [{"quantidade": 611}, {"quantidade": 553}, {"quantidade": 370}, {"quantidade": 816}, {"quantidade": 55}, {"quantidade": 73}, {"quantidade": 384}, {"quantidade": 858}, {"quantidade": 619},...</msg>
<status status="PASS" starttime="20220624 16:06:39.466" endtime="20220624 16:06:39.597"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:39.598" level="INFO">${nome} = Darrell Smith DVM</msg>
<status status="PASS" starttime="20220624 16:06:39.598" endtime="20220624 16:06:39.598"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:39.598" level="INFO">${email} = christopher46@example.com</msg>
<status status="PASS" starttime="20220624 16:06:39.598" endtime="20220624 16:06:39.598"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:39.599" level="INFO">${senha} = vU9sGVGc^f</msg>
<status status="PASS" starttime="20220624 16:06:39.598" endtime="20220624 16:06:39.599"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.599" level="INFO">&amp;{usuario} = { nome=Darrell Smith DVM | email=christopher46@example.com | password=vU9sGVGc^f | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:39.599" endtime="20220624 16:06:39.599"/>
</kw>
<msg timestamp="20220624 16:06:39.599" level="INFO">${usuario} = {'nome': 'Darrell Smith DVM', 'email': 'christopher46@example.com', 'password': 'vU9sGVGc^f', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:39.597" endtime="20220624 16:06:39.599"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.600" endtime="20220624 16:06:39.600"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.606" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '97', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Darrell+Smith+DVM&amp;email=christopher46%40example.com&amp;password=vU9sGVGc%5Ef&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:39.606" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7da9df69-0ff1-46d0-a12a-b14f03a55c4b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Bz2mZVSCoXVJzpdT"
} 
 </msg>
<msg timestamp="20220624 16:06:39.606" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.600" endtime="20220624 16:06:39.606"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.606" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.606" endtime="20220624 16:06:39.606"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.607" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'Bz2mZVSCoXVJzpdT'}</msg>
<status status="PASS" starttime="20220624 16:06:39.606" endtime="20220624 16:06:39.607"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.599" endtime="20220624 16:06:39.607"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.607" endtime="20220624 16:06:39.608"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.607" endtime="20220624 16:06:39.608"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.609" endtime="20220624 16:06:39.609"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.608" endtime="20220624 16:06:39.609"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.610" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:39.609" endtime="20220624 16:06:39.610"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.610" endtime="20220624 16:06:39.610"/>
</kw>
<msg timestamp="20220624 16:06:39.610" level="INFO">${usuario_valido} = {'nome': 'Darrell Smith DVM', 'email': 'christopher46@example.com', 'password': 'vU9sGVGc^f', 'administrador': 'true', '_id': 'Bz2mZVSCoXVJzpdT'}</msg>
<status status="PASS" starttime="20220624 16:06:39.597" endtime="20220624 16:06:39.610"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.611" level="INFO">Removed item with key 'nome' and value 'Darrell Smith DVM'.</msg>
<msg timestamp="20220624 16:06:39.611" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:39.611" level="INFO">Removed item with key '_id' and value 'Bz2mZVSCoXVJzpdT'.</msg>
<status status="PASS" starttime="20220624 16:06:39.610" endtime="20220624 16:06:39.611"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.611" endtime="20220624 16:06:39.611"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.614" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '55', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=christopher46%40example.com&amp;password=vU9sGVGc%5Ef 
 </msg>
<msg timestamp="20220624 16:06:39.614" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b300f9f1-585c-4fc1-99e6-3161434a6b48', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '288', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNocmlzdG9waGVyNDZAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InZVOXNHVkdjXmYiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.TFbQELXhZuAGSG8RzXSCX_pXTzCshx6yfvF4HWlcAhI"
} 
 </msg>
<msg timestamp="20220624 16:06:39.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.611" endtime="20220624 16:06:39.614"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.615" endtime="20220624 16:06:39.615"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.615" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNocmlzdG9waGVyNDZAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InZVOXNHVkdjXmYiLCJpYXQiOjE2NTY...</msg>
<status status="PASS" starttime="20220624 16:06:39.615" endtime="20220624 16:06:39.615"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.611" endtime="20220624 16:06:39.615"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.616" endtime="20220624 16:06:39.617"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.616" endtime="20220624 16:06:39.617"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.617" endtime="20220624 16:06:39.617"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.617" endtime="20220624 16:06:39.617"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.618" level="INFO">Length is 215</msg>
<status status="PASS" starttime="20220624 16:06:39.618" endtime="20220624 16:06:39.618"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.618" endtime="20220624 16:06:39.618"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.619" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNocmlzdG9waGVyNDZAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InZVOXNHVkdjXmYiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.TFbQELXhZuAG...</msg>
<status status="PASS" starttime="20220624 16:06:39.618" endtime="20220624 16:06:39.619"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.619" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNocmlzdG9waGVyNDZAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InZVOXNHVkdjXmYiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.TFbQELXhZ...</msg>
<status status="PASS" starttime="20220624 16:06:39.619" endtime="20220624 16:06:39.619"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.597" endtime="20220624 16:06:39.619"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.620" endtime="20220624 16:06:39.620"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.620" endtime="20220624 16:06:39.621"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.622" endtime="20220624 16:06:39.622"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.626" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNocmlzdG9waGVyNDZAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6InZVOXNHVkdjXmYiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.TFbQELXhZuAGSG8RzXSCX_pXTzCshx6yfvF4HWlcAhI', 'Content-Type': 'application/json', 'Content-Length': '410'} 
 body={"produtos": [{"quantidade": 611}, {"quantidade": 553}, {"quantidade": 370}, {"quantidade": 816}, {"quantidade": 55}, {"quantidade": 73}, {"quantidade": 384}, {"quantidade": 858}, {"quantidade": 619}, {"quantidade": 941}, {"quantidade": 178}, {"quantidade": 355}, {"quantidade": 426}, {"quantidade": 350}, {"quantidade": 21}, {"quantidade": 341}, {"quantidade": 880}, {"quantidade": 384}, {"quantidade": 975}]} 
 </msg>
<msg timestamp="20220624 16:06:39.627" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '273eef24-3d85-4f80-a300-52ced5035663', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1412', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "produtos[0].idProduto": "produtos[0].idProduto é obrigatório",
    "produtos[1].idProduto": "produtos[1].idProduto é obrigatório",
    "produtos[2].idProduto": "produtos[2].idProduto é obrigatório",
    "produtos[3].idProduto": "produtos[3].idProduto é obrigatório",
    "produtos[4].idProduto": "produtos[4].idProduto é obrigatório",
    "produtos[5].idProduto": "produtos[5].idProduto é obrigatório",
    "produtos[6].idProduto": "produtos[6].idProduto é obrigatório",
    "produtos[7].idProduto": "produtos[7].idProduto é obrigatório",
    "produtos[8].idProduto": "produtos[8].idProduto é obrigatório",
    "produtos[9].idProduto": "produtos[9].idProduto é obrigatório",
    "produtos[10].idProduto": "produtos[10].idProduto é obrigatório",
    "produtos[11].idProduto": "produtos[11].idProduto é obrigatório",
    "produtos[12].idProduto": "produtos[12].idProduto é obrigatório",
    "produtos[13].idProduto": "produtos[13].idProduto é obrigatório",
    "produtos[14].idProduto": "produtos[14].idProduto é obrigatório",
    "produtos[15].idProduto": "produtos[15].idProduto é obrigatório",
    "produtos[16].idProduto": "produtos[16].idProduto é obrigatório",
    "produtos[17].idProduto": "produtos[17].idProduto é obrigatório",
    "produtos[18].idProduto": "produtos[18].idProduto é obrigatório",
    "produtos": "produtos não contém 1 valor obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:39.627" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.622" endtime="20220624 16:06:39.627"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.627" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.627" endtime="20220624 16:06:39.627"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.628" level="INFO">${response_body} = {'produtos[0].idProduto': 'produtos[0].idProduto é obrigatório', 'produtos[1].idProduto': 'produtos[1].idProduto é obrigatório', 'produtos[2].idProduto': 'produtos[2].idProduto é obrigatório', 'produt...</msg>
<status status="PASS" starttime="20220624 16:06:39.627" endtime="20220624 16:06:39.628"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.621" endtime="20220624 16:06:39.628"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.629" endtime="20220624 16:06:39.630"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.629" endtime="20220624 16:06:39.630"/>
</kw>
<kw name="Validar &quot;produtos&quot; Com O Valor &quot;produtos não contém 1 valor obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.630" endtime="20220624 16:06:39.631"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.630" endtime="20220624 16:06:39.631"/>
</kw>
<tag>Cadastrar_Carrinho_Sem_idProduto</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:39.465" endtime="20220624 16:06:39.631"/>
</test>
<test id="s1-s4-s2-t8" name="Cenario: Tentar Cadastrar Carrinho Invalido Sem Quantidade" line="81">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:39.634" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:39.633" endtime="20220624 16:06:39.634"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.633" endtime="20220624 16:06:39.634"/>
</kw>
<kw name="Gerar Carrinho Invalido Sem &quot;quantidade&quot;" library="carrinhos_keywords" sourcename="Gerar Carrinho Invalido Sem &quot;${key}&quot;">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.638" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:39.638" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b5fe8300-d3e2-4c61-a74d-90b3a8a9240b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 991,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 987,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 986,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 988,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 988,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 992,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 988,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 985,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 990,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 994,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 987,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 990,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 987,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 993,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 992,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 986,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 995,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 982,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 991,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 985,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 991,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 989,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 991,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 992,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 985,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 985,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 990,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 993,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 986,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 992,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 993,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:39.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.635" endtime="20220624 16:06:39.639"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.639" endtime="20220624 16:06:39.639"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.640" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.639" endtime="20220624 16:06:39.640"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.634" endtime="20220624 16:06:39.641"/>
</kw>
<msg timestamp="20220624 16:06:39.641" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.634" endtime="20220624 16:06:39.641"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.642" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:39.641" endtime="20220624 16:06:39.642"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.642" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.642" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.642" endtime="20220624 16:06:39.642"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.643" level="INFO">${quantidade_aleatoria} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.642" endtime="20220624 16:06:39.643"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:39.643" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:39.643" endtime="20220624 16:06:39.643"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.643" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:39.643" endtime="20220624 16:06:39.643"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.644" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.644" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.644" endtime="20220624 16:06:39.644"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.645" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:39.644" endtime="20220624 16:06:39.645"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.645" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 988, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:39.645" endtime="20220624 16:06:39.645"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.645" endtime="20220624 16:06:39.645"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.645" endtime="20220624 16:06:39.645"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.645" endtime="20220624 16:06:39.645"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.646" level="INFO">${quantidade} = 725</msg>
<status status="PASS" starttime="20220624 16:06:39.645" endtime="20220624 16:06:39.646"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.646" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.646" endtime="20220624 16:06:39.646"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.647" endtime="20220624 16:06:39.647"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.647" endtime="20220624 16:06:39.647"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.648" level="INFO">Removed item with key 'quantidade' and value '725'.</msg>
<status status="PASS" starttime="20220624 16:06:39.647" endtime="20220624 16:06:39.648"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.648" endtime="20220624 16:06:39.648"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.644" endtime="20220624 16:06:39.648"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.648" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:39.648" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:39.648" endtime="20220624 16:06:39.648"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.649" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:39.648" endtime="20220624 16:06:39.649"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.649" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 987, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:39.649" endtime="20220624 16:06:39.649"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.650" endtime="20220624 16:06:39.650"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.650" endtime="20220624 16:06:39.650"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.649" endtime="20220624 16:06:39.650"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.650" level="INFO">${quantidade} = 496</msg>
<status status="PASS" starttime="20220624 16:06:39.650" endtime="20220624 16:06:39.650"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.651" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.651" endtime="20220624 16:06:39.651"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.651" endtime="20220624 16:06:39.651"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.652" endtime="20220624 16:06:39.652"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.652" level="INFO">Removed item with key 'quantidade' and value '496'.</msg>
<status status="PASS" starttime="20220624 16:06:39.652" endtime="20220624 16:06:39.652"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.652" endtime="20220624 16:06:39.652"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.648" endtime="20220624 16:06:39.652"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.653" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:39.653" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:39.652" endtime="20220624 16:06:39.653"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.653" level="INFO">${index_produto} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.653" endtime="20220624 16:06:39.653"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.654" level="INFO">${produto} = {'nome': 'Lovely Sound 5.1 Wireless', 'descricao': '5.1 Headset, 40 Hz-20 kHz, Wireless', 'quantidade': 992, 'preco': 49, '_id': 'k2sDlx1dQOYwsV12'}</msg>
<status status="PASS" starttime="20220624 16:06:39.653" endtime="20220624 16:06:39.654"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.654" endtime="20220624 16:06:39.654"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.654" endtime="20220624 16:06:39.654"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.654" endtime="20220624 16:06:39.654"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.655" level="INFO">${quantidade} = 357</msg>
<status status="PASS" starttime="20220624 16:06:39.654" endtime="20220624 16:06:39.655"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.655" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.655" endtime="20220624 16:06:39.655"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.655" endtime="20220624 16:06:39.656"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.656" endtime="20220624 16:06:39.656"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.656" level="INFO">Removed item with key 'quantidade' and value '357'.</msg>
<status status="PASS" starttime="20220624 16:06:39.656" endtime="20220624 16:06:39.656"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.656" endtime="20220624 16:06:39.657"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.652" endtime="20220624 16:06:39.657"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.657" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:39.657" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:39.657" endtime="20220624 16:06:39.657"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.658" level="INFO">${index_produto} = 9</msg>
<status status="PASS" starttime="20220624 16:06:39.657" endtime="20220624 16:06:39.658"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.658" level="INFO">${produto} = {'nome': 'USB Stick', 'descricao': 'USB 2.0 High-Speed 64 GB', 'quantidade': 995, 'preco': 35, '_id': 'Dx9dkgTndSJTuL1W'}</msg>
<status status="PASS" starttime="20220624 16:06:39.658" endtime="20220624 16:06:39.658"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.659" endtime="20220624 16:06:39.659"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.658" endtime="20220624 16:06:39.659"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.658" endtime="20220624 16:06:39.659"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.659" level="INFO">${quantidade} = 268</msg>
<status status="PASS" starttime="20220624 16:06:39.659" endtime="20220624 16:06:39.659"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.660" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.659" endtime="20220624 16:06:39.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.660" endtime="20220624 16:06:39.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.660" endtime="20220624 16:06:39.660"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.661" level="INFO">Removed item with key 'quantidade' and value '268'.</msg>
<status status="PASS" starttime="20220624 16:06:39.661" endtime="20220624 16:06:39.661"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.661" endtime="20220624 16:06:39.661"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.657" endtime="20220624 16:06:39.661"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.661" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:39.661" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:39.661" endtime="20220624 16:06:39.661"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.662" level="INFO">${index_produto} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.661" endtime="20220624 16:06:39.662"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.662" level="INFO">${produto} = {'nome': 'Beam Breaker B-3', 'descricao': '1080p, DLP max. 12,3 Meter, 3D-ready', 'quantidade': 992, 'preco': 889, '_id': 'tEyF4402lspTNQCb'}</msg>
<status status="PASS" starttime="20220624 16:06:39.662" endtime="20220624 16:06:39.662"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.663" endtime="20220624 16:06:39.663"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.663" endtime="20220624 16:06:39.663"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.663" endtime="20220624 16:06:39.663"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.664" level="INFO">${quantidade} = 300</msg>
<status status="PASS" starttime="20220624 16:06:39.663" endtime="20220624 16:06:39.664"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.664" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.664" endtime="20220624 16:06:39.664"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.664" endtime="20220624 16:06:39.665"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.665" endtime="20220624 16:06:39.665"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.665" level="INFO">Removed item with key 'quantidade' and value '300'.</msg>
<status status="PASS" starttime="20220624 16:06:39.665" endtime="20220624 16:06:39.665"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.665" endtime="20220624 16:06:39.665"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.661" endtime="20220624 16:06:39.665"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.666" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:39.666" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:39.666" endtime="20220624 16:06:39.666"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.666" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.666" endtime="20220624 16:06:39.667"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.667" level="INFO">${produto} = {'nome': 'Gaming Monster Pro', 'descricao': '3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8', 'quantidade': 994, 'preco': 1700, '_id': 'AiU2jNoXJmOd3bDF'...</msg>
<status status="PASS" starttime="20220624 16:06:39.667" endtime="20220624 16:06:39.667"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.667" endtime="20220624 16:06:39.667"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.667" endtime="20220624 16:06:39.667"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.667" endtime="20220624 16:06:39.667"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.668" level="INFO">${quantidade} = 714</msg>
<status status="PASS" starttime="20220624 16:06:39.667" endtime="20220624 16:06:39.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.668" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.668" endtime="20220624 16:06:39.668"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.668" endtime="20220624 16:06:39.669"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.669" endtime="20220624 16:06:39.669"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.669" level="INFO">Removed item with key 'quantidade' and value '714'.</msg>
<status status="PASS" starttime="20220624 16:06:39.669" endtime="20220624 16:06:39.669"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.670" endtime="20220624 16:06:39.670"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.665" endtime="20220624 16:06:39.670"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.670" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:39.670" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.670" endtime="20220624 16:06:39.670"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.671" level="INFO">${index_produto} = 19</msg>
<status status="PASS" starttime="20220624 16:06:39.670" endtime="20220624 16:06:39.671"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.671" level="INFO">${produto} = {'nome': 'Gaming Monster', 'descricao': '3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8', 'quantidade': 992, 'preco': 1200, '_id': 'RIriCXGV4GxADZHJ'}</msg>
<status status="PASS" starttime="20220624 16:06:39.671" endtime="20220624 16:06:39.671"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.671" endtime="20220624 16:06:39.672"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.671" endtime="20220624 16:06:39.672"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.671" endtime="20220624 16:06:39.672"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.672" level="INFO">${quantidade} = 732</msg>
<status status="PASS" starttime="20220624 16:06:39.672" endtime="20220624 16:06:39.672"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.673" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.672" endtime="20220624 16:06:39.673"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.673" endtime="20220624 16:06:39.673"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.673" endtime="20220624 16:06:39.674"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.674" level="INFO">Removed item with key 'quantidade' and value '732'.</msg>
<status status="PASS" starttime="20220624 16:06:39.674" endtime="20220624 16:06:39.674"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.674" endtime="20220624 16:06:39.674"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.670" endtime="20220624 16:06:39.674"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.674" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:39.674" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:39.674" endtime="20220624 16:06:39.674"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.675" level="INFO">${index_produto} = 19</msg>
<status status="PASS" starttime="20220624 16:06:39.675" endtime="20220624 16:06:39.675"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.675" level="INFO">${produto} = {'nome': 'PC Power Station', 'descricao': 'PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro', 'quantidade': 997, 'preco': 2399, '_id': 'RhTxSnY2aSwilmO...</msg>
<status status="PASS" starttime="20220624 16:06:39.675" endtime="20220624 16:06:39.676"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.676" endtime="20220624 16:06:39.676"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.676" endtime="20220624 16:06:39.676"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.676" endtime="20220624 16:06:39.676"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.677" level="INFO">${quantidade} = 149</msg>
<status status="PASS" starttime="20220624 16:06:39.676" endtime="20220624 16:06:39.677"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.677" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.677" endtime="20220624 16:06:39.677"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.677" endtime="20220624 16:06:39.678"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.678" endtime="20220624 16:06:39.678"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.678" level="INFO">Removed item with key 'quantidade' and value '149'.</msg>
<status status="PASS" starttime="20220624 16:06:39.678" endtime="20220624 16:06:39.678"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.678" endtime="20220624 16:06:39.678"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.674" endtime="20220624 16:06:39.679"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.679" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:39.679" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:39.679" endtime="20220624 16:06:39.679"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.680" level="INFO">${index_produto} = 11</msg>
<status status="PASS" starttime="20220624 16:06:39.679" endtime="20220624 16:06:39.680"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.680" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 987, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:39.680" endtime="20220624 16:06:39.680"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.680" endtime="20220624 16:06:39.680"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.680" endtime="20220624 16:06:39.680"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.680" endtime="20220624 16:06:39.680"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.681" level="INFO">${quantidade} = 484</msg>
<status status="PASS" starttime="20220624 16:06:39.680" endtime="20220624 16:06:39.681"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.681" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.681" endtime="20220624 16:06:39.681"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.681" endtime="20220624 16:06:39.682"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.682" endtime="20220624 16:06:39.682"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.682" level="INFO">Removed item with key 'quantidade' and value '484'.</msg>
<status status="PASS" starttime="20220624 16:06:39.682" endtime="20220624 16:06:39.683"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.683" endtime="20220624 16:06:39.683"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.679" endtime="20220624 16:06:39.683"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.683" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:39.683" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:39.683" endtime="20220624 16:06:39.683"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.684" level="INFO">${index_produto} = 27</msg>
<status status="PASS" starttime="20220624 16:06:39.683" endtime="20220624 16:06:39.684"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.684" level="INFO">${produto} = {'nome': 'Cordless Bluetooth Keyboard, english international', 'descricao': 'Cordless Bluetooth Keyboard with English keys', 'quantidade': 989, 'preco': 29, '_id': 'hwpiuIHmqe8VNCzw'}</msg>
<status status="PASS" starttime="20220624 16:06:39.684" endtime="20220624 16:06:39.684"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.685" endtime="20220624 16:06:39.685"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.685" endtime="20220624 16:06:39.685"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.684" endtime="20220624 16:06:39.685"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.686" level="INFO">${quantidade} = 773</msg>
<status status="PASS" starttime="20220624 16:06:39.685" endtime="20220624 16:06:39.686"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.686" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.686" endtime="20220624 16:06:39.686"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.686" endtime="20220624 16:06:39.686"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.686" endtime="20220624 16:06:39.687"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.687" level="INFO">Removed item with key 'quantidade' and value '773'.</msg>
<status status="PASS" starttime="20220624 16:06:39.687" endtime="20220624 16:06:39.687"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.687" endtime="20220624 16:06:39.687"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.683" endtime="20220624 16:06:39.687"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.688" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:39.688" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:39.687" endtime="20220624 16:06:39.688"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.688" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:39.688" endtime="20220624 16:06:39.688"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.689" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 988, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:39.688" endtime="20220624 16:06:39.689"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.689" endtime="20220624 16:06:39.689"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.689" endtime="20220624 16:06:39.689"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.689" endtime="20220624 16:06:39.689"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.690" level="INFO">${quantidade} = 975</msg>
<status status="PASS" starttime="20220624 16:06:39.689" endtime="20220624 16:06:39.690"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.690" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.690" endtime="20220624 16:06:39.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.690" endtime="20220624 16:06:39.691"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.691" endtime="20220624 16:06:39.691"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.691" level="INFO">Removed item with key 'quantidade' and value '975'.</msg>
<status status="PASS" starttime="20220624 16:06:39.691" endtime="20220624 16:06:39.691"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.691" endtime="20220624 16:06:39.691"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.687" endtime="20220624 16:06:39.691"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.692" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:39.692" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.692" endtime="20220624 16:06:39.692"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.692" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.692" endtime="20220624 16:06:39.693"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.693" level="INFO">${produto} = {'nome': 'Track Mouse', 'descricao': 'Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play', 'quantidade': 985, 'preco': 11, '_id': 'b9EEy3P5l9HpD2pB'}</msg>
<status status="PASS" starttime="20220624 16:06:39.693" endtime="20220624 16:06:39.693"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.693" endtime="20220624 16:06:39.693"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.693" endtime="20220624 16:06:39.693"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.693" endtime="20220624 16:06:39.693"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.694" level="INFO">${quantidade} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.693" endtime="20220624 16:06:39.694"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.695" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.695" endtime="20220624 16:06:39.695"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.695" endtime="20220624 16:06:39.695"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.695" endtime="20220624 16:06:39.696"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.696" level="INFO">Removed item with key 'quantidade' and value '46'.</msg>
<status status="PASS" starttime="20220624 16:06:39.696" endtime="20220624 16:06:39.696"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.696" endtime="20220624 16:06:39.696"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.692" endtime="20220624 16:06:39.696"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.696" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:39.697" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:39.696" endtime="20220624 16:06:39.697"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.697" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:39.697" endtime="20220624 16:06:39.697"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.698" level="INFO">${produto} = {'nome': 'Silverberry', 'descricao': 'Our new multifunctional Handheld with phone function in silver', 'quantidade': 990, 'preco': 549, '_id': 'Dw7bFasYs0n1UJui'}</msg>
<status status="PASS" starttime="20220624 16:06:39.697" endtime="20220624 16:06:39.698"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.698" endtime="20220624 16:06:39.698"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.698" endtime="20220624 16:06:39.698"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.698" endtime="20220624 16:06:39.698"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.699" level="INFO">${quantidade} = 897</msg>
<status status="PASS" starttime="20220624 16:06:39.698" endtime="20220624 16:06:39.699"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.699" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.699" endtime="20220624 16:06:39.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.699" endtime="20220624 16:06:39.700"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.700" endtime="20220624 16:06:39.700"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.700" level="INFO">Removed item with key 'quantidade' and value '897'.</msg>
<status status="PASS" starttime="20220624 16:06:39.700" endtime="20220624 16:06:39.700"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.700" endtime="20220624 16:06:39.700"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.696" endtime="20220624 16:06:39.700"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.701" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:39.701" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:39.701" endtime="20220624 16:06:39.701"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.701" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:39.701" endtime="20220624 16:06:39.701"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.702" level="INFO">${produto} = {'nome': 'Smart Office', 'descricao': 'Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)', 'quantidade': 985, 'preco': 89, '_id': 'UxBsipHgAI1f42Ny'}</msg>
<status status="PASS" starttime="20220624 16:06:39.702" endtime="20220624 16:06:39.702"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.702" endtime="20220624 16:06:39.702"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.702" endtime="20220624 16:06:39.702"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.702" endtime="20220624 16:06:39.702"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.703" level="INFO">${quantidade} = 733</msg>
<status status="PASS" starttime="20220624 16:06:39.702" endtime="20220624 16:06:39.703"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.703" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.703" endtime="20220624 16:06:39.703"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.703" endtime="20220624 16:06:39.704"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.704" endtime="20220624 16:06:39.704"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.704" level="INFO">Removed item with key 'quantidade' and value '733'.</msg>
<status status="PASS" starttime="20220624 16:06:39.704" endtime="20220624 16:06:39.704"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.705" endtime="20220624 16:06:39.705"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.700" endtime="20220624 16:06:39.705"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.705" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:39.705" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:39.705" endtime="20220624 16:06:39.705"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.706" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:39.705" endtime="20220624 16:06:39.706"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.706" level="INFO">${produto} = {'nome': 'Flat Watch HD37', 'descricao': '37-inch, 1366x768 Pixel, 16:9, HDTV ready', 'quantidade': 991, 'preco': 1199, '_id': 'WcqUhn61i2GkONUE'}</msg>
<status status="PASS" starttime="20220624 16:06:39.706" endtime="20220624 16:06:39.706"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.706" endtime="20220624 16:06:39.706"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.706" endtime="20220624 16:06:39.707"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.706" endtime="20220624 16:06:39.707"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.707" level="INFO">${quantidade} = 143</msg>
<status status="PASS" starttime="20220624 16:06:39.707" endtime="20220624 16:06:39.707"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.707" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.707" endtime="20220624 16:06:39.707"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.708" endtime="20220624 16:06:39.708"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.708" endtime="20220624 16:06:39.708"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.709" level="INFO">Removed item with key 'quantidade' and value '143'.</msg>
<status status="PASS" starttime="20220624 16:06:39.708" endtime="20220624 16:06:39.709"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.709" endtime="20220624 16:06:39.709"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.705" endtime="20220624 16:06:39.709"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.709" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:39.709" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:39.709" endtime="20220624 16:06:39.709"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.722" level="INFO">${index_produto} = 9</msg>
<status status="PASS" starttime="20220624 16:06:39.709" endtime="20220624 16:06:39.722"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.722" level="INFO">${produto} = {'nome': 'ITelO FlexTop I6300c', 'descricao': 'Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8', 'quantidade': 991, 'preco': 799, '_id': 'I7runwlH7VqYXvW4'}</msg>
<status status="PASS" starttime="20220624 16:06:39.722" endtime="20220624 16:06:39.722"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.723" endtime="20220624 16:06:39.723"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.723" endtime="20220624 16:06:39.723"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.722" endtime="20220624 16:06:39.723"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.724" level="INFO">${quantidade} = 304</msg>
<status status="PASS" starttime="20220624 16:06:39.723" endtime="20220624 16:06:39.724"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.724" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.724" endtime="20220624 16:06:39.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.724" endtime="20220624 16:06:39.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.725" endtime="20220624 16:06:39.725"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.725" level="INFO">Removed item with key 'quantidade' and value '304'.</msg>
<status status="PASS" starttime="20220624 16:06:39.725" endtime="20220624 16:06:39.725"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.725" endtime="20220624 16:06:39.725"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.709" endtime="20220624 16:06:39.725"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.726" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:39.726" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:39.725" endtime="20220624 16:06:39.726"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.726" level="INFO">${index_produto} = 21</msg>
<status status="PASS" starttime="20220624 16:06:39.726" endtime="20220624 16:06:39.726"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.727" level="INFO">${produto} = {'nome': 'Notebook Basic 15', 'descricao': 'Notebook Basic 15 with 2,80 GHz quad core, 15" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 986, 'preco': 956, '_id': 'ijDJyCQXRG0zUE...</msg>
<status status="PASS" starttime="20220624 16:06:39.726" endtime="20220624 16:06:39.727"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.727" endtime="20220624 16:06:39.727"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.727" endtime="20220624 16:06:39.727"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.727" endtime="20220624 16:06:39.727"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.728" level="INFO">${quantidade} = 173</msg>
<status status="PASS" starttime="20220624 16:06:39.727" endtime="20220624 16:06:39.728"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.728" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.728" endtime="20220624 16:06:39.728"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.728" endtime="20220624 16:06:39.729"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.729" endtime="20220624 16:06:39.729"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.729" level="INFO">Removed item with key 'quantidade' and value '173'.</msg>
<status status="PASS" starttime="20220624 16:06:39.729" endtime="20220624 16:06:39.729"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.729" endtime="20220624 16:06:39.730"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.725" endtime="20220624 16:06:39.730"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.730" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:39.730" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:39.730" endtime="20220624 16:06:39.730"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.731" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:39.730" endtime="20220624 16:06:39.731"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.731" level="INFO">${produto} = {'nome': 'PC Lock', 'descricao': 'Robust 3m anti-burglary protection for your laptop computer', 'quantidade': 996, 'preco': 8, '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:39.731" endtime="20220624 16:06:39.731"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.731" endtime="20220624 16:06:39.731"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.731" endtime="20220624 16:06:39.731"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.731" endtime="20220624 16:06:39.731"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.732" level="INFO">${quantidade} = 645</msg>
<status status="PASS" starttime="20220624 16:06:39.731" endtime="20220624 16:06:39.732"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.732" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.732" endtime="20220624 16:06:39.732"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.732" endtime="20220624 16:06:39.733"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.733" endtime="20220624 16:06:39.733"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.733" level="INFO">Removed item with key 'quantidade' and value '645'.</msg>
<status status="PASS" starttime="20220624 16:06:39.733" endtime="20220624 16:06:39.734"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.734" endtime="20220624 16:06:39.734"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.730" endtime="20220624 16:06:39.734"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.734" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:39.734" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:39.734" endtime="20220624 16:06:39.734"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.735" level="INFO">${index_produto} = 26</msg>
<status status="PASS" starttime="20220624 16:06:39.734" endtime="20220624 16:06:39.735"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.735" level="INFO">${produto} = {'nome': 'Cerdik Phone 7', 'descricao': '7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of ...</msg>
<status status="PASS" starttime="20220624 16:06:39.735" endtime="20220624 16:06:39.735"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.736" endtime="20220624 16:06:39.736"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.736" endtime="20220624 16:06:39.736"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.735" endtime="20220624 16:06:39.736"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.736" level="INFO">${quantidade} = 344</msg>
<status status="PASS" starttime="20220624 16:06:39.736" endtime="20220624 16:06:39.736"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.736" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.736" endtime="20220624 16:06:39.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.737" endtime="20220624 16:06:39.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.737" endtime="20220624 16:06:39.737"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.738" level="INFO">Removed item with key 'quantidade' and value '344'.</msg>
<status status="PASS" starttime="20220624 16:06:39.737" endtime="20220624 16:06:39.738"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.738" endtime="20220624 16:06:39.738"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.734" endtime="20220624 16:06:39.738"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.738" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:39.738" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:39.738" endtime="20220624 16:06:39.738"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.739" level="INFO">${index_produto} = 21</msg>
<status status="PASS" starttime="20220624 16:06:39.738" endtime="20220624 16:06:39.739"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.739" level="INFO">${produto} = {'nome': 'Hurricane GX', 'descricao': 'Hurricane GX: PCI-E 691 GFLOPS game-optimized', 'quantidade': 993, 'preco': 101, '_id': 'k7RwzHsvxWkz58Nr'}</msg>
<status status="PASS" starttime="20220624 16:06:39.739" endtime="20220624 16:06:39.739"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.740" endtime="20220624 16:06:39.740"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.740" endtime="20220624 16:06:39.740"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.739" endtime="20220624 16:06:39.740"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.740" level="INFO">${quantidade} = 978</msg>
<status status="PASS" starttime="20220624 16:06:39.740" endtime="20220624 16:06:39.740"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.741" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.741" endtime="20220624 16:06:39.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.741" endtime="20220624 16:06:39.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.741" endtime="20220624 16:06:39.742"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.742" level="INFO">Removed item with key 'quantidade' and value '978'.</msg>
<status status="PASS" starttime="20220624 16:06:39.742" endtime="20220624 16:06:39.742"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.742" endtime="20220624 16:06:39.742"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.738" endtime="20220624 16:06:39.742"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.742" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:39.743" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:39.742" endtime="20220624 16:06:39.743"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.743" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:39.743" endtime="20220624 16:06:39.743"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.744" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 982, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:39.743" endtime="20220624 16:06:39.744"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.744" endtime="20220624 16:06:39.744"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.744" endtime="20220624 16:06:39.744"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.744" endtime="20220624 16:06:39.744"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.745" level="INFO">${quantidade} = 952</msg>
<status status="PASS" starttime="20220624 16:06:39.744" endtime="20220624 16:06:39.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.745" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.745" endtime="20220624 16:06:39.745"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.745" endtime="20220624 16:06:39.746"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.746" endtime="20220624 16:06:39.746"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.746" level="INFO">Removed item with key 'quantidade' and value '952'.</msg>
<status status="PASS" starttime="20220624 16:06:39.746" endtime="20220624 16:06:39.746"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.746" endtime="20220624 16:06:39.746"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.742" endtime="20220624 16:06:39.746"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.747" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:39.747" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:39.747" endtime="20220624 16:06:39.747"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.747" level="INFO">${index_produto} = 20</msg>
<status status="PASS" starttime="20220624 16:06:39.747" endtime="20220624 16:06:39.747"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.748" level="INFO">${produto} = {'nome': 'Ergo Screen E-I', 'descricao': 'Optimum Hi-Resolution max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm', 'quantidade': 992, 'preco': 230, '_id': 'lhIaAKnyLoxLw9NE'}</msg>
<status status="PASS" starttime="20220624 16:06:39.748" endtime="20220624 16:06:39.748"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.748" endtime="20220624 16:06:39.748"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.748" endtime="20220624 16:06:39.748"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.748" endtime="20220624 16:06:39.748"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.749" level="INFO">${quantidade} = 882</msg>
<status status="PASS" starttime="20220624 16:06:39.748" endtime="20220624 16:06:39.749"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.749" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.749" endtime="20220624 16:06:39.749"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.749" endtime="20220624 16:06:39.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.750" endtime="20220624 16:06:39.750"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.750" level="INFO">Removed item with key 'quantidade' and value '882'.</msg>
<status status="PASS" starttime="20220624 16:06:39.750" endtime="20220624 16:06:39.750"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.750" endtime="20220624 16:06:39.751"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.746" endtime="20220624 16:06:39.751"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.751" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:39.751" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:39.751" endtime="20220624 16:06:39.751"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.752" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:39.751" endtime="20220624 16:06:39.752"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.752" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 992, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:39.752" endtime="20220624 16:06:39.752"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.752" endtime="20220624 16:06:39.752"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.752" endtime="20220624 16:06:39.752"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.752" endtime="20220624 16:06:39.752"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.753" level="INFO">${quantidade} = 627</msg>
<status status="PASS" starttime="20220624 16:06:39.753" endtime="20220624 16:06:39.753"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.753" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.753" endtime="20220624 16:06:39.753"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.753" endtime="20220624 16:06:39.754"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.754" endtime="20220624 16:06:39.754"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.754" level="INFO">Removed item with key 'quantidade' and value '627'.</msg>
<status status="PASS" starttime="20220624 16:06:39.754" endtime="20220624 16:06:39.755"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.755" endtime="20220624 16:06:39.755"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.751" endtime="20220624 16:06:39.755"/>
</iter>
<iter>
<var name="${i}">23</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.755" level="INFO">Length is 23</msg>
<msg timestamp="20220624 16:06:39.755" level="INFO">${quantidade_de_produtos} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.755" endtime="20220624 16:06:39.755"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.756" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:39.755" endtime="20220624 16:06:39.756"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.756" level="INFO">${produto} = {'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}</msg>
<status status="PASS" starttime="20220624 16:06:39.756" endtime="20220624 16:06:39.756"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.757" endtime="20220624 16:06:39.757"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.757" endtime="20220624 16:06:39.757"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.756" endtime="20220624 16:06:39.757"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.757" level="INFO">${quantidade} = 275</msg>
<status status="PASS" starttime="20220624 16:06:39.757" endtime="20220624 16:06:39.757"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.757" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.757" endtime="20220624 16:06:39.758"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.758" endtime="20220624 16:06:39.758"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.758" endtime="20220624 16:06:39.758"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.759" level="INFO">Removed item with key 'quantidade' and value '275'.</msg>
<status status="PASS" starttime="20220624 16:06:39.758" endtime="20220624 16:06:39.759"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.759" endtime="20220624 16:06:39.759"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.755" endtime="20220624 16:06:39.759"/>
</iter>
<iter>
<var name="${i}">24</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.759" level="INFO">Length is 22</msg>
<msg timestamp="20220624 16:06:39.759" level="INFO">${quantidade_de_produtos} = 22</msg>
<status status="PASS" starttime="20220624 16:06:39.759" endtime="20220624 16:06:39.759"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.760" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:39.759" endtime="20220624 16:06:39.760"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.760" level="INFO">${produto} = {'nome': 'Ergonomic Keyboard', 'descricao': 'Ergonomic USB Keyboard for Desktop, Plug&amp;Play', 'quantidade': 991, 'preco': 14, '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:39.760" endtime="20220624 16:06:39.760"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.761" endtime="20220624 16:06:39.761"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.761" endtime="20220624 16:06:39.761"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.760" endtime="20220624 16:06:39.761"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.761" level="INFO">${quantidade} = 307</msg>
<status status="PASS" starttime="20220624 16:06:39.761" endtime="20220624 16:06:39.761"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.762" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.762" endtime="20220624 16:06:39.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.762" endtime="20220624 16:06:39.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.762" endtime="20220624 16:06:39.763"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.763" level="INFO">Removed item with key 'quantidade' and value '307'.</msg>
<status status="PASS" starttime="20220624 16:06:39.763" endtime="20220624 16:06:39.763"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.763" endtime="20220624 16:06:39.763"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.759" endtime="20220624 16:06:39.763"/>
</iter>
<iter>
<var name="${i}">25</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.763" level="INFO">Length is 21</msg>
<msg timestamp="20220624 16:06:39.763" level="INFO">${quantidade_de_produtos} = 21</msg>
<status status="PASS" starttime="20220624 16:06:39.763" endtime="20220624 16:06:39.763"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.764" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:39.764" endtime="20220624 16:06:39.764"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.764" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 992, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:39.764" endtime="20220624 16:06:39.764"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.764" endtime="20220624 16:06:39.765"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.764" endtime="20220624 16:06:39.765"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.764" endtime="20220624 16:06:39.765"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.765" level="INFO">${quantidade} = 805</msg>
<status status="PASS" starttime="20220624 16:06:39.765" endtime="20220624 16:06:39.765"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.765" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.765" endtime="20220624 16:06:39.765"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.766" endtime="20220624 16:06:39.766"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.766" endtime="20220624 16:06:39.766"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.767" level="INFO">Removed item with key 'quantidade' and value '805'.</msg>
<status status="PASS" starttime="20220624 16:06:39.766" endtime="20220624 16:06:39.767"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.767" endtime="20220624 16:06:39.767"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.763" endtime="20220624 16:06:39.767"/>
</iter>
<iter>
<var name="${i}">26</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.768" level="INFO">Length is 20</msg>
<msg timestamp="20220624 16:06:39.768" level="INFO">${quantidade_de_produtos} = 20</msg>
<status status="PASS" starttime="20220624 16:06:39.767" endtime="20220624 16:06:39.768"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.768" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.768" endtime="20220624 16:06:39.768"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.769" level="INFO">${produto} = {'nome': 'ITelO Vault Net', 'descricao': 'Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications', 'quantidade': 990, 'preco': 459, '_id': 'FCfDTwwdXcVf14BM'}</msg>
<status status="PASS" starttime="20220624 16:06:39.768" endtime="20220624 16:06:39.769"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.769" endtime="20220624 16:06:39.769"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.769" endtime="20220624 16:06:39.769"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.769" endtime="20220624 16:06:39.769"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.770" level="INFO">${quantidade} = 492</msg>
<status status="PASS" starttime="20220624 16:06:39.769" endtime="20220624 16:06:39.770"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.770" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.770" endtime="20220624 16:06:39.770"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.770" endtime="20220624 16:06:39.770"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.771" endtime="20220624 16:06:39.771"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.771" level="INFO">Removed item with key 'quantidade' and value '492'.</msg>
<status status="PASS" starttime="20220624 16:06:39.771" endtime="20220624 16:06:39.772"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.772" endtime="20220624 16:06:39.772"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.767" endtime="20220624 16:06:39.772"/>
</iter>
<iter>
<var name="${i}">27</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.772" level="INFO">Length is 19</msg>
<msg timestamp="20220624 16:06:39.772" level="INFO">${quantidade_de_produtos} = 19</msg>
<status status="PASS" starttime="20220624 16:06:39.772" endtime="20220624 16:06:39.772"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.773" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:39.772" endtime="20220624 16:06:39.773"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.773" level="INFO">${produto} = {'nome': 'Smartphone Beta', 'descricao': '5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support', 'quantidade': 994, 'preco': 30, '_id': 'EnPI6sCHtD7UoWQQ'}</msg>
<status status="PASS" starttime="20220624 16:06:39.773" endtime="20220624 16:06:39.773"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.774" endtime="20220624 16:06:39.774"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.774" endtime="20220624 16:06:39.774"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.773" endtime="20220624 16:06:39.774"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.774" level="INFO">${quantidade} = 770</msg>
<status status="PASS" starttime="20220624 16:06:39.774" endtime="20220624 16:06:39.774"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.775" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.774" endtime="20220624 16:06:39.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.775" endtime="20220624 16:06:39.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.775" endtime="20220624 16:06:39.775"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.776" level="INFO">Removed item with key 'quantidade' and value '770'.</msg>
<status status="PASS" starttime="20220624 16:06:39.776" endtime="20220624 16:06:39.776"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.776" endtime="20220624 16:06:39.776"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.772" endtime="20220624 16:06:39.776"/>
</iter>
<iter>
<var name="${i}">28</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.776" level="INFO">Length is 18</msg>
<msg timestamp="20220624 16:06:39.776" level="INFO">${quantidade_de_produtos} = 18</msg>
<status status="PASS" starttime="20220624 16:06:39.776" endtime="20220624 16:06:39.776"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.777" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.776" endtime="20220624 16:06:39.777"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.778" level="INFO">${produto} = {'nome': 'Cepat Tablet 10.5', 'descricao': '10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 986, '...</msg>
<status status="PASS" starttime="20220624 16:06:39.777" endtime="20220624 16:06:39.778"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.778" endtime="20220624 16:06:39.778"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.778" endtime="20220624 16:06:39.778"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.778" endtime="20220624 16:06:39.778"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.779" level="INFO">${quantidade} = 964</msg>
<status status="PASS" starttime="20220624 16:06:39.778" endtime="20220624 16:06:39.779"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.779" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.779" endtime="20220624 16:06:39.779"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.779" endtime="20220624 16:06:39.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.780" endtime="20220624 16:06:39.780"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.780" level="INFO">Removed item with key 'quantidade' and value '964'.</msg>
<status status="PASS" starttime="20220624 16:06:39.780" endtime="20220624 16:06:39.780"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.780" endtime="20220624 16:06:39.780"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.776" endtime="20220624 16:06:39.780"/>
</iter>
<iter>
<var name="${i}">29</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.781" level="INFO">Length is 17</msg>
<msg timestamp="20220624 16:06:39.781" level="INFO">${quantidade_de_produtos} = 17</msg>
<status status="PASS" starttime="20220624 16:06:39.781" endtime="20220624 16:06:39.781"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.781" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.781" endtime="20220624 16:06:39.781"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.782" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 986, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:39.781" endtime="20220624 16:06:39.782"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.782" endtime="20220624 16:06:39.782"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.782" endtime="20220624 16:06:39.782"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.782" endtime="20220624 16:06:39.782"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.783" level="INFO">${quantidade} = 137</msg>
<status status="PASS" starttime="20220624 16:06:39.782" endtime="20220624 16:06:39.783"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.783" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.783" endtime="20220624 16:06:39.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.783" endtime="20220624 16:06:39.784"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.784" endtime="20220624 16:06:39.784"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.784" level="INFO">Removed item with key 'quantidade' and value '137'.</msg>
<status status="PASS" starttime="20220624 16:06:39.784" endtime="20220624 16:06:39.784"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.784" endtime="20220624 16:06:39.784"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.780" endtime="20220624 16:06:39.785"/>
</iter>
<iter>
<var name="${i}">30</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.785" level="INFO">Length is 16</msg>
<msg timestamp="20220624 16:06:39.785" level="INFO">${quantidade_de_produtos} = 16</msg>
<status status="PASS" starttime="20220624 16:06:39.785" endtime="20220624 16:06:39.785"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.785" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:39.785" endtime="20220624 16:06:39.786"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.786" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 988, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:39.786" endtime="20220624 16:06:39.786"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.786" endtime="20220624 16:06:39.786"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.786" endtime="20220624 16:06:39.786"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.786" endtime="20220624 16:06:39.786"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.787" level="INFO">${quantidade} = 477</msg>
<status status="PASS" starttime="20220624 16:06:39.786" endtime="20220624 16:06:39.787"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.787" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.787" endtime="20220624 16:06:39.787"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.787" endtime="20220624 16:06:39.788"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.788" endtime="20220624 16:06:39.788"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.788" level="INFO">Removed item with key 'quantidade' and value '477'.</msg>
<status status="PASS" starttime="20220624 16:06:39.788" endtime="20220624 16:06:39.788"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.788" endtime="20220624 16:06:39.789"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.785" endtime="20220624 16:06:39.789"/>
</iter>
<iter>
<var name="${i}">31</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.789" level="INFO">Length is 15</msg>
<msg timestamp="20220624 16:06:39.789" level="INFO">${quantidade_de_produtos} = 15</msg>
<status status="PASS" starttime="20220624 16:06:39.789" endtime="20220624 16:06:39.789"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.790" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.789" endtime="20220624 16:06:39.790"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.790" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 985, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:39.790" endtime="20220624 16:06:39.790"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.790" endtime="20220624 16:06:39.790"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.790" endtime="20220624 16:06:39.790"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.790" endtime="20220624 16:06:39.790"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.791" level="INFO">${quantidade} = 92</msg>
<status status="PASS" starttime="20220624 16:06:39.790" endtime="20220624 16:06:39.791"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.791" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.791" endtime="20220624 16:06:39.791"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.791" endtime="20220624 16:06:39.792"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.792" endtime="20220624 16:06:39.792"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.792" level="INFO">Removed item with key 'quantidade' and value '92'.</msg>
<status status="PASS" starttime="20220624 16:06:39.792" endtime="20220624 16:06:39.792"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.792" endtime="20220624 16:06:39.793"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.789" endtime="20220624 16:06:39.793"/>
</iter>
<iter>
<var name="${i}">32</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.793" level="INFO">Length is 14</msg>
<msg timestamp="20220624 16:06:39.793" level="INFO">${quantidade_de_produtos} = 14</msg>
<status status="PASS" starttime="20220624 16:06:39.793" endtime="20220624 16:06:39.793"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.794" level="INFO">${index_produto} = 6</msg>
<status status="PASS" starttime="20220624 16:06:39.793" endtime="20220624 16:06:39.794"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.794" level="INFO">${produto} = {'nome': 'Flyer', 'descricao': 'Flyer for our product palette', 'quantidade': 992, 'preco': 1, '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:39.794" endtime="20220624 16:06:39.794"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.794" endtime="20220624 16:06:39.795"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.794" endtime="20220624 16:06:39.795"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.794" endtime="20220624 16:06:39.795"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.795" level="INFO">${quantidade} = 483</msg>
<status status="PASS" starttime="20220624 16:06:39.795" endtime="20220624 16:06:39.795"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.796" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.795" endtime="20220624 16:06:39.796"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.796" endtime="20220624 16:06:39.796"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.796" endtime="20220624 16:06:39.796"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.797" level="INFO">Removed item with key 'quantidade' and value '483'.</msg>
<status status="PASS" starttime="20220624 16:06:39.796" endtime="20220624 16:06:39.797"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.797" endtime="20220624 16:06:39.797"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.793" endtime="20220624 16:06:39.797"/>
</iter>
<iter>
<var name="${i}">33</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.797" level="INFO">Length is 13</msg>
<msg timestamp="20220624 16:06:39.797" level="INFO">${quantidade_de_produtos} = 13</msg>
<status status="PASS" starttime="20220624 16:06:39.797" endtime="20220624 16:06:39.797"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.798" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.797" endtime="20220624 16:06:39.798"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.798" level="INFO">${produto} = {'nome': 'Power Pro Player 80', 'descricao': 'MP3-Player with 80 GB SSD and Color Display, can play movies', 'quantidade': 995, 'preco': 299, '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:39.798" endtime="20220624 16:06:39.798"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.799" endtime="20220624 16:06:39.799"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.799" endtime="20220624 16:06:39.799"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.798" endtime="20220624 16:06:39.799"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.799" level="INFO">${quantidade} = 239</msg>
<status status="PASS" starttime="20220624 16:06:39.799" endtime="20220624 16:06:39.799"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.800" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.799" endtime="20220624 16:06:39.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.800" endtime="20220624 16:06:39.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.800" endtime="20220624 16:06:39.800"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.801" level="INFO">Removed item with key 'quantidade' and value '239'.</msg>
<status status="PASS" starttime="20220624 16:06:39.801" endtime="20220624 16:06:39.801"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.801" endtime="20220624 16:06:39.801"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.797" endtime="20220624 16:06:39.801"/>
</iter>
<iter>
<var name="${i}">34</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.801" level="INFO">Length is 12</msg>
<msg timestamp="20220624 16:06:39.801" level="INFO">${quantidade_de_produtos} = 12</msg>
<status status="PASS" starttime="20220624 16:06:39.801" endtime="20220624 16:06:39.801"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.802" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.801" endtime="20220624 16:06:39.802"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.802" level="INFO">${produto} = {'nome': 'Web cam reality', 'descricao': 'Color webcam, color, High-Speed USB', 'quantidade': 985, 'preco': 39, '_id': 'apuGRFtiCyX0bAGm'}</msg>
<status status="PASS" starttime="20220624 16:06:39.802" endtime="20220624 16:06:39.802"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.803" endtime="20220624 16:06:39.803"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.803" endtime="20220624 16:06:39.803"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.802" endtime="20220624 16:06:39.803"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=${produto['quantidade']}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.803" level="INFO">${quantidade} = 269</msg>
<status status="PASS" starttime="20220624 16:06:39.803" endtime="20220624 16:06:39.803"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.804" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.803" endtime="20220624 16:06:39.804"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.804" endtime="20220624 16:06:39.804"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.804" endtime="20220624 16:06:39.805"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>${key}</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.805" level="INFO">Removed item with key 'quantidade' and value '269'.</msg>
<status status="PASS" starttime="20220624 16:06:39.805" endtime="20220624 16:06:39.805"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.805" endtime="20220624 16:06:39.805"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.801" endtime="20220624 16:06:39.805"/>
</iter>
<status status="PASS" starttime="20220624 16:06:39.643" endtime="20220624 16:06:39.805"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:39.835" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'CpaEbTwGcZnLduFY'}, {'idProduto': 'F0Coyvmskz0RwoB9'}, {'idProduto': 'k2sDlx1dQOYwsV12'}, {'idProduto': 'Dx9dkgTndSJTuL1W'}, {'idProduto': 'tEyF4402lspTNQCb'}, {'idProduto...</msg>
<status status="PASS" starttime="20220624 16:06:39.805" endtime="20220624 16:06:39.835"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:39.836" level="INFO">${carrinho} = {"produtos": [{"idProduto": "CpaEbTwGcZnLduFY"}, {"idProduto": "F0Coyvmskz0RwoB9"}, {"idProduto": "k2sDlx1dQOYwsV12"}, {"idProduto": "Dx9dkgTndSJTuL1W"}, {"idProduto": "tEyF4402lspTNQCb"}, {"idProduto...</msg>
<status status="PASS" starttime="20220624 16:06:39.835" endtime="20220624 16:06:39.836"/>
</kw>
<msg timestamp="20220624 16:06:39.836" level="INFO">${carrinho} = {"produtos": [{"idProduto": "CpaEbTwGcZnLduFY"}, {"idProduto": "F0Coyvmskz0RwoB9"}, {"idProduto": "k2sDlx1dQOYwsV12"}, {"idProduto": "Dx9dkgTndSJTuL1W"}, {"idProduto": "tEyF4402lspTNQCb"}, {"idProduto...</msg>
<status status="PASS" starttime="20220624 16:06:39.634" endtime="20220624 16:06:39.836"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:39.837" level="INFO">${nome} = John Santos</msg>
<status status="PASS" starttime="20220624 16:06:39.837" endtime="20220624 16:06:39.837"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:39.837" level="INFO">${email} = afranco@example.com</msg>
<status status="PASS" starttime="20220624 16:06:39.837" endtime="20220624 16:06:39.837"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:39.837" level="INFO">${senha} = +*3eFezpos</msg>
<status status="PASS" starttime="20220624 16:06:39.837" endtime="20220624 16:06:39.837"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.838" level="INFO">&amp;{usuario} = { nome=John Santos | email=afranco@example.com | password=+*3eFezpos | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:39.838" endtime="20220624 16:06:39.838"/>
</kw>
<msg timestamp="20220624 16:06:39.838" level="INFO">${usuario} = {'nome': 'John Santos', 'email': 'afranco@example.com', 'password': '+*3eFezpos', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:39.836" endtime="20220624 16:06:39.838"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.839" endtime="20220624 16:06:39.839"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.845" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '87', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=John+Santos&amp;email=afranco%40example.com&amp;password=%2B%2A3eFezpos&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:39.845" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ce07b843-b2fc-4944-93e3-4be4837f06e7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "kvqsew1cx99Lri3j"
} 
 </msg>
<msg timestamp="20220624 16:06:39.845" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.839" endtime="20220624 16:06:39.845"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.846" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.845" endtime="20220624 16:06:39.846"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.846" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'kvqsew1cx99Lri3j'}</msg>
<status status="PASS" starttime="20220624 16:06:39.846" endtime="20220624 16:06:39.846"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.838" endtime="20220624 16:06:39.846"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.847" endtime="20220624 16:06:39.848"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.847" endtime="20220624 16:06:39.848"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.848" endtime="20220624 16:06:39.848"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.848" endtime="20220624 16:06:39.848"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.849" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:39.848" endtime="20220624 16:06:39.849"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.849" endtime="20220624 16:06:39.849"/>
</kw>
<msg timestamp="20220624 16:06:39.850" level="INFO">${usuario_valido} = {'nome': 'John Santos', 'email': 'afranco@example.com', 'password': '+*3eFezpos', 'administrador': 'true', '_id': 'kvqsew1cx99Lri3j'}</msg>
<status status="PASS" starttime="20220624 16:06:39.836" endtime="20220624 16:06:39.850"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:39.850" level="INFO">Removed item with key 'nome' and value 'John Santos'.</msg>
<msg timestamp="20220624 16:06:39.850" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:39.850" level="INFO">Removed item with key '_id' and value 'kvqsew1cx99Lri3j'.</msg>
<status status="PASS" starttime="20220624 16:06:39.850" endtime="20220624 16:06:39.850"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.850" endtime="20220624 16:06:39.851"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.853" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=afranco%40example.com&amp;password=%2B%2A3eFezpos 
 </msg>
<msg timestamp="20220624 16:06:39.853" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '54120ec5-598f-48d3-94ad-387b22a0f9f6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '280', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFmcmFuY29AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IisqM2VGZXpwb3MiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.14B6XKlgMITXTzkmNw0ofGUcbHOlAayjyjW8syidui8"
} 
 </msg>
<msg timestamp="20220624 16:06:39.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.851" endtime="20220624 16:06:39.853"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.853" endtime="20220624 16:06:39.854"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.855" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFmcmFuY29AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IisqM2VGZXpwb3MiLCJpYXQiOjE2NTYwOTc1OTk...</msg>
<status status="PASS" starttime="20220624 16:06:39.854" endtime="20220624 16:06:39.855"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.850" endtime="20220624 16:06:39.855"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.855" endtime="20220624 16:06:39.856"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.855" endtime="20220624 16:06:39.856"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.856" endtime="20220624 16:06:39.857"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.856" endtime="20220624 16:06:39.857"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:39.857" level="INFO">Length is 207</msg>
<status status="PASS" starttime="20220624 16:06:39.857" endtime="20220624 16:06:39.858"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.857" endtime="20220624 16:06:39.858"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.858" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFmcmFuY29AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IisqM2VGZXpwb3MiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.14B6XKlgMITXTzkmNw0o...</msg>
<status status="PASS" starttime="20220624 16:06:39.858" endtime="20220624 16:06:39.858"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.859" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFmcmFuY29AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IisqM2VGZXpwb3MiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.14B6XKlgMITXTzkmN...</msg>
<status status="PASS" starttime="20220624 16:06:39.858" endtime="20220624 16:06:39.859"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.836" endtime="20220624 16:06:39.859"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.860" endtime="20220624 16:06:39.860"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.859" endtime="20220624 16:06:39.860"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:39.861" endtime="20220624 16:06:39.861"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.866" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFmcmFuY29AZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IisqM2VGZXpwb3MiLCJpYXQiOjE2NTYwOTc1OTksImV4cCI6MTY1NjA5ODE5OX0.14B6XKlgMITXTzkmNw0ofGUcbHOlAayjyjW8syidui8', 'Content-Type': 'application/json', 'Content-Length': '1239'} 
 body={"produtos": [{"idProduto": "CpaEbTwGcZnLduFY"}, {"idProduto": "F0Coyvmskz0RwoB9"}, {"idProduto": "k2sDlx1dQOYwsV12"}, {"idProduto": "Dx9dkgTndSJTuL1W"}, {"idProduto": "tEyF4402lspTNQCb"}, {"idProduto": "AiU2jNoXJmOd3bDF"}, {"idProduto": "RIriCXGV4GxADZHJ"}, {"idProduto": "RhTxSnY2aSwilmOB"}, {"idProduto": "HQiQD1cNBI3UpUlB"}, {"idProduto": "hwpiuIHmqe8VNCzw"}, {"idProduto": "7nxOYuxBPGlpKz5A"}, {"idProduto": "b9EEy3P5l9HpD2pB"}, {"idProduto": "Dw7bFasYs0n1UJui"}, {"idProduto": "UxBsipHgAI1f42Ny"}, {"idProduto": "WcqUhn61i2GkONUE"}, {"idProduto": "I7runwlH7VqYXvW4"}, {"idProduto": "ijDJyCQXRG0zUEPV"}, {"idProduto": "GlZXPUNWt8islmer"}, {"idProduto": "sBU6QOj9dSzUd9LE"}, {"idProduto": "k7RwzHsvxWkz58Nr"}, {"idProduto": "OrMw3RBLx971CAKX"}, {"idProduto": "lhIaAKnyLoxLw9NE"}, {"idProduto": "ArEArsbw9iH7meyd"}, {"idProduto": "3SZBJdzB87fc4ego"}, {"idProduto": "QGdxANGY4iYthlwM"}, {"idProduto": "JwKn0Q6ngqhxLTEi"}, {"idProduto": "FCfDTwwdXcVf14BM"}, {"idProduto": "EnPI6sCHtD7UoWQQ"}, {"idProduto": "MxCklG58QjmexNXH"}, {"idProduto": "4adMxRTEPyeiqujT"}, {"idProduto": "vF7r7dBj4AgssVDy"}, {"idProduto": "DgHgvcvchJSgovHR"}, {"idProduto": "ahZuij7poMV9daxr"}, {"idProduto": "O00lW65c7tzOcrGU"}, {"idProduto": "apuGRFtiCyX0bAGm"}]} 
 </msg>
<msg timestamp="20220624 16:06:39.866" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '224a49b1-b3c1-41b0-ac03-ec5b822a3679', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2634', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "produtos[0].quantidade": "produtos[0].quantidade é obrigatório",
    "produtos[1].quantidade": "produtos[1].quantidade é obrigatório",
    "produtos[2].quantidade": "produtos[2].quantidade é obrigatório",
    "produtos[3].quantidade": "produtos[3].quantidade é obrigatório",
    "produtos[4].quantidade": "produtos[4].quantidade é obrigatório",
    "produtos[5].quantidade": "produtos[5].quantidade é obrigatório",
    "produtos[6].quantidade": "produtos[6].quantidade é obrigatório",
    "produtos[7].quantidade": "produtos[7].quantidade é obrigatório",
    "produtos[8].quantidade": "produtos[8].quantidade é obrigatório",
    "produtos[9].quantidade": "produtos[9].quantidade é obrigatório",
    "produtos[10].quantidade": "produtos[10].quantidade é obrigatório",
    "produtos[11].quantidade": "produtos[11].quantidade é obrigatório",
    "produtos[12].quantidade": "produtos[12].quantidade é obrigatório",
    "produtos[13].quantidade": "produtos[13].quantidade é obrigatório",
    "produtos[14].quantidade": "produtos[14].quantidade é obrigatório",
    "produtos[15].quantidade": "produtos[15].quantidade é obrigatório",
    "produtos[16].quantidade": "produtos[16].quantidade é obrigatório",
    "produtos[17].quantidade": "produtos[17].quantidade é obrigatório",
    "produtos[18].quantidade": "produtos[18].quantidade é obrigatório",
    "produtos[19].quantidade": "produtos[19].quantidade é obrigatório",
    "produtos[20].quantidade": "produtos[20].quantidade é obrigatório",
    "produtos[21].quantidade": "produtos[21].quantidade é obrigatório",
    "produtos[22].quantidade": "produtos[22].quantidade é obrigatório",
    "produtos[23].quantidade": "produtos[23].quantidade é obrigatório",
    "produtos[24].quantidade": "produtos[24].quantidade é obrigatório",
    "produtos[25].quantidade": "produtos[25].quantidade é obrigatório",
    "produtos[26].quantidade": "produtos[26].quantidade é obrigatório",
    "produtos[27].quantidade": "produtos[27].quantidade é obrigatório",
    "produtos[28].quantidade": "produtos[28].quantidade é obrigatório",
    "produtos[29].quantidade": "produtos[29].quantidade é obrigatório",
    "produtos[30].quantidade": "produtos[30].quantidade é obrigatório",
    "produtos[31].quantidade": "produtos[31].quantidade é obrigatório",
    "produtos[32].quantidade": "produtos[32].quantidade é obrigatório",
    "produtos[33].quantidade": "produtos[33].quantidade é obrigatório",
    "produtos[34].quantidade": "produtos[34].quantidade é obrigatório",
    "produtos": "produtos não contém 1 valor obrigatório"
} 
 </msg>
<msg timestamp="20220624 16:06:39.866" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.861" endtime="20220624 16:06:39.866"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.867" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.867" endtime="20220624 16:06:39.867"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.868" level="INFO">${response_body} = {'produtos[0].quantidade': 'produtos[0].quantidade é obrigatório', 'produtos[1].quantidade': 'produtos[1].quantidade é obrigatório', 'produtos[2].quantidade': 'produtos[2].quantidade é obrigatório', '...</msg>
<status status="PASS" starttime="20220624 16:06:39.867" endtime="20220624 16:06:39.868"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.860" endtime="20220624 16:06:39.868"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:39.868" endtime="20220624 16:06:39.869"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.868" endtime="20220624 16:06:39.869"/>
</kw>
<kw name="Validar &quot;produtos&quot; Com O Valor &quot;produtos não contém 1 valor obrigatório&quot;" library="usuarios_keywords" sourcename="Validar &quot;${key}&quot; Com O Valor &quot;${value}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['${key}']}</arg>
<arg>${value}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:39.870" endtime="20220624 16:06:39.871"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.870" endtime="20220624 16:06:39.872"/>
</kw>
<tag>Cadastrar_Carrinho_Sem_Quantidade</tag>
<tag>Carrinhos</tag>
<tag>GET</tag>
<tag>POST_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:39.633" endtime="20220624 16:06:39.872"/>
</test>
<doc>Arquivo De Requisições Do Tipo POST DA API Do EndPoint Carrinhos</doc>
<status status="PASS" starttime="20220624 16:06:37.888" endtime="20220624 16:06:39.874"/>
</suite>
<suite id="s1-s4-s3" name="03 carrinhos DELETE" source="C:\Users\Cleo\Documents\Python\RoboTron_CleoMaia_Compass\test-cases\04_carrinhos\03_carrinhos_DELETE.robot">
<test id="s1-s4-s3-t1" name="Cenario: Concluir Compra Com Carrinho Valido" line="11">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:39.889" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:39.889" endtime="20220624 16:06:39.889"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.888" endtime="20220624 16:06:39.889"/>
</kw>
<kw name="Cadastrar Novo Carrinho" library="carrinhos_keywords">
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:39.896" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:39.896" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'aa93ea75-b531-442a-ab1e-31d3b184bcd8', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 991,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 987,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 986,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 988,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 988,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 994,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 992,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 988,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 985,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 990,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 995,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 994,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 987,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 990,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 996,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 987,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 993,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 992,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 986,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 995,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 982,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 991,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 985,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 991,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 989,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 991,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 992,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 985,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 985,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 990,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 993,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 986,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 992,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 993,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:39.896" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.891" endtime="20220624 16:06:39.896"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:39.896" endtime="20220624 16:06:39.897"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.898" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.897" endtime="20220624 16:06:39.898"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.891" endtime="20220624 16:06:39.898"/>
</kw>
<msg timestamp="20220624 16:06:39.899" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:39.891" endtime="20220624 16:06:39.899"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:39.900" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:39.899" endtime="20220624 16:06:39.900"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.900" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.900" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.900" endtime="20220624 16:06:39.900"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.901" level="INFO">${quantidade_aleatoria} = 29</msg>
<status status="PASS" starttime="20220624 16:06:39.900" endtime="20220624 16:06:39.901"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:39.902" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:39.902" endtime="20220624 16:06:39.902"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.902" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:39.902" endtime="20220624 16:06:39.902"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.903" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:39.903" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:39.903" endtime="20220624 16:06:39.903"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.904" level="INFO">${index_produto} = 38</msg>
<status status="PASS" starttime="20220624 16:06:39.903" endtime="20220624 16:06:39.904"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.905" level="INFO">${produto} = {'nome': 'Hurricane GX', 'descricao': 'Hurricane GX: PCI-E 691 GFLOPS game-optimized', 'quantidade': 993, 'preco': 101, '_id': 'k7RwzHsvxWkz58Nr'}</msg>
<status status="PASS" starttime="20220624 16:06:39.904" endtime="20220624 16:06:39.905"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.905" endtime="20220624 16:06:39.905"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.905" endtime="20220624 16:06:39.906"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.905" endtime="20220624 16:06:39.906"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.906" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.906" endtime="20220624 16:06:39.906"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.907" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.906" endtime="20220624 16:06:39.907"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.907" endtime="20220624 16:06:39.908"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.909" endtime="20220624 16:06:39.909"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.909" endtime="20220624 16:06:39.909"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.903" endtime="20220624 16:06:39.909"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.909" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:39.910" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:39.909" endtime="20220624 16:06:39.910"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.910" level="INFO">${index_produto} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.910" endtime="20220624 16:06:39.910"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.911" level="INFO">${produto} = {'nome': 'Notebook Basic 15', 'descricao': 'Notebook Basic 15 with 2,80 GHz quad core, 15" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 986, 'preco': 956, '_id': 'ijDJyCQXRG0zUE...</msg>
<status status="PASS" starttime="20220624 16:06:39.910" endtime="20220624 16:06:39.911"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.911" endtime="20220624 16:06:39.911"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.911" endtime="20220624 16:06:39.911"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.911" endtime="20220624 16:06:39.911"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.912" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.911" endtime="20220624 16:06:39.912"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.912" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.912" endtime="20220624 16:06:39.912"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.912" endtime="20220624 16:06:39.912"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.913" endtime="20220624 16:06:39.913"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.913" endtime="20220624 16:06:39.913"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.909" endtime="20220624 16:06:39.913"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.913" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:39.913" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:39.913" endtime="20220624 16:06:39.913"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.914" level="INFO">${index_produto} = 33</msg>
<status status="PASS" starttime="20220624 16:06:39.914" endtime="20220624 16:06:39.914"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.915" level="INFO">${produto} = {'nome': 'Smart Design', 'descricao': 'Complete package, 1 User, Image editing, processing', 'quantidade': 993, 'preco': 79, '_id': 'ftkkuY0qIIn3MBPk'}</msg>
<status status="PASS" starttime="20220624 16:06:39.914" endtime="20220624 16:06:39.915"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.915" endtime="20220624 16:06:39.915"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.915" endtime="20220624 16:06:39.915"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.915" endtime="20220624 16:06:39.915"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.915" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.915" endtime="20220624 16:06:39.915"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.916" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.916" endtime="20220624 16:06:39.916"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.916" endtime="20220624 16:06:39.916"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.917" endtime="20220624 16:06:39.917"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.917" endtime="20220624 16:06:39.918"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.913" endtime="20220624 16:06:39.918"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.918" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:39.918" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:39.918" endtime="20220624 16:06:39.918"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.919" level="INFO">${index_produto} = 19</msg>
<status status="PASS" starttime="20220624 16:06:39.918" endtime="20220624 16:06:39.919"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.919" level="INFO">${produto} = {'nome': 'Cepat Tablet 10.5', 'descricao': '10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor', 'quantidade': 986, '...</msg>
<status status="PASS" starttime="20220624 16:06:39.919" endtime="20220624 16:06:39.919"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.920" endtime="20220624 16:06:39.920"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.920" endtime="20220624 16:06:39.920"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.919" endtime="20220624 16:06:39.920"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.920" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.920" endtime="20220624 16:06:39.920"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.921" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.921" endtime="20220624 16:06:39.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.921" endtime="20220624 16:06:39.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.921" endtime="20220624 16:06:39.922"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.922" endtime="20220624 16:06:39.922"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.918" endtime="20220624 16:06:39.922"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.923" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:39.923" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:39.923" endtime="20220624 16:06:39.923"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.924" level="INFO">${index_produto} = 24</msg>
<status status="PASS" starttime="20220624 16:06:39.923" endtime="20220624 16:06:39.924"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.924" level="INFO">${produto} = {'nome': 'Smart Office', 'descricao': 'Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)', 'quantidade': 985, 'preco': 89, '_id': 'UxBsipHgAI1f42Ny'}</msg>
<status status="PASS" starttime="20220624 16:06:39.924" endtime="20220624 16:06:39.924"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.925" endtime="20220624 16:06:39.925"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.925" endtime="20220624 16:06:39.925"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.924" endtime="20220624 16:06:39.925"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.925" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.925" endtime="20220624 16:06:39.925"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.925" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.925" endtime="20220624 16:06:39.925"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.925" endtime="20220624 16:06:39.926"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.926" endtime="20220624 16:06:39.926"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.926" endtime="20220624 16:06:39.927"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.922" endtime="20220624 16:06:39.927"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.927" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:39.927" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:39.927" endtime="20220624 16:06:39.927"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.928" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:39.927" endtime="20220624 16:06:39.928"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.928" level="INFO">${produto} = {'nome': '10" Portable DVD player', 'descricao': '10" LCD Screen, storage battery holds up to 8 hours', 'quantidade': 985, 'preco': 449, '_id': 'DgHgvcvchJSgovHR'}</msg>
<status status="PASS" starttime="20220624 16:06:39.928" endtime="20220624 16:06:39.928"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.928" endtime="20220624 16:06:39.928"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.928" endtime="20220624 16:06:39.929"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.928" endtime="20220624 16:06:39.929"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.929" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.929" endtime="20220624 16:06:39.929"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.929" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.929" endtime="20220624 16:06:39.929"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.930" endtime="20220624 16:06:39.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.931" endtime="20220624 16:06:39.931"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.931" endtime="20220624 16:06:39.932"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.927" endtime="20220624 16:06:39.932"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.932" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:39.932" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:39.932" endtime="20220624 16:06:39.932"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.934" level="INFO">${index_produto} = 10</msg>
<status status="PASS" starttime="20220624 16:06:39.932" endtime="20220624 16:06:39.934"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.934" level="INFO">${produto} = {'nome': 'Smartphone Beta', 'descricao': '5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support', 'quantidade': 994, 'preco': 30, '_id': 'EnPI6sCHtD7UoWQQ'}</msg>
<status status="PASS" starttime="20220624 16:06:39.934" endtime="20220624 16:06:39.934"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.935" endtime="20220624 16:06:39.935"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.935" endtime="20220624 16:06:39.935"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.934" endtime="20220624 16:06:39.935"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.935" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.935" endtime="20220624 16:06:39.935"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.936" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.936" endtime="20220624 16:06:39.936"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.936" endtime="20220624 16:06:39.937"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.937" endtime="20220624 16:06:39.937"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.937" endtime="20220624 16:06:39.938"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.932" endtime="20220624 16:06:39.938"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.938" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:39.938" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:39.938" endtime="20220624 16:06:39.938"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.939" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.938" endtime="20220624 16:06:39.939"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.940" level="INFO">${produto} = {'nome': 'Gaming Monster Pro', 'descricao': '3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8', 'quantidade': 994, 'preco': 1700, '_id': 'AiU2jNoXJmOd3bDF'...</msg>
<status status="PASS" starttime="20220624 16:06:39.939" endtime="20220624 16:06:39.940"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.940" endtime="20220624 16:06:39.940"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.940" endtime="20220624 16:06:39.940"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.940" endtime="20220624 16:06:39.940"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.940" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.940" endtime="20220624 16:06:39.941"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.941" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.941" endtime="20220624 16:06:39.941"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.941" endtime="20220624 16:06:39.941"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.941" endtime="20220624 16:06:39.942"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.942" endtime="20220624 16:06:39.942"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.938" endtime="20220624 16:06:39.942"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.942" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:39.942" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:39.942" endtime="20220624 16:06:39.942"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.943" level="INFO">${index_produto} = 12</msg>
<status status="PASS" starttime="20220624 16:06:39.942" endtime="20220624 16:06:39.943"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.943" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 987, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:39.943" endtime="20220624 16:06:39.943"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.944" endtime="20220624 16:06:39.944"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.944" endtime="20220624 16:06:39.944"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.943" endtime="20220624 16:06:39.944"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.944" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.944" endtime="20220624 16:06:39.944"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.944" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.944" endtime="20220624 16:06:39.944"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.944" endtime="20220624 16:06:39.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.945" endtime="20220624 16:06:39.945"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.945" endtime="20220624 16:06:39.946"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.942" endtime="20220624 16:06:39.946"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.946" level="INFO">Length is 37</msg>
<msg timestamp="20220624 16:06:39.946" level="INFO">${quantidade_de_produtos} = 37</msg>
<status status="PASS" starttime="20220624 16:06:39.946" endtime="20220624 16:06:39.946"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.947" level="INFO">${index_produto} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.946" endtime="20220624 16:06:39.947"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.947" level="INFO">${produto} = {'nome': 'Flyer', 'descricao': 'Flyer for our product palette', 'quantidade': 992, 'preco': 1, '_id': 'ahZuij7poMV9daxr'}</msg>
<status status="PASS" starttime="20220624 16:06:39.947" endtime="20220624 16:06:39.947"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.947" endtime="20220624 16:06:39.947"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.947" endtime="20220624 16:06:39.947"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.947" endtime="20220624 16:06:39.947"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.948" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.948" endtime="20220624 16:06:39.948"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.948" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.948" endtime="20220624 16:06:39.948"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.948" endtime="20220624 16:06:39.949"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.949" endtime="20220624 16:06:39.949"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.949" endtime="20220624 16:06:39.949"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.946" endtime="20220624 16:06:39.949"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.949" level="INFO">Length is 36</msg>
<msg timestamp="20220624 16:06:39.949" level="INFO">${quantidade_de_produtos} = 36</msg>
<status status="PASS" starttime="20220624 16:06:39.949" endtime="20220624 16:06:39.949"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.950" level="INFO">${index_produto} = 8</msg>
<status status="PASS" starttime="20220624 16:06:39.950" endtime="20220624 16:06:39.950"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.950" level="INFO">${produto} = {'nome': 'USB Stick', 'descricao': 'USB 2.0 High-Speed 64 GB', 'quantidade': 995, 'preco': 35, '_id': 'Dx9dkgTndSJTuL1W'}</msg>
<status status="PASS" starttime="20220624 16:06:39.950" endtime="20220624 16:06:39.950"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.951" endtime="20220624 16:06:39.951"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.951" endtime="20220624 16:06:39.951"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.950" endtime="20220624 16:06:39.951"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.951" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.951" endtime="20220624 16:06:39.951"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.951" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.951" endtime="20220624 16:06:39.951"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.952" endtime="20220624 16:06:39.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.952" endtime="20220624 16:06:39.952"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.952" endtime="20220624 16:06:39.953"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.949" endtime="20220624 16:06:39.953"/>
</iter>
<iter>
<var name="${i}">11</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.953" level="INFO">Length is 35</msg>
<msg timestamp="20220624 16:06:39.953" level="INFO">${quantidade_de_produtos} = 35</msg>
<status status="PASS" starttime="20220624 16:06:39.953" endtime="20220624 16:06:39.953"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.954" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:39.953" endtime="20220624 16:06:39.954"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.954" level="INFO">${produto} = {'nome': 'Silverberry', 'descricao': 'Our new multifunctional Handheld with phone function in silver', 'quantidade': 990, 'preco': 549, '_id': 'Dw7bFasYs0n1UJui'}</msg>
<status status="PASS" starttime="20220624 16:06:39.954" endtime="20220624 16:06:39.954"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.954" endtime="20220624 16:06:39.954"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.954" endtime="20220624 16:06:39.954"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.954" endtime="20220624 16:06:39.954"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.955" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.954" endtime="20220624 16:06:39.955"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.955" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.955" endtime="20220624 16:06:39.955"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.955" endtime="20220624 16:06:39.956"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.956" endtime="20220624 16:06:39.956"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.956" endtime="20220624 16:06:39.956"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.953" endtime="20220624 16:06:39.956"/>
</iter>
<iter>
<var name="${i}">12</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.957" level="INFO">Length is 34</msg>
<msg timestamp="20220624 16:06:39.957" level="INFO">${quantidade_de_produtos} = 34</msg>
<status status="PASS" starttime="20220624 16:06:39.956" endtime="20220624 16:06:39.957"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.957" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:39.957" endtime="20220624 16:06:39.957"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.958" level="INFO">${produto} = {'nome': 'Power Pro Player 80', 'descricao': 'MP3-Player with 80 GB SSD and Color Display, can play movies', 'quantidade': 995, 'preco': 299, '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:39.957" endtime="20220624 16:06:39.958"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.958" endtime="20220624 16:06:39.958"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.958" endtime="20220624 16:06:39.958"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.958" endtime="20220624 16:06:39.958"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.958" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.958" endtime="20220624 16:06:39.958"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.959" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.959" endtime="20220624 16:06:39.959"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.959" endtime="20220624 16:06:39.959"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.959" endtime="20220624 16:06:39.960"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.960" endtime="20220624 16:06:39.960"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.956" endtime="20220624 16:06:39.960"/>
</iter>
<iter>
<var name="${i}">13</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.960" level="INFO">Length is 33</msg>
<msg timestamp="20220624 16:06:39.960" level="INFO">${quantidade_de_produtos} = 33</msg>
<status status="PASS" starttime="20220624 16:06:39.960" endtime="20220624 16:06:39.960"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.961" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:39.960" endtime="20220624 16:06:39.961"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.961" level="INFO">${produto} = {'nome': 'Ergonomic Keyboard', 'descricao': 'Ergonomic USB Keyboard for Desktop, Plug&amp;Play', 'quantidade': 991, 'preco': 14, '_id': 'QGdxANGY4iYthlwM'}</msg>
<status status="PASS" starttime="20220624 16:06:39.961" endtime="20220624 16:06:39.961"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.962" endtime="20220624 16:06:39.962"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.962" endtime="20220624 16:06:39.962"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.961" endtime="20220624 16:06:39.962"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.962" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.962" endtime="20220624 16:06:39.962"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.962" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.962" endtime="20220624 16:06:39.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.962" endtime="20220624 16:06:39.963"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.963" endtime="20220624 16:06:39.963"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.963" endtime="20220624 16:06:39.963"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.960" endtime="20220624 16:06:39.964"/>
</iter>
<iter>
<var name="${i}">14</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.964" level="INFO">Length is 32</msg>
<msg timestamp="20220624 16:06:39.964" level="INFO">${quantidade_de_produtos} = 32</msg>
<status status="PASS" starttime="20220624 16:06:39.964" endtime="20220624 16:06:39.964"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.964" level="INFO">${index_produto} = 20</msg>
<status status="PASS" starttime="20220624 16:06:39.964" endtime="20220624 16:06:39.965"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.965" level="INFO">${produto} = {'nome': 'Track Mouse', 'descricao': 'Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play', 'quantidade': 985, 'preco': 11, '_id': 'b9EEy3P5l9HpD2pB'}</msg>
<status status="PASS" starttime="20220624 16:06:39.965" endtime="20220624 16:06:39.965"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.965" endtime="20220624 16:06:39.965"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.965" endtime="20220624 16:06:39.965"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.965" endtime="20220624 16:06:39.965"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.966" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.965" endtime="20220624 16:06:39.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.966" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.966" endtime="20220624 16:06:39.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.966" endtime="20220624 16:06:39.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.966" endtime="20220624 16:06:39.966"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.966" endtime="20220624 16:06:39.966"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.964" endtime="20220624 16:06:39.966"/>
</iter>
<iter>
<var name="${i}">15</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.967" level="INFO">Length is 31</msg>
<msg timestamp="20220624 16:06:39.967" level="INFO">${quantidade_de_produtos} = 31</msg>
<status status="PASS" starttime="20220624 16:06:39.967" endtime="20220624 16:06:39.967"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.967" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.967" endtime="20220624 16:06:39.968"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.968" level="INFO">${produto} = {'nome': 'ITelo MusicStick', 'descricao': '64 GB USB Music-on-Available-Stick', 'quantidade': 992, 'preco': 45, '_id': 'ArEArsbw9iH7meyd'}</msg>
<status status="PASS" starttime="20220624 16:06:39.968" endtime="20220624 16:06:39.968"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.969" endtime="20220624 16:06:39.969"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.969" endtime="20220624 16:06:39.969"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.968" endtime="20220624 16:06:39.969"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.969" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.969" endtime="20220624 16:06:39.969"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.970" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.969" endtime="20220624 16:06:39.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.970" endtime="20220624 16:06:39.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.970" endtime="20220624 16:06:39.971"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.971" endtime="20220624 16:06:39.971"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.967" endtime="20220624 16:06:39.971"/>
</iter>
<iter>
<var name="${i}">16</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.972" level="INFO">Length is 30</msg>
<msg timestamp="20220624 16:06:39.972" level="INFO">${quantidade_de_produtos} = 30</msg>
<status status="PASS" starttime="20220624 16:06:39.971" endtime="20220624 16:06:39.972"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.972" level="INFO">${index_produto} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.972" endtime="20220624 16:06:39.972"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.973" level="INFO">${produto} = {'nome': 'Designer Mousepad', 'descricao': 'ITelO Mousepad Special Edition', 'quantidade': 986, 'preco': 12, '_id': '4adMxRTEPyeiqujT'}</msg>
<status status="PASS" starttime="20220624 16:06:39.972" endtime="20220624 16:06:39.973"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.973" endtime="20220624 16:06:39.973"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.973" endtime="20220624 16:06:39.973"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.973" endtime="20220624 16:06:39.973"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.973" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.973" endtime="20220624 16:06:39.973"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.974" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.973" endtime="20220624 16:06:39.974"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.974" endtime="20220624 16:06:39.974"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.974" endtime="20220624 16:06:39.975"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.975" endtime="20220624 16:06:39.975"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.971" endtime="20220624 16:06:39.975"/>
</iter>
<iter>
<var name="${i}">17</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.975" level="INFO">Length is 29</msg>
<msg timestamp="20220624 16:06:39.975" level="INFO">${quantidade_de_produtos} = 29</msg>
<status status="PASS" starttime="20220624 16:06:39.975" endtime="20220624 16:06:39.975"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.976" level="INFO">${index_produto} = 15</msg>
<status status="PASS" starttime="20220624 16:06:39.975" endtime="20220624 16:06:39.976"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.976" level="INFO">${produto} = {'nome': 'ITelO Vault', 'descricao': 'Digital Organizer with State-of-the-Art Storage Encryption', 'quantidade': 989, 'preco': 299, '_id': 'ZRsnfqcRCQFu3p3R'}</msg>
<status status="PASS" starttime="20220624 16:06:39.976" endtime="20220624 16:06:39.976"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.977" endtime="20220624 16:06:39.977"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.977" endtime="20220624 16:06:39.977"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.976" endtime="20220624 16:06:39.977"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.977" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.977" endtime="20220624 16:06:39.977"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.977" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.977" endtime="20220624 16:06:39.977"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.977" endtime="20220624 16:06:39.978"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.978" endtime="20220624 16:06:39.978"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.978" endtime="20220624 16:06:39.978"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.975" endtime="20220624 16:06:39.978"/>
</iter>
<iter>
<var name="${i}">18</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.979" level="INFO">Length is 28</msg>
<msg timestamp="20220624 16:06:39.979" level="INFO">${quantidade_de_produtos} = 28</msg>
<status status="PASS" starttime="20220624 16:06:39.979" endtime="20220624 16:06:39.979"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.980" level="INFO">${index_produto} = 5</msg>
<status status="PASS" starttime="20220624 16:06:39.979" endtime="20220624 16:06:39.980"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.981" level="INFO">${produto} = {'nome': 'Copperberry', 'descricao': 'Our new multifunctional Handheld with phone function in copper', 'quantidade': 987, 'preco': 549, '_id': 'F0Coyvmskz0RwoB9'}</msg>
<status status="PASS" starttime="20220624 16:06:39.980" endtime="20220624 16:06:39.981"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.981" endtime="20220624 16:06:39.981"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.981" endtime="20220624 16:06:39.981"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.981" endtime="20220624 16:06:39.981"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.982" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.981" endtime="20220624 16:06:39.982"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.982" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.982" endtime="20220624 16:06:39.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.982" endtime="20220624 16:06:39.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.983" endtime="20220624 16:06:39.983"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.983" endtime="20220624 16:06:39.983"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.978" endtime="20220624 16:06:39.983"/>
</iter>
<iter>
<var name="${i}">19</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.983" level="INFO">Length is 27</msg>
<msg timestamp="20220624 16:06:39.983" level="INFO">${quantidade_de_produtos} = 27</msg>
<status status="PASS" starttime="20220624 16:06:39.983" endtime="20220624 16:06:39.983"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.984" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.983" endtime="20220624 16:06:39.984"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.984" level="INFO">${produto} = {'nome': 'Bending Screen 21HD', 'descricao': 'Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub', 'quantidade': 987, 'preco': 250, '_id': '3xTNa4i2sU4...</msg>
<status status="PASS" starttime="20220624 16:06:39.984" endtime="20220624 16:06:39.984"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.985" endtime="20220624 16:06:39.985"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.985" endtime="20220624 16:06:39.985"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.984" endtime="20220624 16:06:39.985"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.985" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.985" endtime="20220624 16:06:39.985"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.986" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.985" endtime="20220624 16:06:39.986"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.986" endtime="20220624 16:06:39.986"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.986" endtime="20220624 16:06:39.986"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.987" endtime="20220624 16:06:39.987"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.983" endtime="20220624 16:06:39.987"/>
</iter>
<iter>
<var name="${i}">20</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.987" level="INFO">Length is 26</msg>
<msg timestamp="20220624 16:06:39.987" level="INFO">${quantidade_de_produtos} = 26</msg>
<status status="PASS" starttime="20220624 16:06:39.987" endtime="20220624 16:06:39.987"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.988" level="INFO">${index_produto} = 9</msg>
<status status="PASS" starttime="20220624 16:06:39.987" endtime="20220624 16:06:39.988"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.988" level="INFO">${produto} = {'nome': 'Comfort Senior', 'descricao': '64 GB Digital Assistant with high-resolution color screen and synthesized voice output', 'quantidade': 982, 'preco': 512, '_id': 'OrMw3RBLx971CAKX'}</msg>
<status status="PASS" starttime="20220624 16:06:39.988" endtime="20220624 16:06:39.988"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.989" endtime="20220624 16:06:39.989"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.988" endtime="20220624 16:06:39.989"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.988" endtime="20220624 16:06:39.989"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.989" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:39.989" endtime="20220624 16:06:39.989"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.989" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.989" endtime="20220624 16:06:39.989"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.989" endtime="20220624 16:06:39.990"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.990" endtime="20220624 16:06:39.990"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.990" endtime="20220624 16:06:39.990"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.987" endtime="20220624 16:06:39.990"/>
</iter>
<iter>
<var name="${i}">21</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.991" level="INFO">Length is 25</msg>
<msg timestamp="20220624 16:06:39.991" level="INFO">${quantidade_de_produtos} = 25</msg>
<status status="PASS" starttime="20220624 16:06:39.990" endtime="20220624 16:06:39.991"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.991" level="INFO">${index_produto} = 1</msg>
<status status="PASS" starttime="20220624 16:06:39.991" endtime="20220624 16:06:39.991"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.992" level="INFO">${produto} = {'nome': 'Portable DVD Player with 9" LCD Monitor', 'descricao': '9" LCD Screen, storage holds up to 8 hours, 2 speakers included', 'quantidade': 988, 'preco': 853, '_id': '5DDmCSnTAl8gVAEh'}</msg>
<status status="PASS" starttime="20220624 16:06:39.991" endtime="20220624 16:06:39.992"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.992" endtime="20220624 16:06:39.992"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.992" endtime="20220624 16:06:39.992"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.992" endtime="20220624 16:06:39.992"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.992" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.992" endtime="20220624 16:06:39.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.993" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.993" endtime="20220624 16:06:39.993"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.993" endtime="20220624 16:06:39.993"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.993" endtime="20220624 16:06:39.994"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.994" endtime="20220624 16:06:39.994"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.990" endtime="20220624 16:06:39.994"/>
</iter>
<iter>
<var name="${i}">22</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.994" level="INFO">Length is 24</msg>
<msg timestamp="20220624 16:06:39.994" level="INFO">${quantidade_de_produtos} = 24</msg>
<status status="PASS" starttime="20220624 16:06:39.994" endtime="20220624 16:06:39.994"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.995" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:39.994" endtime="20220624 16:06:39.995"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.996" level="INFO">${produto} = {'nome': 'PC Lock', 'descricao': 'Robust 3m anti-burglary protection for your laptop computer', 'quantidade': 996, 'preco': 8, '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:39.995" endtime="20220624 16:06:39.996"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.996" endtime="20220624 16:06:39.996"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.996" endtime="20220624 16:06:39.996"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.996" endtime="20220624 16:06:39.996"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.996" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:39.996" endtime="20220624 16:06:39.996"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:39.997" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:39.996" endtime="20220624 16:06:39.997"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.997" endtime="20220624 16:06:39.997"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:39.997" endtime="20220624 16:06:39.997"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:39.998" endtime="20220624 16:06:39.998"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.994" endtime="20220624 16:06:39.998"/>
</iter>
<iter>
<var name="${i}">23</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:39.998" level="INFO">Length is 23</msg>
<msg timestamp="20220624 16:06:39.998" level="INFO">${quantidade_de_produtos} = 23</msg>
<status status="PASS" starttime="20220624 16:06:39.998" endtime="20220624 16:06:39.998"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:39.999" level="INFO">${index_produto} = 20</msg>
<status status="PASS" starttime="20220624 16:06:39.998" endtime="20220624 16:06:39.999"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:39.999" level="INFO">${produto} = {'nome': 'Cerdik Phone 7', 'descricao': '7 inch 1280x800 HD display (216 ppi), Quad-core processor, 16 GB internal storage (actual formatted capacity will be less), 4325 mAh battery (Up to 8 hours of ...</msg>
<status status="PASS" starttime="20220624 16:06:39.999" endtime="20220624 16:06:39.999"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:39.999" endtime="20220624 16:06:40.000"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:39.999" endtime="20220624 16:06:40.000"/>
</branch>
<status status="PASS" starttime="20220624 16:06:39.999" endtime="20220624 16:06:40.000"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.000" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.000" endtime="20220624 16:06:40.000"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.000" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.000" endtime="20220624 16:06:40.000"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.000" endtime="20220624 16:06:40.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.001" endtime="20220624 16:06:40.001"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.001" endtime="20220624 16:06:40.001"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.998" endtime="20220624 16:06:40.001"/>
</iter>
<iter>
<var name="${i}">24</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.002" level="INFO">Length is 22</msg>
<msg timestamp="20220624 16:06:40.002" level="INFO">${quantidade_de_produtos} = 22</msg>
<status status="PASS" starttime="20220624 16:06:40.002" endtime="20220624 16:06:40.002"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.002" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:40.002" endtime="20220624 16:06:40.003"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.003" level="INFO">${produto} = {'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 991, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}</msg>
<status status="PASS" starttime="20220624 16:06:40.003" endtime="20220624 16:06:40.003"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.003" endtime="20220624 16:06:40.003"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.003" endtime="20220624 16:06:40.003"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.003" endtime="20220624 16:06:40.003"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.004" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:40.003" endtime="20220624 16:06:40.004"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.004" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.004" endtime="20220624 16:06:40.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.004" endtime="20220624 16:06:40.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.005" endtime="20220624 16:06:40.005"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.005" endtime="20220624 16:06:40.005"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.002" endtime="20220624 16:06:40.005"/>
</iter>
<iter>
<var name="${i}">25</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.005" level="INFO">Length is 21</msg>
<msg timestamp="20220624 16:06:40.005" level="INFO">${quantidade_de_produtos} = 21</msg>
<status status="PASS" starttime="20220624 16:06:40.005" endtime="20220624 16:06:40.005"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.006" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:40.005" endtime="20220624 16:06:40.006"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.006" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 988, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:40.006" endtime="20220624 16:06:40.006"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.007" endtime="20220624 16:06:40.007"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.007" endtime="20220624 16:06:40.007"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.006" endtime="20220624 16:06:40.007"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.007" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:40.007" endtime="20220624 16:06:40.007"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.007" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.007" endtime="20220624 16:06:40.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.007" endtime="20220624 16:06:40.008"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.008" endtime="20220624 16:06:40.008"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.008" endtime="20220624 16:06:40.009"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.005" endtime="20220624 16:06:40.009"/>
</iter>
<iter>
<var name="${i}">26</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.009" level="INFO">Length is 20</msg>
<msg timestamp="20220624 16:06:40.009" level="INFO">${quantidade_de_produtos} = 20</msg>
<status status="PASS" starttime="20220624 16:06:40.009" endtime="20220624 16:06:40.009"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.010" level="INFO">${index_produto} = 19</msg>
<status status="PASS" starttime="20220624 16:06:40.009" endtime="20220624 16:06:40.010"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.010" level="INFO">${produto} = {'nome': 'Universal card reader', 'descricao': 'Universal card reader', 'quantidade': 988, 'preco': 14, '_id': 'vF7r7dBj4AgssVDy'}</msg>
<status status="PASS" starttime="20220624 16:06:40.010" endtime="20220624 16:06:40.010"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.010" endtime="20220624 16:06:40.010"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.010" endtime="20220624 16:06:40.010"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.010" endtime="20220624 16:06:40.010"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.011" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.010" endtime="20220624 16:06:40.011"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.011" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.011" endtime="20220624 16:06:40.011"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.011" endtime="20220624 16:06:40.012"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.012" endtime="20220624 16:06:40.012"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.012" endtime="20220624 16:06:40.012"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.009" endtime="20220624 16:06:40.012"/>
</iter>
<iter>
<var name="${i}">27</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.013" level="INFO">Length is 19</msg>
<msg timestamp="20220624 16:06:40.013" level="INFO">${quantidade_de_produtos} = 19</msg>
<status status="PASS" starttime="20220624 16:06:40.013" endtime="20220624 16:06:40.013"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.013" level="INFO">${index_produto} = 0</msg>
<status status="PASS" starttime="20220624 16:06:40.013" endtime="20220624 16:06:40.013"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.014" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 988, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:40.013" endtime="20220624 16:06:40.014"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.014" endtime="20220624 16:06:40.014"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.014" endtime="20220624 16:06:40.014"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.014" endtime="20220624 16:06:40.014"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.014" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:40.014" endtime="20220624 16:06:40.014"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.015" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.015" endtime="20220624 16:06:40.015"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.015" endtime="20220624 16:06:40.015"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.016" endtime="20220624 16:06:40.016"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.016" endtime="20220624 16:06:40.016"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.012" endtime="20220624 16:06:40.016"/>
</iter>
<iter>
<var name="${i}">28</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.016" level="INFO">Length is 18</msg>
<msg timestamp="20220624 16:06:40.016" level="INFO">${quantidade_de_produtos} = 18</msg>
<status status="PASS" starttime="20220624 16:06:40.016" endtime="20220624 16:06:40.016"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.017" level="INFO">${index_produto} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.016" endtime="20220624 16:06:40.017"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.017" level="INFO">${produto} = {'nome': 'Record Movie', 'descricao': '160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid', 'quantidade': 992, 'preco': 288, '_id': 'JwKn0Q6ngqhxLTEi'}</msg>
<status status="PASS" starttime="20220624 16:06:40.017" endtime="20220624 16:06:40.017"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.018" endtime="20220624 16:06:40.018"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.018" endtime="20220624 16:06:40.018"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.017" endtime="20220624 16:06:40.018"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.018" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:40.018" endtime="20220624 16:06:40.018"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.018" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.018" endtime="20220624 16:06:40.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.019" endtime="20220624 16:06:40.019"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.019" endtime="20220624 16:06:40.019"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.019" endtime="20220624 16:06:40.020"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.016" endtime="20220624 16:06:40.020"/>
</iter>
<status status="PASS" starttime="20220624 16:06:39.902" endtime="20220624 16:06:40.020"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:40.050" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'k7RwzHsvxWkz58Nr', 'quantidade': 3}, {'idProduto': 'ijDJyCQXRG0zUEPV', 'quantidade': 1}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quantidade': 1}, {'idProduto': 'MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:40.020" endtime="20220624 16:06:40.050"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:40.051" level="INFO">${carrinho} = {"produtos": [{"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 3}, {"idProduto": "ijDJyCQXRG0zUEPV", "quantidade": 1}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 1}, {"idProduto": "MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:40.050" endtime="20220624 16:06:40.051"/>
</kw>
<msg timestamp="20220624 16:06:40.051" level="INFO">${carrinho} = {"produtos": [{"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 3}, {"idProduto": "ijDJyCQXRG0zUEPV", "quantidade": 1}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 1}, {"idProduto": "MxCklG58QjmexNX...</msg>
<status status="PASS" starttime="20220624 16:06:39.890" endtime="20220624 16:06:40.051"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:40.052" level="INFO">${nome} = Barbara Bush</msg>
<status status="PASS" starttime="20220624 16:06:40.052" endtime="20220624 16:06:40.052"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:40.052" level="INFO">${email} = andrewsjessica@example.org</msg>
<status status="PASS" starttime="20220624 16:06:40.052" endtime="20220624 16:06:40.052"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:40.053" level="INFO">${senha} = cm1t4IpGm_</msg>
<status status="PASS" starttime="20220624 16:06:40.053" endtime="20220624 16:06:40.053"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.053" level="INFO">&amp;{usuario} = { nome=Barbara Bush | email=andrewsjessica@example.org | password=cm1t4IpGm_ | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:40.053" endtime="20220624 16:06:40.053"/>
</kw>
<msg timestamp="20220624 16:06:40.053" level="INFO">${usuario} = {'nome': 'Barbara Bush', 'email': 'andrewsjessica@example.org', 'password': 'cm1t4IpGm_', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:40.052" endtime="20220624 16:06:40.053"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.054" endtime="20220624 16:06:40.054"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.059" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Barbara+Bush&amp;email=andrewsjessica%40example.org&amp;password=cm1t4IpGm_&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:40.059" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '77c44bb0-9c3b-4951-a469-62371a461ae3', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "NnPtZgRuSEWQ4c3e"
} 
 </msg>
<msg timestamp="20220624 16:06:40.059" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.054" endtime="20220624 16:06:40.059"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.060" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.059" endtime="20220624 16:06:40.060"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.060" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'NnPtZgRuSEWQ4c3e'}</msg>
<status status="PASS" starttime="20220624 16:06:40.060" endtime="20220624 16:06:40.061"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.054" endtime="20220624 16:06:40.061"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.061" endtime="20220624 16:06:40.062"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.061" endtime="20220624 16:06:40.062"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.062" endtime="20220624 16:06:40.063"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.062" endtime="20220624 16:06:40.063"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.063" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:40.063" endtime="20220624 16:06:40.063"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.063" endtime="20220624 16:06:40.064"/>
</kw>
<msg timestamp="20220624 16:06:40.064" level="INFO">${usuario_valido} = {'nome': 'Barbara Bush', 'email': 'andrewsjessica@example.org', 'password': 'cm1t4IpGm_', 'administrador': 'true', '_id': 'NnPtZgRuSEWQ4c3e'}</msg>
<status status="PASS" starttime="20220624 16:06:40.051" endtime="20220624 16:06:40.064"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:40.064" level="INFO">Removed item with key 'nome' and value 'Barbara Bush'.</msg>
<msg timestamp="20220624 16:06:40.064" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:40.064" level="INFO">Removed item with key '_id' and value 'NnPtZgRuSEWQ4c3e'.</msg>
<status status="PASS" starttime="20220624 16:06:40.064" endtime="20220624 16:06:40.064"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.064" endtime="20220624 16:06:40.065"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.067" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '54', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=andrewsjessica%40example.org&amp;password=cm1t4IpGm_ 
 </msg>
<msg timestamp="20220624 16:06:40.067" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f30fb7db-cf62-4e6a-8254-015961ed9fc8', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '289', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFuZHJld3NqZXNzaWNhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJjbTF0NElwR21fIiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Ji6WKWa9RBIcXFdRIXwJYIaHJRNj7U_b_dxZcn8gzA8"
} 
 </msg>
<msg timestamp="20220624 16:06:40.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.065" endtime="20220624 16:06:40.068"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.068" endtime="20220624 16:06:40.068"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.069" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFuZHJld3NqZXNzaWNhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJjbTF0NElwR21fIiwiaWF0IjoxNjU...</msg>
<status status="PASS" starttime="20220624 16:06:40.068" endtime="20220624 16:06:40.069"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.064" endtime="20220624 16:06:40.069"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.069" endtime="20220624 16:06:40.070"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.069" endtime="20220624 16:06:40.070"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.070" endtime="20220624 16:06:40.071"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.070" endtime="20220624 16:06:40.071"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.071" level="INFO">Length is 216</msg>
<status status="PASS" starttime="20220624 16:06:40.071" endtime="20220624 16:06:40.071"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.071" endtime="20220624 16:06:40.071"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.072" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFuZHJld3NqZXNzaWNhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJjbTF0NElwR21fIiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Ji6WKWa9RBI...</msg>
<status status="PASS" starttime="20220624 16:06:40.072" endtime="20220624 16:06:40.072"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.072" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFuZHJld3NqZXNzaWNhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJjbTF0NElwR21fIiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Ji6WKWa9...</msg>
<status status="PASS" starttime="20220624 16:06:40.072" endtime="20220624 16:06:40.072"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.051" endtime="20220624 16:06:40.073"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.073" endtime="20220624 16:06:40.073"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.073" endtime="20220624 16:06:40.073"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.074" endtime="20220624 16:06:40.075"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.301" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFuZHJld3NqZXNzaWNhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJjbTF0NElwR21fIiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Ji6WKWa9RBIcXFdRIXwJYIaHJRNj7U_b_dxZcn8gzA8', 'Content-Type': 'application/json', 'Content-Length': '1522'} 
 body={"produtos": [{"idProduto": "k7RwzHsvxWkz58Nr", "quantidade": 3}, {"idProduto": "ijDJyCQXRG0zUEPV", "quantidade": 1}, {"idProduto": "ftkkuY0qIIn3MBPk", "quantidade": 1}, {"idProduto": "MxCklG58QjmexNXH", "quantidade": 3}, {"idProduto": "UxBsipHgAI1f42Ny", "quantidade": 3}, {"idProduto": "DgHgvcvchJSgovHR", "quantidade": 3}, {"idProduto": "EnPI6sCHtD7UoWQQ", "quantidade": 2}, {"idProduto": "AiU2jNoXJmOd3bDF", "quantidade": 1}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 3}, {"idProduto": "ahZuij7poMV9daxr", "quantidade": 3}, {"idProduto": "Dx9dkgTndSJTuL1W", "quantidade": 2}, {"idProduto": "Dw7bFasYs0n1UJui", "quantidade": 3}, {"idProduto": "O00lW65c7tzOcrGU", "quantidade": 3}, {"idProduto": "QGdxANGY4iYthlwM", "quantidade": 2}, {"idProduto": "b9EEy3P5l9HpD2pB", "quantidade": 2}, {"idProduto": "ArEArsbw9iH7meyd", "quantidade": 2}, {"idProduto": "4adMxRTEPyeiqujT", "quantidade": 1}, {"idProduto": "ZRsnfqcRCQFu3p3R", "quantidade": 1}, {"idProduto": "F0Coyvmskz0RwoB9", "quantidade": 2}, {"idProduto": "3xTNa4i2sU41rPig", "quantidade": 3}, {"idProduto": "OrMw3RBLx971CAKX", "quantidade": 3}, {"idProduto": "5DDmCSnTAl8gVAEh", "quantidade": 2}, {"idProduto": "GlZXPUNWt8islmer", "quantidade": 2}, {"idProduto": "sBU6QOj9dSzUd9LE", "quantidade": 3}, {"idProduto": "3SZBJdzB87fc4ego", "quantidade": 1}, {"idProduto": "7nxOYuxBPGlpKz5A", "quantidade": 1}, {"idProduto": "vF7r7dBj4AgssVDy", "quantidade": 3}, {"idProduto": "CpaEbTwGcZnLduFY", "quantidade": 2}, {"idProduto": "JwKn0Q6ngqhxLTEi", "quantidade": 1}]} 
 </msg>
<msg timestamp="20220624 16:06:40.301" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fbb36e4e-9a56-4356-a1e9-6100f3ffdd99', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "X5FjrXna4auzPSfi"
} 
 </msg>
<msg timestamp="20220624 16:06:40.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.075" endtime="20220624 16:06:40.301"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.301" endtime="20220624 16:06:40.302"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.302" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'X5FjrXna4auzPSfi'}</msg>
<status status="PASS" starttime="20220624 16:06:40.302" endtime="20220624 16:06:40.302"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.073" endtime="20220624 16:06:40.302"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.303" endtime="20220624 16:06:40.303"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.302" endtime="20220624 16:06:40.304"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.304" endtime="20220624 16:06:40.304"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.304" endtime="20220624 16:06:40.305"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.305" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:40.305" endtime="20220624 16:06:40.305"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.305" endtime="20220624 16:06:40.305"/>
</kw>
<status status="PASS" starttime="20220624 16:06:39.890" endtime="20220624 16:06:40.306"/>
</kw>
<kw name="DELETE Autenticado EndPoint &quot;carrinhos/concluir-compra&quot; Headers &quot;${headers}&quot;" library="DELETE" sourcename="DELETE Autenticado EndPoint &quot;${endpoint}&quot; Headers &quot;${headers}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.312" level="INFO">DELETE Request : url=http://localhost:3000/carrinhos/concluir-compra 
 path_url=/carrinhos/concluir-compra 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFuZHJld3NqZXNzaWNhQGV4YW1wbGUub3JnIiwicGFzc3dvcmQiOiJjbTF0NElwR21fIiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Ji6WKWa9RBIcXFdRIXwJYIaHJRNj7U_b_dxZcn8gzA8', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.312" level="INFO">DELETE Response : url=http://localhost:3000/carrinhos/concluir-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c98df9fa-43e7-4f2b-969d-b77666856899', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20220624 16:06:40.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.307" endtime="20220624 16:06:40.313"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.313" endtime="20220624 16:06:40.313"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.314" level="INFO">${response_body} = {'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20220624 16:06:40.313" endtime="20220624 16:06:40.314"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.306" endtime="20220624 16:06:40.314"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.314" endtime="20220624 16:06:40.315"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.314" endtime="20220624 16:06:40.315"/>
</kw>
<kw name="Validar Mensagem &quot;Registro excluído com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.316" endtime="20220624 16:06:40.316"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.316" endtime="20220624 16:06:40.317"/>
</kw>
<tag>Carrinhos</tag>
<tag>Concluir_Compra</tag>
<tag>Concluir_Compra_Carrinho_Valido</tag>
<tag>DELETE</tag>
<tag>DELETE_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:39.888" endtime="20220624 16:06:40.317"/>
</test>
<test id="s1-s4-s3-t2" name="Cenario: Tentar Concluir Compra Usuario Sem Carrinho" line="19">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:40.319" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:40.319" endtime="20220624 16:06:40.319"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.319" endtime="20220624 16:06:40.319"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:40.320" level="INFO">${nome} = Elizabeth Sanchez</msg>
<status status="PASS" starttime="20220624 16:06:40.320" endtime="20220624 16:06:40.321"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:40.321" level="INFO">${email} = emily39@example.com</msg>
<status status="PASS" starttime="20220624 16:06:40.321" endtime="20220624 16:06:40.321"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:40.321" level="INFO">${senha} = $gAon3Nf5i</msg>
<status status="PASS" starttime="20220624 16:06:40.321" endtime="20220624 16:06:40.321"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.322" level="INFO">&amp;{usuario} = { nome=Elizabeth Sanchez | email=emily39@example.com | password=$gAon3Nf5i | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:40.321" endtime="20220624 16:06:40.322"/>
</kw>
<msg timestamp="20220624 16:06:40.322" level="INFO">${usuario} = {'nome': 'Elizabeth Sanchez', 'email': 'emily39@example.com', 'password': '$gAon3Nf5i', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:40.320" endtime="20220624 16:06:40.322"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.323" endtime="20220624 16:06:40.324"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.331" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '92', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Elizabeth+Sanchez&amp;email=emily39%40example.com&amp;password=%24gAon3Nf5i&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:40.331" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '025ed5d3-a9a0-4403-88fe-d9b82ffa0efa', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "0DKjKENYHU0cGqVW"
} 
 </msg>
<msg timestamp="20220624 16:06:40.331" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.324" endtime="20220624 16:06:40.331"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.331" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.331" endtime="20220624 16:06:40.331"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.332" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': '0DKjKENYHU0cGqVW'}</msg>
<status status="PASS" starttime="20220624 16:06:40.332" endtime="20220624 16:06:40.332"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.323" endtime="20220624 16:06:40.332"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.333" endtime="20220624 16:06:40.334"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.333" endtime="20220624 16:06:40.334"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.334" endtime="20220624 16:06:40.334"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.334" endtime="20220624 16:06:40.334"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.335" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:40.334" endtime="20220624 16:06:40.335"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.335" endtime="20220624 16:06:40.335"/>
</kw>
<msg timestamp="20220624 16:06:40.336" level="INFO">${usuario_valido} = {'nome': 'Elizabeth Sanchez', 'email': 'emily39@example.com', 'password': '$gAon3Nf5i', 'administrador': 'false', '_id': '0DKjKENYHU0cGqVW'}</msg>
<status status="PASS" starttime="20220624 16:06:40.320" endtime="20220624 16:06:40.336"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:40.336" level="INFO">Removed item with key 'nome' and value 'Elizabeth Sanchez'.</msg>
<msg timestamp="20220624 16:06:40.336" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:40.336" level="INFO">Removed item with key '_id' and value '0DKjKENYHU0cGqVW'.</msg>
<status status="PASS" starttime="20220624 16:06:40.336" endtime="20220624 16:06:40.336"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.336" endtime="20220624 16:06:40.336"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.340" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '49', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=emily39%40example.com&amp;password=%24gAon3Nf5i 
 </msg>
<msg timestamp="20220624 16:06:40.340" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '27ebea09-4636-4dd8-add3-f55a7fabe612', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '280', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtaWx5MzlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiRnQW9uM05mNWkiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.GyoQ-6Rpa-BlZQ2Ynpc96u0P78pdKDJnOBMh3a4Ul-E"
} 
 </msg>
<msg timestamp="20220624 16:06:40.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.337" endtime="20220624 16:06:40.340"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.341" endtime="20220624 16:06:40.341"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.342" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtaWx5MzlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiRnQW9uM05mNWkiLCJpYXQiOjE2NTYwOTc2MDA...</msg>
<status status="PASS" starttime="20220624 16:06:40.341" endtime="20220624 16:06:40.342"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.336" endtime="20220624 16:06:40.342"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.342" endtime="20220624 16:06:40.343"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.342" endtime="20220624 16:06:40.343"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.343" endtime="20220624 16:06:40.344"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.343" endtime="20220624 16:06:40.344"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.345" level="INFO">Length is 207</msg>
<status status="PASS" starttime="20220624 16:06:40.344" endtime="20220624 16:06:40.345"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.344" endtime="20220624 16:06:40.345"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.345" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtaWx5MzlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiRnQW9uM05mNWkiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.GyoQ-6Rpa-BlZQ2Ynpc9...</msg>
<status status="PASS" starttime="20220624 16:06:40.345" endtime="20220624 16:06:40.345"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.346" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtaWx5MzlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiRnQW9uM05mNWkiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.GyoQ-6Rpa-BlZQ2Yn...</msg>
<status status="PASS" starttime="20220624 16:06:40.345" endtime="20220624 16:06:40.346"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.319" endtime="20220624 16:06:40.346"/>
</kw>
<kw name="DELETE Autenticado EndPoint &quot;carrinhos/concluir-compra&quot; Headers &quot;${headers}&quot;" library="DELETE" sourcename="DELETE Autenticado EndPoint &quot;${endpoint}&quot; Headers &quot;${headers}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.349" level="INFO">DELETE Request : url=http://localhost:3000/carrinhos/concluir-compra 
 path_url=/carrinhos/concluir-compra 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtaWx5MzlAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiRnQW9uM05mNWkiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.GyoQ-6Rpa-BlZQ2Ynpc96u0P78pdKDJnOBMh3a4Ul-E', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.349" level="INFO">DELETE Response : url=http://localhost:3000/carrinhos/concluir-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ea2ae288-f38e-45a8-9c4d-6fb43b65bc30', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '68', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Não foi encontrado carrinho para esse usuário"
} 
 </msg>
<msg timestamp="20220624 16:06:40.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.346" endtime="20220624 16:06:40.349"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.349" endtime="20220624 16:06:40.350"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.350" level="INFO">${response_body} = {'message': 'Não foi encontrado carrinho para esse usuário'}</msg>
<status status="PASS" starttime="20220624 16:06:40.350" endtime="20220624 16:06:40.350"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.346" endtime="20220624 16:06:40.350"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.352" endtime="20220624 16:06:40.353"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.352" endtime="20220624 16:06:40.353"/>
</kw>
<kw name="Validar Mensagem &quot;Não foi encontrado carrinho para esse usuário&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.354" endtime="20220624 16:06:40.354"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.353" endtime="20220624 16:06:40.354"/>
</kw>
<tag>Carrinhos</tag>
<tag>Concluir_Compra_Carrinho_Invalido</tag>
<tag>DELETE</tag>
<tag>DELETE_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:40.318" endtime="20220624 16:06:40.354"/>
</test>
<test id="s1-s4-s3-t3" name="Cenario: Tentar Concluir Compra Com Carrinho Valido Token Invalido" line="26">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:40.357" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:40.357" endtime="20220624 16:06:40.357"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.356" endtime="20220624 16:06:40.358"/>
</kw>
<kw name="Pegar Carrinho Cadastrado" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="GET Endpoint &quot;carrinhos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.363" level="INFO">GET Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.363" level="INFO">GET Response : url=http://localhost:3000/carrinhos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c6bae4c3-a7ac-4fd5-af97-84b3738ad482', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '36866', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 10,
    "carrinhos": [
        {
            "produtos": [
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 1,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 1,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 3,
                    "precoUnitario": 39
                }
            ],
            "precoTotal": 1618,
            "quantidadeTotal": 5,
            "idUsuario": "DLefGPaKTIzQFiWe",
            "_id": "AdZL86jRsrqcZTlb"
        },
        {
            "produtos": [
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 1,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "4adMxRTEPyeiqujT",
                    "quantidade": 2,
                    "precoUnitario": 12
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 1,
                    "precoUnitario": 853
                },
                {
                    "idProduto": "ijDJyCQXRG0zUEPV",
                    "quantidade": 3,
                    "precoUnitario": 956
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 2,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 2,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "sBU6QOj9dSzUd9LE",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 1,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "7nxOYuxBPGlpKz5A",
                    "quantidade": 1,
                    "precoUnitario": 59
                },
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 3,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 3,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "WcqUhn61i2GkONUE",
                    "quantidade": 1,
                    "precoUnitario": 1199
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 1,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "3xTNa4i2sU41rPig",
                    "quantidade": 3,
                    "precoUnitario": 250
                },
                {
                    "idProduto": "vF7r7dBj4AgssVDy",
                    "quantidade": 1,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 1,
                    "precoUnitario": 449
                }
            ],
            "precoTotal": 16737,
            "quantidadeTotal": 35,
            "idUsuario": "FUnQdj3qsR9i3G9P",
            "_id": "BBcF3EsTiZ9dJZT0"
        },
        {
            "produtos": [
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 3,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "UxBsipHgAI1f42Ny",
                    "quantidade": 2,
                    "precoUnitario": 89
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 1,
                    "precoUnitario": 549
                }
            ],
            "precoTotal": 3852,
            "quantidadeTotal": 9,
            "idUsuario": "AEn46TACx9jZAQW7",
            "_id": "BeAuCIRJqHLN9Mv3"
        },
        {
            "produtos": [
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                }
            ],
            "precoTotal": 1233,
            "quantidadeTotal": 4,
            "idUsuario": "vFu9DQD2dWkhyTVu",
            "_id": "RL0Po0tjnsVBHyAm"
        },
        {
            "produtos": [
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 3,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "qe7RSBXih8PwxPl8",
                    "quantidade": 3,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "lhIaAKnyLoxLw9NE",
                    "quantidade": 2,
                    "precoUnitario": 230
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "AiU2jNoXJmOd3bDF",
                    "quantidade": 1,
                    "precoUnitario": 1700
                },
                {
                    "idProduto": "nCwNCrDsvlkZa8Zw",
                    "quantidade": 2,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 2,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "O00lW65c7tzOcrGU",
                    "quantidade": 1,
                    "precoUnitario": 299
                },
                {
                    "idProduto": "ArEArsbw9iH7meyd",
                    "quantidade": 1,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 2,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "Dx9dkgTndSJTuL1W",
                    "quantidade": 1,
                    "precoUnitario": 35
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 2,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "JwKn0Q6ngqhxLTEi",
                    "quantidade": 2,
                    "precoUnitario": 288
                },
                {
                    "idProduto": "ftkkuY0qIIn3MBPk",
                    "quantidade": 2,
                    "precoUnitario": 79
                },
                {
                    "idProduto": "ahZuij7poMV9daxr",
                    "quantidade": 2,
                    "precoUnitario": 1
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 3,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 3,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 1,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "ZRzOB3olwrZP7xEa",
                    "quantidade": 2,
                    "precoUnitario": 749
                },
                {
                    "idProduto": "QGdxANGY4iYthlwM",
                    "quantidade": 3,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 2,
                    "precoUnitario": 853
                },
                {
        ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:40.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.359" endtime="20220624 16:06:40.363"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.363" endtime="20220624 16:06:40.363"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.365" level="INFO">${response_body} = {'quantidade': 10, 'carrinhos': [{'produtos': [{'idProduto': 'e3Lai0wKA0BCZHBl', 'quantidade': 1, 'precoUnitario': 989}, {'idProduto': 'OrMw3RBLx971CAKX', 'quantidade': 1, 'precoUnitario': 512}, {'idP...</msg>
<status status="PASS" starttime="20220624 16:06:40.363" endtime="20220624 16:06:40.365"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.358" endtime="20220624 16:06:40.365"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${carrinho}</arg>
<arg>${response_body['carrinhos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.366" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1, 'precoUnitario': 89}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1, 'precoUnitario': 45}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quant...</msg>
<status status="PASS" starttime="20220624 16:06:40.365" endtime="20220624 16:06:40.366"/>
</kw>
<msg timestamp="20220624 16:06:40.366" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1, 'precoUnitario': 89}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1, 'precoUnitario': 45}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quant...</msg>
<status status="PASS" starttime="20220624 16:06:40.358" endtime="20220624 16:06:40.366"/>
</kw>
<kw name="Logar E Salvar Token Usando ID Do Usuario &quot;${carrinho['idUsuario']}&quot;" library="login_keywords" sourcename="Logar E Salvar Token Usando ID Do Usuario &quot;${id}&quot;">
<kw name="GET Usuario Por ID &quot;${id}&quot;" library="usuarios_keywords" sourcename="GET Usuario Por ID &quot;${_id}&quot;">
<var>${usuario}</var>
<kw name="GET Endpoint &quot;/usuarios/${_id}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.370" level="INFO">GET Request : url=http://localhost:3000/usuarios/8MQcGzZ8jPM5xIoO 
 path_url=/usuarios/8MQcGzZ8jPM5xIoO 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.370" level="INFO">GET Response : url=http://localhost:3000/usuarios/8MQcGzZ8jPM5xIoO 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7046ea0b-65ac-4f68-945e-3657a8db8c64', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '161', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "James Murphy",
    "email": "timothyjones@example.org",
    "password": "_9HFXa%wa2",
    "administrador": "true",
    "_id": "8MQcGzZ8jPM5xIoO"
} 
 </msg>
<msg timestamp="20220624 16:06:40.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.368" endtime="20220624 16:06:40.370"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.371" endtime="20220624 16:06:40.371"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.372" level="INFO">${response_body} = {'nome': 'James Murphy', 'email': 'timothyjones@example.org', 'password': '_9HFXa%wa2', 'administrador': 'true', '_id': '8MQcGzZ8jPM5xIoO'}</msg>
<status status="PASS" starttime="20220624 16:06:40.371" endtime="20220624 16:06:40.372"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.367" endtime="20220624 16:06:40.372"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.372" endtime="20220624 16:06:40.373"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.372" endtime="20220624 16:06:40.373"/>
</kw>
<msg timestamp="20220624 16:06:40.373" level="INFO">${usuario} = {'nome': 'James Murphy', 'email': 'timothyjones@example.org', 'password': '_9HFXa%wa2', 'administrador': 'true', '_id': '8MQcGzZ8jPM5xIoO'}</msg>
<status status="PASS" starttime="20220624 16:06:40.367" endtime="20220624 16:06:40.373"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:40.374" level="INFO">Removed item with key 'nome' and value 'James Murphy'.</msg>
<msg timestamp="20220624 16:06:40.374" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:40.374" level="INFO">Removed item with key '_id' and value '8MQcGzZ8jPM5xIoO'.</msg>
<status status="PASS" starttime="20220624 16:06:40.373" endtime="20220624 16:06:40.374"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.374" endtime="20220624 16:06:40.374"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.377" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '54', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=timothyjones%40example.org&amp;password=_9HFXa%25wa2 
 </msg>
<msg timestamp="20220624 16:06:40.377" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '180b84d0-f3a8-4d4d-8a3b-7d3f29ba7a4c', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '287', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzYwMCwiZXhwIjoxNjU2MDk4MjAwfQ.0Cy-ids9C5nHlJXNoJ4dLBNDoTmbMz7UqCaErwOW0CU"
} 
 </msg>
<msg timestamp="20220624 16:06:40.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.374" endtime="20220624 16:06:40.378"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.378" endtime="20220624 16:06:40.378"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.379" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA...</msg>
<status status="PASS" starttime="20220624 16:06:40.378" endtime="20220624 16:06:40.379"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.374" endtime="20220624 16:06:40.379"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.379" endtime="20220624 16:06:40.380"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.379" endtime="20220624 16:06:40.380"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.380" endtime="20220624 16:06:40.381"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.380" endtime="20220624 16:06:40.381"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.382" level="INFO">Length is 214</msg>
<status status="PASS" starttime="20220624 16:06:40.381" endtime="20220624 16:06:40.382"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.381" endtime="20220624 16:06:40.382"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.382" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzYwMCwiZXhwIjoxNjU2MDk4MjAwfQ.0Cy-ids9C5nHl...</msg>
<status status="PASS" starttime="20220624 16:06:40.382" endtime="20220624 16:06:40.382"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.383" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzYwMCwiZXhwIjoxNjU2MDk4MjAwfQ.0Cy-ids9C5...</msg>
<status status="PASS" starttime="20220624 16:06:40.382" endtime="20220624 16:06:40.383"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.366" endtime="20220624 16:06:40.383"/>
</kw>
<kw name="DELETE EndPoint &quot;carrinhos/concluir-compra&quot; Com Token Invalido" library="DELETE" sourcename="DELETE EndPoint &quot;${endpoint}&quot; Com Token Invalido">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{header}</var>
<arg>Authorization=Token Invalido</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.384" level="INFO">&amp;{header} = { Authorization=Token Invalido }</msg>
<status status="PASS" starttime="20220624 16:06:40.383" endtime="20220624 16:06:40.384"/>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${header}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.396" level="INFO">DELETE Request : url=http://localhost:3000/carrinhos/concluir-compra 
 path_url=/carrinhos/concluir-compra 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Token Invalido', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.396" level="INFO">DELETE Response : url=http://localhost:3000/carrinhos/concluir-compra 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'aa05e4d7-8584-426f-b4df-40df405e5f51', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:40.396" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.384" endtime="20220624 16:06:40.396"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.397" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.396" endtime="20220624 16:06:40.397"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.397" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:40.397" endtime="20220624 16:06:40.397"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.383" endtime="20220624 16:06:40.398"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.398" endtime="20220624 16:06:40.399"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.398" endtime="20220624 16:06:40.399"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.400" endtime="20220624 16:06:40.400"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.399" endtime="20220624 16:06:40.400"/>
</kw>
<tag>Carrinhos</tag>
<tag>Concluir_Compra</tag>
<tag>Concluir_Compra_Token_Invalido</tag>
<tag>DELETE</tag>
<tag>DELETE_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:40.356" endtime="20220624 16:06:40.401"/>
</test>
<test id="s1-s4-s3-t4" name="Cenario: Cancelar Compra Com Carrinho Valido" line="37">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:40.403" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:40.403" endtime="20220624 16:06:40.403"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.402" endtime="20220624 16:06:40.403"/>
</kw>
<kw name="Cadastrar Novo Carrinho" library="carrinhos_keywords">
<kw name="Gerar Carrinho Valido" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="Lista De Todos Produtos" library="produtos_keywords">
<var>${produtos}</var>
<kw name="GET Endpoint &quot;/produtos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.411" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.411" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'db507b4a-3fbf-45a0-8090-612c698a533a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '11759', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 46,
    "produtos": [
        {
            "nome": "Server Basic",
            "descricao": "Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity",
            "quantidade": 990,
            "preco": 5000,
            "_id": "3SZBJdzB87fc4ego"
        },
        {
            "nome": "Bending Screen 21HD",
            "descricao": "Optimum Hi-Resolution Widescreen max. 1920 x 1080 @ 85Hz, Dot Pitch: 0.27mm, HDMI, Discontinued-Sub",
            "quantidade": 984,
            "preco": 250,
            "_id": "3xTNa4i2sU41rPig"
        },
        {
            "nome": "Designer Mousepad",
            "descricao": "ITelO Mousepad Special Edition",
            "quantidade": 985,
            "preco": 12,
            "_id": "4adMxRTEPyeiqujT"
        },
        {
            "nome": "Portable DVD Player with 9\" LCD Monitor",
            "descricao": "9\" LCD Screen, storage holds up to 8 hours, 2 speakers included",
            "quantidade": 986,
            "preco": 853,
            "_id": "5DDmCSnTAl8gVAEh"
        },
        {
            "nome": "Wireless DSL Router / Repeater",
            "descricao": "Wireless DSL Router / Repeater (available in blue, black and silver)",
            "quantidade": 987,
            "preco": 59,
            "_id": "7nxOYuxBPGlpKz5A"
        },
        {
            "nome": "Gaming Monster Pro",
            "descricao": "3,4 Ghz quad core, 16 GB DDR3 SDRAM, 4000 GB Hard Disc, Graphic Card: Hurricane GX, Windows 8",
            "quantidade": 993,
            "preco": 1700,
            "_id": "AiU2jNoXJmOd3bDF"
        },
        {
            "nome": "ITelo MusicStick",
            "descricao": "64 GB USB Music-on-Available-Stick",
            "quantidade": 990,
            "preco": 45,
            "_id": "ArEArsbw9iH7meyd"
        },
        {
            "nome": "Notebook Lock",
            "descricao": "Robust 1m anti-burglary protection for your desktop computer",
            "quantidade": 986,
            "preco": 6,
            "_id": "CpaEbTwGcZnLduFY"
        },
        {
            "nome": "10\" Portable DVD player",
            "descricao": "10\" LCD Screen, storage battery holds up to 8 hours",
            "quantidade": 982,
            "preco": 449,
            "_id": "DgHgvcvchJSgovHR"
        },
        {
            "nome": "Silverberry",
            "descricao": "Our new multifunctional Handheld with phone function in silver",
            "quantidade": 987,
            "preco": 549,
            "_id": "Dw7bFasYs0n1UJui"
        },
        {
            "nome": "USB Stick",
            "descricao": "USB 2.0 High-Speed 64 GB",
            "quantidade": 993,
            "preco": 35,
            "_id": "Dx9dkgTndSJTuL1W"
        },
        {
            "nome": "Smartphone Beta",
            "descricao": "5 Megapixel Camera, Wi-Fi 802.11 b/g/n, Bluetooth, GPS Available-GPS support",
            "quantidade": 992,
            "preco": 30,
            "_id": "EnPI6sCHtD7UoWQQ"
        },
        {
            "nome": "Copperberry",
            "descricao": "Our new multifunctional Handheld with phone function in copper",
            "quantidade": 985,
            "preco": 549,
            "_id": "F0Coyvmskz0RwoB9"
        },
        {
            "nome": "ITelO Vault Net",
            "descricao": "Digital Organizer with State-of-the-Art Encryption for Storage and Network Communications",
            "quantidade": 990,
            "preco": 459,
            "_id": "FCfDTwwdXcVf14BM"
        },
        {
            "nome": "PC Lock",
            "descricao": "Robust 3m anti-burglary protection for your laptop computer",
            "quantidade": 994,
            "preco": 8,
            "_id": "GlZXPUNWt8islmer"
        },
        {
            "nome": "Laser Basic",
            "descricao": "Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory",
            "quantidade": 984,
            "preco": 490,
            "_id": "HQiQD1cNBI3UpUlB"
        },
        {
            "nome": "ITelO FlexTop I6300c",
            "descricao": "Notebook with 2,80 GHz dual core, 8 GB DDR3 SDRAM, 500 GB Hard Disc, Windows 8",
            "quantidade": 991,
            "preco": 799,
            "_id": "I7runwlH7VqYXvW4"
        },
        {
            "nome": "Platinberry",
            "descricao": "Our new multifunctional Handheld with phone function in platinum",
            "quantidade": 993,
            "preco": 549,
            "_id": "INAYXR7KbRCo2DKf"
        },
        {
            "nome": "Record Movie",
            "descricao": "160 GB HDD, CD-RW, DVD+R/RW, DVD-R/RW, MPEG 2 (Video-DVD), MPEG 4, VCD, SVCD, DivX, Xvid",
            "quantidade": 991,
            "preco": 288,
            "_id": "JwKn0Q6ngqhxLTEi"
        },
        {
            "nome": "Cepat Tablet 10.5",
            "descricao": "10.5-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 983,
            "preco": 549,
            "_id": "MxCklG58QjmexNXH"
        },
        {
            "nome": "Power Pro Player 80",
            "descricao": "MP3-Player with 80 GB SSD and Color Display, can play movies",
            "quantidade": 992,
            "preco": 299,
            "_id": "O00lW65c7tzOcrGU"
        },
        {
            "nome": "Comfort Senior",
            "descricao": "64 GB Digital Assistant with high-resolution color screen and synthesized voice output",
            "quantidade": 979,
            "preco": 512,
            "_id": "OrMw3RBLx971CAKX"
        },
        {
            "nome": "Ergonomic Keyboard",
            "descricao": "Ergonomic USB Keyboard for Desktop, Plug&amp;Play",
            "quantidade": 989,
            "preco": 14,
            "_id": "QGdxANGY4iYthlwM"
        },
        {
            "nome": "Gaming Monster",
            "descricao": "3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8",
            "quantidade": 992,
            "preco": 1200,
            "_id": "RIriCXGV4GxADZHJ"
        },
        {
            "nome": "PC Power Station",
            "descricao": "PC Power Station with 3,4 Ghz quad-core, 32 GB DDR3 SDRAM, feels like Available PC, Windows 8 Pro",
            "quantidade": 997,
            "preco": 2399,
            "_id": "RhTxSnY2aSwilmOB"
        },
        {
            "nome": "Smart Office",
            "descricao": "Complete package, 1 User, Office Applications (word processing, spreadsheet, presentations)",
            "quantidade": 982,
            "preco": 89,
            "_id": "UxBsipHgAI1f42Ny"
        },
        {
            "nome": "Flat Watch HD37",
            "descricao": "37-inch, 1366x768 Pixel, 16:9, HDTV ready",
            "quantidade": 991,
            "preco": 1199,
            "_id": "WcqUhn61i2GkONUE"
        },
        {
            "nome": "ITelO Vault",
            "descricao": "Digital Organizer with State-of-the-Art Storage Encryption",
            "quantidade": 988,
            "preco": 299,
            "_id": "ZRsnfqcRCQFu3p3R"
        },
        {
            "nome": "Maxi Tablet",
            "descricao": "10.1-inch Multitouch HD Screen (1280 x 800), 16GB Internal Memory, Wireless N Wi-Fi; Bluetooth, GPS Enabled, 1GHz Dual-Core Processor",
            "quantidade": 991,
            "preco": 749,
            "_id": "ZRzOB3olwrZP7xEa"
        },
        {
            "nome": "Flyer",
            "descricao": "Flyer for our product palette",
            "quantidade": 989,
            "preco": 1,
            "_id": "ahZuij7poMV9daxr"
        },
        {
            "nome": "Web cam reality",
            "descricao": "Color webcam, color, High-Speed USB",
            "quantidade": 985,
            "preco": 39,
            "_id": "apuGRFtiCyX0bAGm"
        },
        {
            "nome": "Track Mouse",
            "descricao": "Optical USB Mouse, Color: Red, 5-button-functionality(incl. Scroll wheel), Plug&amp;Play",
            "quantidade": 983,
            "preco": 11,
            "_id": "b9EEy3P5l9HpD2pB"
        },
        {
            "nome": "Astro Laptop 1516",
            "descricao": "Flexible Laptop with 2,5 GHz Quad Core, 15\" HD TN, 16 GB DDR SDRAM, 256 GB SSD, Windows 10 Pro",
            "quantidade": 990,
            "preco": 989,
            "_id": "e3Lai0wKA0BCZHBl"
        },
        {
            "nome": "Smart Design",
            "descricao": "Complete package, 1 User, Image editing, processing",
            "quantidade": 992,
            "preco": 79,
            "_id": "ftkkuY0qIIn3MBPk"
        },
        {
            "nome": "Cordless Bluetooth Keyboard, english international",
            "descricao": "Cordless Bluetooth Keyboard with English keys",
            "quantidade": 989,
            "preco": 29,
            "_id": "hwpiuIHmqe8VNCzw"
        },
        {
            "nome": "Notebook Basic 15",
            "descricao": "Notebook Basic 15 with 2,80 GHz quad core, 15\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 985,
            "preco": 956,
            "_id": "ijDJyCQXRG0zUEPV"
        },
        {
            "nome": "Notebook Basic 17",
            "descricao": "Notebook Basic 17 with 2,80 GHz quad core, 17\" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro",
            "quantidade": 993,
            "preco": 1249,
            "_id": "ikLmmmBskYjtYPNo"
        },
        {
            "nome": "Lovely Sound 5.1 Wireless",
            "descricao": "5.1 Headset, 40 Hz-20 kHz, Wireless",
            "quantidade": 992,
            "preco": 49,
            "_id": "k2sDlx1dQOYwsV12"
        },
        {
            "nome": "Hurricane GX",
            "descricao": "Hurricane GX: PCI-E 691 GFLOPS game-optimized",
            "quantidade": 990,
            "preco": 101,
            "_id": "k7RwzHsvxWkz58Nr"
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:40.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.404" endtime="20220624 16:06:40.412"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.412" endtime="20220624 16:06:40.412"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.414" level="INFO">${response_body} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 990, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:40.412" endtime="20220624 16:06:40.414"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.404" endtime="20220624 16:06:40.414"/>
</kw>
<msg timestamp="20220624 16:06:40.414" level="INFO">${produtos} = {'quantidade': 46, 'produtos': [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 990, 'preco': 5000, ...</msg>
<status status="PASS" starttime="20220624 16:06:40.404" endtime="20220624 16:06:40.414"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${lista_de_produtos}</arg>
<arg>${produtos['produtos']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.416" level="INFO">${lista_de_produtos} = [{'nome': 'Server Basic', 'descricao': 'Dual socket, quad-core processing server with 1333 MHz Front Side Bus with 10Gb connectivity', 'quantidade': 990, 'preco': 5000, '_id': '3SZBJdzB87fc4ego'}, {'n...</msg>
<status status="PASS" starttime="20220624 16:06:40.415" endtime="20220624 16:06:40.416"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.417" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:40.417" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:40.416" endtime="20220624 16:06:40.417"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade_aleatoria}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.417" level="INFO">${quantidade_aleatoria} = 9</msg>
<status status="PASS" starttime="20220624 16:06:40.417" endtime="20220624 16:06:40.417"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{nova_lista_produtos}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220624 16:06:40.418" level="INFO">@{nova_lista_produtos} = [ ]</msg>
<status status="PASS" starttime="20220624 16:06:40.417" endtime="20220624 16:06:40.418"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${carrinho}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.418" level="INFO">${carrinho} = {}</msg>
<status status="PASS" starttime="20220624 16:06:40.418" endtime="20220624 16:06:40.418"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${quantidade_aleatoria}</value>
<iter>
<var name="${i}">0</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.418" level="INFO">Length is 46</msg>
<msg timestamp="20220624 16:06:40.418" level="INFO">${quantidade_de_produtos} = 46</msg>
<status status="PASS" starttime="20220624 16:06:40.418" endtime="20220624 16:06:40.418"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.419" level="INFO">${index_produto} = 14</msg>
<status status="PASS" starttime="20220624 16:06:40.418" endtime="20220624 16:06:40.419"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.420" level="INFO">${produto} = {'nome': 'PC Lock', 'descricao': 'Robust 3m anti-burglary protection for your laptop computer', 'quantidade': 994, 'preco': 8, '_id': 'GlZXPUNWt8islmer'}</msg>
<status status="PASS" starttime="20220624 16:06:40.420" endtime="20220624 16:06:40.420"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.420" endtime="20220624 16:06:40.420"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.420" endtime="20220624 16:06:40.420"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.420" endtime="20220624 16:06:40.420"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.421" level="INFO">${quantidade} = 2</msg>
<status status="PASS" starttime="20220624 16:06:40.420" endtime="20220624 16:06:40.421"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.421" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.421" endtime="20220624 16:06:40.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.421" endtime="20220624 16:06:40.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.422" endtime="20220624 16:06:40.422"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.422" endtime="20220624 16:06:40.422"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.418" endtime="20220624 16:06:40.422"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.423" level="INFO">Length is 45</msg>
<msg timestamp="20220624 16:06:40.423" level="INFO">${quantidade_de_produtos} = 45</msg>
<status status="PASS" starttime="20220624 16:06:40.422" endtime="20220624 16:06:40.423"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.423" level="INFO">${index_produto} = 22</msg>
<status status="PASS" starttime="20220624 16:06:40.423" endtime="20220624 16:06:40.424"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.424" level="INFO">${produto} = {'nome': 'Gaming Monster', 'descricao': '3,4 Ghz quad core, 8 GB DDR3 SDRAM, 2000 GB Hard Disc, Graphic Card: Gladiator MX, Windows 8', 'quantidade': 992, 'preco': 1200, '_id': 'RIriCXGV4GxADZHJ'}</msg>
<status status="PASS" starttime="20220624 16:06:40.424" endtime="20220624 16:06:40.424"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.425" endtime="20220624 16:06:40.425"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.424" endtime="20220624 16:06:40.425"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.424" endtime="20220624 16:06:40.425"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.425" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.425" endtime="20220624 16:06:40.425"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.425" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.425" endtime="20220624 16:06:40.425"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.425" endtime="20220624 16:06:40.426"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.426" endtime="20220624 16:06:40.426"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.426" endtime="20220624 16:06:40.426"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.422" endtime="20220624 16:06:40.426"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.427" level="INFO">Length is 44</msg>
<msg timestamp="20220624 16:06:40.427" level="INFO">${quantidade_de_produtos} = 44</msg>
<status status="PASS" starttime="20220624 16:06:40.427" endtime="20220624 16:06:40.427"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.428" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:40.427" endtime="20220624 16:06:40.428"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.428" level="INFO">${produto} = {'nome': 'Platinberry', 'descricao': 'Our new multifunctional Handheld with phone function in platinum', 'quantidade': 993, 'preco': 549, '_id': 'INAYXR7KbRCo2DKf'}</msg>
<status status="PASS" starttime="20220624 16:06:40.428" endtime="20220624 16:06:40.428"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.428" endtime="20220624 16:06:40.428"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.428" endtime="20220624 16:06:40.428"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.428" endtime="20220624 16:06:40.428"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.429" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:40.429" endtime="20220624 16:06:40.429"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.429" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.429" endtime="20220624 16:06:40.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.429" endtime="20220624 16:06:40.430"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.430" endtime="20220624 16:06:40.430"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.430" endtime="20220624 16:06:40.430"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.427" endtime="20220624 16:06:40.430"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.431" level="INFO">Length is 43</msg>
<msg timestamp="20220624 16:06:40.431" level="INFO">${quantidade_de_produtos} = 43</msg>
<status status="PASS" starttime="20220624 16:06:40.430" endtime="20220624 16:06:40.431"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.432" level="INFO">${index_produto} = 7</msg>
<status status="PASS" starttime="20220624 16:06:40.431" endtime="20220624 16:06:40.432"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.432" level="INFO">${produto} = {'nome': 'Notebook Lock', 'descricao': 'Robust 1m anti-burglary protection for your desktop computer', 'quantidade': 986, 'preco': 6, '_id': 'CpaEbTwGcZnLduFY'}</msg>
<status status="PASS" starttime="20220624 16:06:40.432" endtime="20220624 16:06:40.432"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.433" endtime="20220624 16:06:40.433"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.433" endtime="20220624 16:06:40.433"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.432" endtime="20220624 16:06:40.433"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.433" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.433" endtime="20220624 16:06:40.433"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.433" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.433" endtime="20220624 16:06:40.433"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.433" endtime="20220624 16:06:40.434"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.434" endtime="20220624 16:06:40.434"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.434" endtime="20220624 16:06:40.435"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.430" endtime="20220624 16:06:40.435"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.435" level="INFO">Length is 42</msg>
<msg timestamp="20220624 16:06:40.435" level="INFO">${quantidade_de_produtos} = 42</msg>
<status status="PASS" starttime="20220624 16:06:40.435" endtime="20220624 16:06:40.435"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.436" level="INFO">${index_produto} = 13</msg>
<status status="PASS" starttime="20220624 16:06:40.435" endtime="20220624 16:06:40.436"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.436" level="INFO">${produto} = {'nome': 'Laser Basic', 'descricao': 'Up to 22 ppm color or 24 ppm monochrome A4/letter, powerful 500 MHz processor and 128MB of memory', 'quantidade': 984, 'preco': 490, '_id': 'HQiQD1cNBI3UpUlB'}</msg>
<status status="PASS" starttime="20220624 16:06:40.436" endtime="20220624 16:06:40.436"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.437" endtime="20220624 16:06:40.437"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.437" endtime="20220624 16:06:40.437"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.436" endtime="20220624 16:06:40.437"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.437" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.437" endtime="20220624 16:06:40.437"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.437" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.437" endtime="20220624 16:06:40.437"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.437" endtime="20220624 16:06:40.438"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.438" endtime="20220624 16:06:40.438"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.439" endtime="20220624 16:06:40.439"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.435" endtime="20220624 16:06:40.439"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.439" level="INFO">Length is 41</msg>
<msg timestamp="20220624 16:06:40.439" level="INFO">${quantidade_de_produtos} = 41</msg>
<status status="PASS" starttime="20220624 16:06:40.439" endtime="20220624 16:06:40.439"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.440" level="INFO">${index_produto} = 31</msg>
<status status="PASS" starttime="20220624 16:06:40.439" endtime="20220624 16:06:40.440"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.440" level="INFO">${produto} = {'nome': 'Notebook Basic 17', 'descricao': 'Notebook Basic 17 with 2,80 GHz quad core, 17" LCD, 4 GB DDR3 RAM, 500 GB Hard Disc, Windows 8 Pro', 'quantidade': 993, 'preco': 1249, '_id': 'ikLmmmBskYjtY...</msg>
<status status="PASS" starttime="20220624 16:06:40.440" endtime="20220624 16:06:40.440"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.441" endtime="20220624 16:06:40.441"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.441" endtime="20220624 16:06:40.441"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.440" endtime="20220624 16:06:40.441"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.441" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.441" endtime="20220624 16:06:40.441"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.442" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.441" endtime="20220624 16:06:40.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.442" endtime="20220624 16:06:40.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.443" endtime="20220624 16:06:40.443"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.443" endtime="20220624 16:06:40.443"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.439" endtime="20220624 16:06:40.443"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.444" level="INFO">Length is 40</msg>
<msg timestamp="20220624 16:06:40.444" level="INFO">${quantidade_de_produtos} = 40</msg>
<status status="PASS" starttime="20220624 16:06:40.443" endtime="20220624 16:06:40.444"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.445" level="INFO">${index_produto} = 16</msg>
<status status="PASS" starttime="20220624 16:06:40.444" endtime="20220624 16:06:40.445"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.445" level="INFO">${produto} = {'nome': 'Power Pro Player 80', 'descricao': 'MP3-Player with 80 GB SSD and Color Display, can play movies', 'quantidade': 992, 'preco': 299, '_id': 'O00lW65c7tzOcrGU'}</msg>
<status status="PASS" starttime="20220624 16:06:40.445" endtime="20220624 16:06:40.445"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.445" endtime="20220624 16:06:40.445"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.445" endtime="20220624 16:06:40.445"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.445" endtime="20220624 16:06:40.445"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.446" level="INFO">${quantidade} = 1</msg>
<status status="PASS" starttime="20220624 16:06:40.445" endtime="20220624 16:06:40.446"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.446" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.446" endtime="20220624 16:06:40.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.446" endtime="20220624 16:06:40.447"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.447" endtime="20220624 16:06:40.447"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.447" endtime="20220624 16:06:40.447"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.443" endtime="20220624 16:06:40.447"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.448" level="INFO">Length is 39</msg>
<msg timestamp="20220624 16:06:40.448" level="INFO">${quantidade_de_produtos} = 39</msg>
<status status="PASS" starttime="20220624 16:06:40.447" endtime="20220624 16:06:40.448"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.449" level="INFO">${index_produto} = 34</msg>
<status status="PASS" starttime="20220624 16:06:40.448" endtime="20220624 16:06:40.449"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.449" level="INFO">${produto} = {'nome': 'Sound Booster', 'descricao': 'PC multimedia speakers - optimized for Blutooth/A2DP', 'quantidade': 994, 'preco': 45, '_id': 'qe7RSBXih8PwxPl8'}</msg>
<status status="PASS" starttime="20220624 16:06:40.449" endtime="20220624 16:06:40.449"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.449" endtime="20220624 16:06:40.449"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.449" endtime="20220624 16:06:40.449"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.449" endtime="20220624 16:06:40.449"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.450" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.449" endtime="20220624 16:06:40.450"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.450" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.450" endtime="20220624 16:06:40.450"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.450" endtime="20220624 16:06:40.451"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.451" endtime="20220624 16:06:40.451"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.451" endtime="20220624 16:06:40.451"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.447" endtime="20220624 16:06:40.451"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Get Length" library="BuiltIn">
<var>${quantidade_de_produtos}</var>
<arg>${lista_de_produtos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220624 16:06:40.451" level="INFO">Length is 38</msg>
<msg timestamp="20220624 16:06:40.452" level="INFO">${quantidade_de_produtos} = 38</msg>
<status status="PASS" starttime="20220624 16:06:40.451" endtime="20220624 16:06:40.452"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${index_produto}</var>
<arg>min=0</arg>
<arg>max=${quantidade_de_produtos-1}</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.452" level="INFO">${index_produto} = 4</msg>
<status status="PASS" starttime="20220624 16:06:40.452" endtime="20220624 16:06:40.452"/>
</kw>
<kw name="Remove From List" library="Collections">
<var>${produto}</var>
<arg>${lista_de_produtos}</arg>
<arg>${index_produto}</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20220624 16:06:40.453" level="INFO">${produto} = {'nome': 'Wireless DSL Router / Repeater', 'descricao': 'Wireless DSL Router / Repeater (available in blue, black and silver)', 'quantidade': 987, 'preco': 59, '_id': '7nxOYuxBPGlpKz5A'}</msg>
<status status="PASS" starttime="20220624 16:06:40.452" endtime="20220624 16:06:40.453"/>
</kw>
<if>
<branch type="IF" condition="${produto['quantidade']} &lt;= 0">
<continue>
<status status="NOT RUN" starttime="20220624 16:06:40.453" endtime="20220624 16:06:40.453"/>
</continue>
<status status="NOT RUN" starttime="20220624 16:06:40.453" endtime="20220624 16:06:40.453"/>
</branch>
<status status="PASS" starttime="20220624 16:06:40.453" endtime="20220624 16:06:40.453"/>
</if>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=3</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220624 16:06:40.453" level="INFO">${quantidade} = 3</msg>
<status status="PASS" starttime="20220624 16:06:40.453" endtime="20220624 16:06:40.453"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{novo_produto}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.454" level="INFO">&amp;{novo_produto} = { }</msg>
<status status="PASS" starttime="20220624 16:06:40.453" endtime="20220624 16:06:40.454"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>idProduto=${produto['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.454" endtime="20220624 16:06:40.454"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${novo_produto}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.455" endtime="20220624 16:06:40.455"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${nova_lista_produtos}</arg>
<arg>${novo_produto}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220624 16:06:40.455" endtime="20220624 16:06:40.455"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.451" endtime="20220624 16:06:40.455"/>
</iter>
<status status="PASS" starttime="20220624 16:06:40.418" endtime="20220624 16:06:40.455"/>
</for>
<kw name="Add Object To Json" library="JSONLibrary">
<var>${carrinho}</var>
<arg>${carrinho}</arg>
<arg>$.produtos</arg>
<arg>${nova_lista_produtos}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<msg timestamp="20220624 16:06:40.487" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'GlZXPUNWt8islmer', 'quantidade': 2}, {'idProduto': 'RIriCXGV4GxADZHJ', 'quantidade': 3}, {'idProduto': 'INAYXR7KbRCo2DKf', 'quantidade': 1}, {'idProduto': 'CpaEbTwGcZnLduF...</msg>
<status status="PASS" starttime="20220624 16:06:40.455" endtime="20220624 16:06:40.487"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${carrinho}</var>
<arg>json.dumps(${carrinho})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220624 16:06:40.488" level="INFO">${carrinho} = {"produtos": [{"idProduto": "GlZXPUNWt8islmer", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 3}, {"idProduto": "INAYXR7KbRCo2DKf", "quantidade": 1}, {"idProduto": "CpaEbTwGcZnLduF...</msg>
<status status="PASS" starttime="20220624 16:06:40.487" endtime="20220624 16:06:40.488"/>
</kw>
<msg timestamp="20220624 16:06:40.488" level="INFO">${carrinho} = {"produtos": [{"idProduto": "GlZXPUNWt8islmer", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 3}, {"idProduto": "INAYXR7KbRCo2DKf", "quantidade": 1}, {"idProduto": "CpaEbTwGcZnLduF...</msg>
<status status="PASS" starttime="20220624 16:06:40.404" endtime="20220624 16:06:40.488"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;true&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:40.489" level="INFO">${nome} = Bradley Wright</msg>
<status status="PASS" starttime="20220624 16:06:40.489" endtime="20220624 16:06:40.489"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:40.489" level="INFO">${email} = brianalexander@example.com</msg>
<status status="PASS" starttime="20220624 16:06:40.489" endtime="20220624 16:06:40.489"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:40.490" level="INFO">${senha} = H@8NjxEfJ4</msg>
<status status="PASS" starttime="20220624 16:06:40.490" endtime="20220624 16:06:40.490"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.490" level="INFO">&amp;{usuario} = { nome=Bradley Wright | email=brianalexander@example.com | password=H@8NjxEfJ4 | administrador=true }</msg>
<status status="PASS" starttime="20220624 16:06:40.490" endtime="20220624 16:06:40.490"/>
</kw>
<msg timestamp="20220624 16:06:40.490" level="INFO">${usuario} = {'nome': 'Bradley Wright', 'email': 'brianalexander@example.com', 'password': 'H@8NjxEfJ4', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20220624 16:06:40.488" endtime="20220624 16:06:40.490"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.491" endtime="20220624 16:06:40.491"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.497" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '95', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Bradley+Wright&amp;email=brianalexander%40example.com&amp;password=H%408NjxEfJ4&amp;administrador=true 
 </msg>
<msg timestamp="20220624 16:06:40.497" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '251f5419-d025-4170-8fc5-1cb2bc7767c9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "IY7rNjVEwRSTsfoz"
} 
 </msg>
<msg timestamp="20220624 16:06:40.497" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.491" endtime="20220624 16:06:40.497"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.497" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.497" endtime="20220624 16:06:40.498"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.498" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'IY7rNjVEwRSTsfoz'}</msg>
<status status="PASS" starttime="20220624 16:06:40.498" endtime="20220624 16:06:40.498"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.491" endtime="20220624 16:06:40.498"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.499" endtime="20220624 16:06:40.500"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.499" endtime="20220624 16:06:40.500"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.500" endtime="20220624 16:06:40.500"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.500" endtime="20220624 16:06:40.500"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.501" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:40.501" endtime="20220624 16:06:40.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.501" endtime="20220624 16:06:40.502"/>
</kw>
<msg timestamp="20220624 16:06:40.502" level="INFO">${usuario_valido} = {'nome': 'Bradley Wright', 'email': 'brianalexander@example.com', 'password': 'H@8NjxEfJ4', 'administrador': 'true', '_id': 'IY7rNjVEwRSTsfoz'}</msg>
<status status="PASS" starttime="20220624 16:06:40.488" endtime="20220624 16:06:40.502"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:40.502" level="INFO">Removed item with key 'nome' and value 'Bradley Wright'.</msg>
<msg timestamp="20220624 16:06:40.502" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:40.502" level="INFO">Removed item with key '_id' and value 'IY7rNjVEwRSTsfoz'.</msg>
<status status="PASS" starttime="20220624 16:06:40.502" endtime="20220624 16:06:40.502"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.502" endtime="20220624 16:06:40.503"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.506" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '56', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=brianalexander%40example.com&amp;password=H%408NjxEfJ4 
 </msg>
<msg timestamp="20220624 16:06:40.506" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '83734c24-dbb4-4d99-b543-159d4e7a6c68', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '289', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJyaWFuYWxleGFuZGVyQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJIQDhOanhFZko0IiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Q0NZWqenzZ81Uyw-v79A7bK4Tq5LbScAMQ5tPP_tz-o"
} 
 </msg>
<msg timestamp="20220624 16:06:40.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.503" endtime="20220624 16:06:40.506"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.506" endtime="20220624 16:06:40.506"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.507" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJyaWFuYWxleGFuZGVyQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJIQDhOanhFZko0IiwiaWF0IjoxNjU...</msg>
<status status="PASS" starttime="20220624 16:06:40.506" endtime="20220624 16:06:40.507"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.502" endtime="20220624 16:06:40.507"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.507" endtime="20220624 16:06:40.508"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.507" endtime="20220624 16:06:40.508"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.509" endtime="20220624 16:06:40.509"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.508" endtime="20220624 16:06:40.509"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.511" level="INFO">Length is 216</msg>
<status status="PASS" starttime="20220624 16:06:40.510" endtime="20220624 16:06:40.511"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.509" endtime="20220624 16:06:40.511"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.512" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJyaWFuYWxleGFuZGVyQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJIQDhOanhFZko0IiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Q0NZWqenzZ8...</msg>
<status status="PASS" starttime="20220624 16:06:40.511" endtime="20220624 16:06:40.512"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.513" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJyaWFuYWxleGFuZGVyQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJIQDhOanhFZko0IiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Q0NZWqen...</msg>
<status status="PASS" starttime="20220624 16:06:40.512" endtime="20220624 16:06:40.513"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.488" endtime="20220624 16:06:40.513"/>
</kw>
<kw name="Modificar Headers" library="resource">
<kw name="Set To Dictionary" library="Collections">
<arg>${headers}</arg>
<arg>Content-Type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.514" endtime="20220624 16:06:40.514"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.513" endtime="20220624 16:06:40.514"/>
</kw>
<kw name="POST Autenticado EndPoint &quot;/carrinhos&quot; Com Body &quot;${carrinho}&quot; Headers &quot;${headers}&quot;" library="POST" sourcename="POST Autenticado EndPoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot; Headers &quot;${headers}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.515" endtime="20220624 16:06:40.516"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.592" level="INFO">POST Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJyaWFuYWxleGFuZGVyQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJIQDhOanhFZko0IiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Q0NZWqenzZ81Uyw-v79A7bK4Tq5LbScAMQ5tPP_tz-o', 'Content-Type': 'application/json', 'Content-Length': '482'} 
 body={"produtos": [{"idProduto": "GlZXPUNWt8islmer", "quantidade": 2}, {"idProduto": "RIriCXGV4GxADZHJ", "quantidade": 3}, {"idProduto": "INAYXR7KbRCo2DKf", "quantidade": 1}, {"idProduto": "CpaEbTwGcZnLduFY", "quantidade": 3}, {"idProduto": "HQiQD1cNBI3UpUlB", "quantidade": 3}, {"idProduto": "ikLmmmBskYjtYPNo", "quantidade": 3}, {"idProduto": "O00lW65c7tzOcrGU", "quantidade": 1}, {"idProduto": "qe7RSBXih8PwxPl8", "quantidade": 3}, {"idProduto": "7nxOYuxBPGlpKz5A", "quantidade": 3}]} 
 </msg>
<msg timestamp="20220624 16:06:40.592" level="INFO">POST Response : url=http://localhost:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '732a5bd3-9eb1-431e-96a1-5ffca3160d79', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "fYMxrjLNjTIdPNYW"
} 
 </msg>
<msg timestamp="20220624 16:06:40.592" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.516" endtime="20220624 16:06:40.592"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.593" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.592" endtime="20220624 16:06:40.593"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.593" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'fYMxrjLNjTIdPNYW'}</msg>
<status status="PASS" starttime="20220624 16:06:40.593" endtime="20220624 16:06:40.593"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.514" endtime="20220624 16:06:40.593"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.594" endtime="20220624 16:06:40.594"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.593" endtime="20220624 16:06:40.594"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.595" endtime="20220624 16:06:40.595"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.595" endtime="20220624 16:06:40.595"/>
</kw>
<kw name="Validar Se A Key Nao Esta Vazia &quot;_id&quot;" library="resource" sourcename="Validar Se A Key Nao Esta Vazia &quot;${key}&quot;">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["${key}"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.596" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:40.596" endtime="20220624 16:06:40.596"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.595" endtime="20220624 16:06:40.596"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.403" endtime="20220624 16:06:40.596"/>
</kw>
<kw name="DELETE Autenticado EndPoint &quot;carrinhos/cancelar-compra&quot; Headers &quot;${headers}&quot;" library="DELETE" sourcename="DELETE Autenticado EndPoint &quot;${endpoint}&quot; Headers &quot;${headers}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.604" level="INFO">DELETE Request : url=http://localhost:3000/carrinhos/cancelar-compra 
 path_url=/carrinhos/cancelar-compra 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJyaWFuYWxleGFuZGVyQGV4YW1wbGUuY29tIiwicGFzc3dvcmQiOiJIQDhOanhFZko0IiwiaWF0IjoxNjU2MDk3NjAwLCJleHAiOjE2NTYwOTgyMDB9.Q0NZWqenzZ81Uyw-v79A7bK4Tq5LbScAMQ5tPP_tz-o', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.604" level="INFO">DELETE Response : url=http://localhost:3000/carrinhos/cancelar-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5dfafad5-58c7-4628-a032-afe4076c9947', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso. Estoque dos produtos reabastecido"
} 
 </msg>
<msg timestamp="20220624 16:06:40.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.598" endtime="20220624 16:06:40.604"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.604" endtime="20220624 16:06:40.605"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.605" level="INFO">${response_body} = {'message': 'Registro excluído com sucesso. Estoque dos produtos reabastecido'}</msg>
<status status="PASS" starttime="20220624 16:06:40.605" endtime="20220624 16:06:40.605"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.598" endtime="20220624 16:06:40.606"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.606" endtime="20220624 16:06:40.607"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.606" endtime="20220624 16:06:40.607"/>
</kw>
<kw name="Validar Mensagem &quot;Registro excluído com sucesso. Estoque dos produtos reabastecido&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.608" endtime="20220624 16:06:40.609"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.608" endtime="20220624 16:06:40.609"/>
</kw>
<tag>Cancelar_Compra</tag>
<tag>Cancelar_Compra_Carrinho_Valido</tag>
<tag>Carrinhos</tag>
<tag>DELETE</tag>
<tag>DELETE_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:40.402" endtime="20220624 16:06:40.609"/>
</test>
<test id="s1-s4-s3-t5" name="Cenario: Tentar Cancelar Compra Usuario Sem Carrinho" line="46">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:40.611" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:40.610" endtime="20220624 16:06:40.611"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.610" endtime="20220624 16:06:40.611"/>
</kw>
<kw name="Logar E Salvar Token Como Administrador &quot;false&quot;" library="login_keywords" sourcename="Logar E Salvar Token Como Administrador &quot;${administrador}&quot;">
<kw name="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Cadastrar Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario_valido}</var>
<kw name="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;" library="usuarios_keywords" sourcename="Gerar Dados Do Novo Usuario Administrador &quot;${administrador}&quot;">
<var>${usuario}</var>
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220624 16:06:40.612" level="INFO">${nome} = Susan Mcguire</msg>
<status status="PASS" starttime="20220624 16:06:40.612" endtime="20220624 16:06:40.612"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20220624 16:06:40.612" level="INFO">${email} = orivera@example.org</msg>
<status status="PASS" starttime="20220624 16:06:40.612" endtime="20220624 16:06:40.612"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20220624 16:06:40.613" level="INFO">${senha} = 6gx86D@ok+</msg>
<status status="PASS" starttime="20220624 16:06:40.613" endtime="20220624 16:06:40.613"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.613" level="INFO">&amp;{usuario} = { nome=Susan Mcguire | email=orivera@example.org | password=6gx86D@ok+ | administrador=false }</msg>
<status status="PASS" starttime="20220624 16:06:40.613" endtime="20220624 16:06:40.613"/>
</kw>
<msg timestamp="20220624 16:06:40.613" level="INFO">${usuario} = {'nome': 'Susan Mcguire', 'email': 'orivera@example.org', 'password': '6gx86D@ok+', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20220624 16:06:40.612" endtime="20220624 16:06:40.613"/>
</kw>
<kw name="POST Endpoint &quot;/usuarios&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.614" endtime="20220624 16:06:40.614"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.623" level="INFO">POST Request : url=http://localhost:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Susan+Mcguire&amp;email=orivera%40example.org&amp;password=6gx86D%40ok%2B&amp;administrador=false 
 </msg>
<msg timestamp="20220624 16:06:40.623" level="INFO">POST Response : url=http://localhost:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1be946c2-0b7d-4b76-8a17-290c457a091b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uesXm9t3MOYoHk5Z"
} 
 </msg>
<msg timestamp="20220624 16:06:40.623" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.614" endtime="20220624 16:06:40.623"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.624" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.623" endtime="20220624 16:06:40.624"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.625" level="INFO">${response_body} = {'message': 'Cadastro realizado com sucesso', '_id': 'uesXm9t3MOYoHk5Z'}</msg>
<status status="PASS" starttime="20220624 16:06:40.624" endtime="20220624 16:06:40.625"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.613" endtime="20220624 16:06:40.625"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.625" endtime="20220624 16:06:40.626"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.625" endtime="20220624 16:06:40.626"/>
</kw>
<kw name="Validar Mensagem &quot;Cadastro realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.627" endtime="20220624 16:06:40.627"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.626" endtime="20220624 16:06:40.627"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body['_id']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.628" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20220624 16:06:40.627" endtime="20220624 16:06:40.628"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>_id=${response_body['_id']}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220624 16:06:40.628" endtime="20220624 16:06:40.628"/>
</kw>
<msg timestamp="20220624 16:06:40.628" level="INFO">${usuario_valido} = {'nome': 'Susan Mcguire', 'email': 'orivera@example.org', 'password': '6gx86D@ok+', 'administrador': 'false', '_id': 'uesXm9t3MOYoHk5Z'}</msg>
<status status="PASS" starttime="20220624 16:06:40.611" endtime="20220624 16:06:40.628"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario_valido}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:40.629" level="INFO">Removed item with key 'nome' and value 'Susan Mcguire'.</msg>
<msg timestamp="20220624 16:06:40.629" level="INFO">Removed item with key 'administrador' and value 'false'.</msg>
<msg timestamp="20220624 16:06:40.629" level="INFO">Removed item with key '_id' and value 'uesXm9t3MOYoHk5Z'.</msg>
<status status="PASS" starttime="20220624 16:06:40.629" endtime="20220624 16:06:40.629"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario_valido}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.629" endtime="20220624 16:06:40.629"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.632" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=orivera%40example.org&amp;password=6gx86D%40ok%2B 
 </msg>
<msg timestamp="20220624 16:06:40.632" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3a43c5e4-f84d-4195-b107-c60960af8fd0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '280', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9yaXZlcmFAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IjZneDg2REBvaysiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.OBFcoibBULtnkp4uZRDNE8uMhhJBz-U63m19w329iYQ"
} 
 </msg>
<msg timestamp="20220624 16:06:40.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.629" endtime="20220624 16:06:40.633"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.633" endtime="20220624 16:06:40.633"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.634" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9yaXZlcmFAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IjZneDg2REBvaysiLCJpYXQiOjE2NTYwOTc2MDA...</msg>
<status status="PASS" starttime="20220624 16:06:40.633" endtime="20220624 16:06:40.634"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.629" endtime="20220624 16:06:40.634"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.634" endtime="20220624 16:06:40.635"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.634" endtime="20220624 16:06:40.635"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.635" endtime="20220624 16:06:40.636"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.635" endtime="20220624 16:06:40.636"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.636" level="INFO">Length is 207</msg>
<status status="PASS" starttime="20220624 16:06:40.636" endtime="20220624 16:06:40.636"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.636" endtime="20220624 16:06:40.637"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.637" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9yaXZlcmFAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IjZneDg2REBvaysiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.OBFcoibBULtnkp4uZRDN...</msg>
<status status="PASS" starttime="20220624 16:06:40.637" endtime="20220624 16:06:40.637"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.638" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9yaXZlcmFAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IjZneDg2REBvaysiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.OBFcoibBULtnkp4uZ...</msg>
<status status="PASS" starttime="20220624 16:06:40.637" endtime="20220624 16:06:40.638"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.611" endtime="20220624 16:06:40.638"/>
</kw>
<kw name="DELETE Autenticado EndPoint &quot;carrinhos/cancelar-compra&quot; Headers &quot;${headers}&quot;" library="DELETE" sourcename="DELETE Autenticado EndPoint &quot;${endpoint}&quot; Headers &quot;${headers}&quot;">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.643" level="INFO">DELETE Request : url=http://localhost:3000/carrinhos/cancelar-compra 
 path_url=/carrinhos/cancelar-compra 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9yaXZlcmFAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IjZneDg2REBvaysiLCJpYXQiOjE2NTYwOTc2MDAsImV4cCI6MTY1NjA5ODIwMH0.OBFcoibBULtnkp4uZRDNE8uMhhJBz-U63m19w329iYQ', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.643" level="INFO">DELETE Response : url=http://localhost:3000/carrinhos/cancelar-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1328cdb8-e9fc-4fb2-beeb-098282314c07', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '68', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Não foi encontrado carrinho para esse usuário"
} 
 </msg>
<msg timestamp="20220624 16:06:40.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.639" endtime="20220624 16:06:40.643"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.643" endtime="20220624 16:06:40.643"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.644" level="INFO">${response_body} = {'message': 'Não foi encontrado carrinho para esse usuário'}</msg>
<status status="PASS" starttime="20220624 16:06:40.644" endtime="20220624 16:06:40.644"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.638" endtime="20220624 16:06:40.644"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.645" endtime="20220624 16:06:40.646"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.645" endtime="20220624 16:06:40.646"/>
</kw>
<kw name="Validar Mensagem &quot;Não foi encontrado carrinho para esse usuário&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.647" endtime="20220624 16:06:40.647"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.646" endtime="20220624 16:06:40.647"/>
</kw>
<tag>Cancelar_Compra</tag>
<tag>Cancelar_Compra_Carrinho_Invalido</tag>
<tag>Carrinhos</tag>
<tag>DELETE</tag>
<tag>DELETE_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:40.610" endtime="20220624 16:06:40.647"/>
</test>
<test id="s1-s4-s3-t6" name="Cenario: Tentar Cancelar Compra Com Carrinho Valido Token Invalido" line="53">
<kw name="Criar Sessao" library="resource" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220624 16:06:40.650" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220624 16:06:40.650" endtime="20220624 16:06:40.650"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.649" endtime="20220624 16:06:40.650"/>
</kw>
<kw name="Pegar Carrinho Cadastrado" library="carrinhos_keywords">
<var>${carrinho}</var>
<kw name="GET Endpoint &quot;carrinhos&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.655" level="INFO">GET Request : url=http://localhost:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.655" level="INFO">GET Response : url=http://localhost:3000/carrinhos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '839797a2-d9f1-4bbb-b682-43e51fe55de6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '36866', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 10,
    "carrinhos": [
        {
            "produtos": [
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 1,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 1,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 3,
                    "precoUnitario": 39
                }
            ],
            "precoTotal": 1618,
            "quantidadeTotal": 5,
            "idUsuario": "DLefGPaKTIzQFiWe",
            "_id": "AdZL86jRsrqcZTlb"
        },
        {
            "produtos": [
                {
                    "idProduto": "apuGRFtiCyX0bAGm",
                    "quantidade": 1,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "4adMxRTEPyeiqujT",
                    "quantidade": 2,
                    "precoUnitario": 12
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 1,
                    "precoUnitario": 853
                },
                {
                    "idProduto": "ijDJyCQXRG0zUEPV",
                    "quantidade": 3,
                    "precoUnitario": 956
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 2,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 2,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "sBU6QOj9dSzUd9LE",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 1,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "7nxOYuxBPGlpKz5A",
                    "quantidade": 1,
                    "precoUnitario": 59
                },
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 3,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "OrMw3RBLx971CAKX",
                    "quantidade": 3,
                    "precoUnitario": 512
                },
                {
                    "idProduto": "WcqUhn61i2GkONUE",
                    "quantidade": 1,
                    "precoUnitario": 1199
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 1,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "3xTNa4i2sU41rPig",
                    "quantidade": 3,
                    "precoUnitario": 250
                },
                {
                    "idProduto": "vF7r7dBj4AgssVDy",
                    "quantidade": 1,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 1,
                    "precoUnitario": 449
                }
            ],
            "precoTotal": 16737,
            "quantidadeTotal": 35,
            "idUsuario": "FUnQdj3qsR9i3G9P",
            "_id": "BBcF3EsTiZ9dJZT0"
        },
        {
            "produtos": [
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 3,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 1,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "UxBsipHgAI1f42Ny",
                    "quantidade": 2,
                    "precoUnitario": 89
                },
                {
                    "idProduto": "MxCklG58QjmexNXH",
                    "quantidade": 1,
                    "precoUnitario": 549
                }
            ],
            "precoTotal": 3852,
            "quantidadeTotal": 9,
            "idUsuario": "AEn46TACx9jZAQW7",
            "_id": "BeAuCIRJqHLN9Mv3"
        },
        {
            "produtos": [
                {
                    "idProduto": "RIriCXGV4GxADZHJ",
                    "quantidade": 1,
                    "precoUnitario": 1200
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 3,
                    "precoUnitario": 11
                }
            ],
            "precoTotal": 1233,
            "quantidadeTotal": 4,
            "idUsuario": "vFu9DQD2dWkhyTVu",
            "_id": "RL0Po0tjnsVBHyAm"
        },
        {
            "produtos": [
                {
                    "idProduto": "HQiQD1cNBI3UpUlB",
                    "quantidade": 3,
                    "precoUnitario": 490
                },
                {
                    "idProduto": "qe7RSBXih8PwxPl8",
                    "quantidade": 3,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "lhIaAKnyLoxLw9NE",
                    "quantidade": 2,
                    "precoUnitario": 230
                },
                {
                    "idProduto": "e3Lai0wKA0BCZHBl",
                    "quantidade": 2,
                    "precoUnitario": 989
                },
                {
                    "idProduto": "AiU2jNoXJmOd3bDF",
                    "quantidade": 1,
                    "precoUnitario": 1700
                },
                {
                    "idProduto": "nCwNCrDsvlkZa8Zw",
                    "quantidade": 2,
                    "precoUnitario": 39
                },
                {
                    "idProduto": "hwpiuIHmqe8VNCzw",
                    "quantidade": 2,
                    "precoUnitario": 29
                },
                {
                    "idProduto": "O00lW65c7tzOcrGU",
                    "quantidade": 1,
                    "precoUnitario": 299
                },
                {
                    "idProduto": "ArEArsbw9iH7meyd",
                    "quantidade": 1,
                    "precoUnitario": 45
                },
                {
                    "idProduto": "DgHgvcvchJSgovHR",
                    "quantidade": 2,
                    "precoUnitario": 449
                },
                {
                    "idProduto": "Dx9dkgTndSJTuL1W",
                    "quantidade": 1,
                    "precoUnitario": 35
                },
                {
                    "idProduto": "rypUQQwSXjyk3c63",
                    "quantidade": 2,
                    "precoUnitario": 285
                },
                {
                    "idProduto": "Dw7bFasYs0n1UJui",
                    "quantidade": 1,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "JwKn0Q6ngqhxLTEi",
                    "quantidade": 2,
                    "precoUnitario": 288
                },
                {
                    "idProduto": "ftkkuY0qIIn3MBPk",
                    "quantidade": 2,
                    "precoUnitario": 79
                },
                {
                    "idProduto": "ahZuij7poMV9daxr",
                    "quantidade": 2,
                    "precoUnitario": 1
                },
                {
                    "idProduto": "CpaEbTwGcZnLduFY",
                    "quantidade": 3,
                    "precoUnitario": 6
                },
                {
                    "idProduto": "F0Coyvmskz0RwoB9",
                    "quantidade": 3,
                    "precoUnitario": 549
                },
                {
                    "idProduto": "b9EEy3P5l9HpD2pB",
                    "quantidade": 1,
                    "precoUnitario": 11
                },
                {
                    "idProduto": "ZRzOB3olwrZP7xEa",
                    "quantidade": 2,
                    "precoUnitario": 749
                },
                {
                    "idProduto": "QGdxANGY4iYthlwM",
                    "quantidade": 3,
                    "precoUnitario": 14
                },
                {
                    "idProduto": "5DDmCSnTAl8gVAEh",
                    "quantidade": 2,
                    "precoUnitario": 853
                },
                {
        ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220624 16:06:40.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.651" endtime="20220624 16:06:40.655"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.655" endtime="20220624 16:06:40.656"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.657" level="INFO">${response_body} = {'quantidade': 10, 'carrinhos': [{'produtos': [{'idProduto': 'e3Lai0wKA0BCZHBl', 'quantidade': 1, 'precoUnitario': 989}, {'idProduto': 'OrMw3RBLx971CAKX', 'quantidade': 1, 'precoUnitario': 512}, {'idP...</msg>
<status status="PASS" starttime="20220624 16:06:40.656" endtime="20220624 16:06:40.657"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.651" endtime="20220624 16:06:40.657"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${carrinho}</arg>
<arg>${response_body['carrinhos'][-1]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.658" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1, 'precoUnitario': 89}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1, 'precoUnitario': 45}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quant...</msg>
<status status="PASS" starttime="20220624 16:06:40.657" endtime="20220624 16:06:40.658"/>
</kw>
<msg timestamp="20220624 16:06:40.659" level="INFO">${carrinho} = {'produtos': [{'idProduto': 'UxBsipHgAI1f42Ny', 'quantidade': 1, 'precoUnitario': 89}, {'idProduto': 'qe7RSBXih8PwxPl8', 'quantidade': 1, 'precoUnitario': 45}, {'idProduto': 'ftkkuY0qIIn3MBPk', 'quant...</msg>
<status status="PASS" starttime="20220624 16:06:40.651" endtime="20220624 16:06:40.659"/>
</kw>
<kw name="Logar E Salvar Token Usando ID Do Usuario &quot;${carrinho['idUsuario']}&quot;" library="login_keywords" sourcename="Logar E Salvar Token Usando ID Do Usuario &quot;${id}&quot;">
<kw name="GET Usuario Por ID &quot;${id}&quot;" library="usuarios_keywords" sourcename="GET Usuario Por ID &quot;${_id}&quot;">
<var>${usuario}</var>
<kw name="GET Endpoint &quot;/usuarios/${_id}&quot;" library="GET" sourcename="GET Endpoint &quot;${endpoint}&quot;">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.663" level="INFO">GET Request : url=http://localhost:3000/usuarios/8MQcGzZ8jPM5xIoO 
 path_url=/usuarios/8MQcGzZ8jPM5xIoO 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.663" level="INFO">GET Response : url=http://localhost:3000/usuarios/8MQcGzZ8jPM5xIoO 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '65b1c912-9238-41cb-92b7-08192d5f7f91', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '161', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "James Murphy",
    "email": "timothyjones@example.org",
    "password": "_9HFXa%wa2",
    "administrador": "true",
    "_id": "8MQcGzZ8jPM5xIoO"
} 
 </msg>
<msg timestamp="20220624 16:06:40.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.660" endtime="20220624 16:06:40.663"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.664" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.663" endtime="20220624 16:06:40.664"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.664" level="INFO">${response_body} = {'nome': 'James Murphy', 'email': 'timothyjones@example.org', 'password': '_9HFXa%wa2', 'administrador': 'true', '_id': '8MQcGzZ8jPM5xIoO'}</msg>
<status status="PASS" starttime="20220624 16:06:40.664" endtime="20220624 16:06:40.665"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.660" endtime="20220624 16:06:40.665"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.665" endtime="20220624 16:06:40.666"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.665" endtime="20220624 16:06:40.666"/>
</kw>
<msg timestamp="20220624 16:06:40.666" level="INFO">${usuario} = {'nome': 'James Murphy', 'email': 'timothyjones@example.org', 'password': '_9HFXa%wa2', 'administrador': 'true', '_id': '8MQcGzZ8jPM5xIoO'}</msg>
<status status="PASS" starttime="20220624 16:06:40.659" endtime="20220624 16:06:40.666"/>
</kw>
<kw name="Remove From Dictionary" library="Collections">
<arg>${usuario}</arg>
<arg>nome</arg>
<arg>administrador</arg>
<arg>_id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<msg timestamp="20220624 16:06:40.666" level="INFO">Removed item with key 'nome' and value 'James Murphy'.</msg>
<msg timestamp="20220624 16:06:40.666" level="INFO">Removed item with key 'administrador' and value 'true'.</msg>
<msg timestamp="20220624 16:06:40.666" level="INFO">Removed item with key '_id' and value '8MQcGzZ8jPM5xIoO'.</msg>
<status status="PASS" starttime="20220624 16:06:40.666" endtime="20220624 16:06:40.666"/>
</kw>
<kw name="POST Endpoint &quot;/login&quot; Com Body &quot;${usuario}&quot;" library="POST" sourcename="POST Endpoint &quot;${endpoint}&quot; Com Body &quot;${body}&quot;">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'_id' in ${body}</arg>
<arg>Remove From Dictionary</arg>
<arg>${body}</arg>
<arg>_id</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220624 16:06:40.667" endtime="20220624 16:06:40.667"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>data=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.670" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '54', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=timothyjones%40example.org&amp;password=_9HFXa%25wa2 
 </msg>
<msg timestamp="20220624 16:06:40.670" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '52a6c8b0-1588-4018-9507-06f74f824fc2', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '287', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzYwMCwiZXhwIjoxNjU2MDk4MjAwfQ.0Cy-ids9C5nHlJXNoJ4dLBNDoTmbMz7UqCaErwOW0CU"
} 
 </msg>
<msg timestamp="20220624 16:06:40.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.667" endtime="20220624 16:06:40.670"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.670" endtime="20220624 16:06:40.670"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.671" level="INFO">${response_body} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA...</msg>
<status status="PASS" starttime="20220624 16:06:40.671" endtime="20220624 16:06:40.671"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.666" endtime="20220624 16:06:40.671"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.672" endtime="20220624 16:06:40.673"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.671" endtime="20220624 16:06:40.673"/>
</kw>
<kw name="Validar Mensagem &quot;Login realizado com sucesso&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.673" endtime="20220624 16:06:40.674"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.673" endtime="20220624 16:06:40.674"/>
</kw>
<kw name="Validar Token" library="login_keywords">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response_body["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220624 16:06:40.674" level="INFO">Length is 214</msg>
<status status="PASS" starttime="20220624 16:06:40.674" endtime="20220624 16:06:40.674"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.674" endtime="20220624 16:06:40.674"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${response_body["authorization"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.675" level="INFO">&amp;{headers} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzYwMCwiZXhwIjoxNjU2MDk4MjAwfQ.0Cy-ids9C5nHl...</msg>
<status status="PASS" starttime="20220624 16:06:40.675" endtime="20220624 16:06:40.675"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headers}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.675" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbW90aHlqb25lc0BleGFtcGxlLm9yZyIsInBhc3N3b3JkIjoiXzlIRlhhJXdhMiIsImlhdCI6MTY1NjA5NzYwMCwiZXhwIjoxNjU2MDk4MjAwfQ.0Cy-ids9C5...</msg>
<status status="PASS" starttime="20220624 16:06:40.675" endtime="20220624 16:06:40.675"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.659" endtime="20220624 16:06:40.676"/>
</kw>
<kw name="DELETE EndPoint &quot;carrinhos/concluir-compra&quot; Com Token Invalido" library="DELETE" sourcename="DELETE EndPoint &quot;${endpoint}&quot; Com Token Invalido">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{header}</var>
<arg>Authorization=Token Invalido</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220624 16:06:40.676" level="INFO">&amp;{header} = { Authorization=Token Invalido }</msg>
<status status="PASS" starttime="20220624 16:06:40.676" endtime="20220624 16:06:40.676"/>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${endpoint}</arg>
<arg>expected_status=any</arg>
<arg>headers=${header}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220624 16:06:40.679" level="INFO">DELETE Request : url=http://localhost:3000/carrinhos/concluir-compra 
 path_url=/carrinhos/concluir-compra 
 headers={'User-Agent': 'python-requests/2.28.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Token Invalido', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220624 16:06:40.679" level="INFO">DELETE Response : url=http://localhost:3000/carrinhos/concluir-compra 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '198ad24e-2ba7-402d-a38a-0cd2515a7590', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 24 Jun 2022 19:06:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20220624 16:06:40.679" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.676" endtime="20220624 16:06:40.679"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.679" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220624 16:06:40.679" endtime="20220624 16:06:40.679"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220624 16:06:40.680" level="INFO">${response_body} = {'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20220624 16:06:40.680" endtime="20220624 16:06:40.680"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.676" endtime="20220624 16:06:40.680"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" library="resource" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220624 16:06:40.681" endtime="20220624 16:06:40.682"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.681" endtime="20220624 16:06:40.682"/>
</kw>
<kw name="Validar Mensagem &quot;Token de acesso ausente, inválido, expirado ou usuário do token não existe mais&quot;" library="resource" sourcename="Validar Mensagem &quot;${mensagem}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_body['message']}</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220624 16:06:40.683" endtime="20220624 16:06:40.683"/>
</kw>
<status status="PASS" starttime="20220624 16:06:40.682" endtime="20220624 16:06:40.683"/>
</kw>
<tag>Cancelar_Compra</tag>
<tag>Cancelar_Compra_Token_Invalido</tag>
<tag>Carrinhos</tag>
<tag>DELETE</tag>
<tag>DELETE_Carrinhos</tag>
<status status="PASS" starttime="20220624 16:06:40.649" endtime="20220624 16:06:40.684"/>
</test>
<doc>Arquivo De Requisições Do Tipo DELETE DA API Do EndPoint Carrinhos</doc>
<status status="PASS" starttime="20220624 16:06:39.876" endtime="20220624 16:06:40.685"/>
</suite>
<status status="PASS" starttime="20220624 16:06:36.753" endtime="20220624 16:06:40.687"/>
</suite>
<status status="PASS" starttime="20220624 16:06:33.676" endtime="20220624 16:06:40.689"/>
</suite>
<statistics>
<total>
<stat pass="70" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Atualizar_Dados_Usuario_Nao_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Email_Usuario</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Nome_Usuario</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Privelio_Usuario</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Descricao</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Nao_Administrador</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_NAO_CADASTRADO</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Nome</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Preco</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Preco_Invalido</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Quantidade</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Quantidade_Invalida</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Sem_Alteracao</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Sem_Autenticacao</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Produto_Token_Invalido</stat>
<stat pass="1" fail="0" skip="0">Atualizar_Senha_Usuario</stat>
<stat pass="1" fail="0" skip="0">Buscar_Carrinho_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Buscar_Carrinho_Nao_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Buscar_Produto_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Buscar_Produto_Nao_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Buscar_Todos_Carrinhos</stat>
<stat pass="1" fail="0" skip="0">Buscar_Todos_Produtos</stat>
<stat pass="1" fail="0" skip="0">Buscar_Usuario_Invalido</stat>
<stat pass="2" fail="0" skip="0">Buscar_Usuario_Valido</stat>
<stat pass="1" fail="0" skip="0">Cadastar_20_Produtos</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Com_Descricao_Vazia</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Com_Nome_Vazio</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Com_Preco_Vazio</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Com_Quantidade_Vazia</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Com_Token_Invalido</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Ja_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Nao_Autenticado</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Preco_Invalido</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Quantidade_Invalida</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Valido</stat>
<stat pass="1" fail="0" skip="0">Cadastar_Produto_Valido_Nao_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Mais_De_Um</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Produto_Invalido</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Quantidade_Insuficiente</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Sem_idProduto</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Sem_Quantidade</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Valido_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Valido_Nao_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Carrinho_Valido_Sem_Autenticacao</stat>
<stat pass="11" fail="0" skip="0">Cadastrar_Produto</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Email_Ja_Utilizado</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Administrador</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Email</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Nome</stat>
<stat pass="1" fail="0" skip="0">Cadastrar_Usuario_Sem_Senha</stat>
<stat pass="3" fail="0" skip="0">Cancelar_Compra</stat>
<stat pass="1" fail="0" skip="0">Cancelar_Compra_Carrinho_Invalido</stat>
<stat pass="1" fail="0" skip="0">Cancelar_Compra_Carrinho_Valido</stat>
<stat pass="1" fail="0" skip="0">Cancelar_Compra_Token_Invalido</stat>
<stat pass="17" fail="0" skip="0">Carrinhos</stat>
<stat pass="2" fail="0" skip="0">Concluir_Compra</stat>
<stat pass="1" fail="0" skip="0">Concluir_Compra_Carrinho_Invalido</stat>
<stat pass="1" fail="0" skip="0">Concluir_Compra_Carrinho_Valido</stat>
<stat pass="1" fail="0" skip="0">Concluir_Compra_Token_Invalido</stat>
<stat pass="1" fail="0" skip="0">Deletar_Produto_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Deletar_Produto_Nao_Administrador</stat>
<stat pass="1" fail="0" skip="0">Deletar_Produto_Nao_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Deletar_Produto_Sem_Autenticacao</stat>
<stat pass="1" fail="0" skip="0">Deletar_Usuario_Cadastrado</stat>
<stat pass="1" fail="0" skip="0">Deletar_Usuario_Nao_Cadastrado</stat>
<stat pass="12" fail="0" skip="0">DELETE</stat>
<stat pass="6" fail="0" skip="0">DELETE_Carrinhos</stat>
<stat pass="4" fail="0" skip="0">DELETE_Produtos</stat>
<stat pass="2" fail="0" skip="0">DELETE_Usuarios</stat>
<stat pass="18" fail="0" skip="0">GET</stat>
<stat pass="3" fail="0" skip="0">GET_Carrinhos</stat>
<stat pass="3" fail="0" skip="0">GET_Produtos</stat>
<stat pass="4" fail="0" skip="0">GET_Usuarios</stat>
<stat pass="1" fail="0" skip="0">Listar_Todos</stat>
<stat pass="5" fail="0" skip="0">Login</stat>
<stat pass="1" fail="0" skip="0">Login_Administrador</stat>
<stat pass="1" fail="0" skip="0">Login_Usuario</stat>
<stat pass="1" fail="0" skip="0">Login_Usuario_Email</stat>
<stat pass="1" fail="0" skip="0">Login_Usuario_Invalido</stat>
<stat pass="1" fail="0" skip="0">Login_Usuario_Senha</stat>
<stat pass="24" fail="0" skip="0">POST</stat>
<stat pass="8" fail="0" skip="0">POST_Carrinhos</stat>
<stat pass="5" fail="0" skip="0">POST_Login</stat>
<stat pass="1" fail="0" skip="0">POST_Produtos</stat>
<stat pass="7" fail="0" skip="0">POST_Usuarios</stat>
<stat pass="19" fail="0" skip="0">Produtos</stat>
<stat pass="16" fail="0" skip="0">PUT</stat>
<stat pass="11" fail="0" skip="0">PUT_Produtos</stat>
<stat pass="5" fail="0" skip="0">PUT_Usuarios</stat>
<stat pass="18" fail="0" skip="0">Usuarios</stat>
</tag>
<suite>
<stat pass="70" fail="0" skip="0" id="s1" name="Test-Cases">Test-Cases</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="01 Login">Test-Cases.01 Login</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="01 login POST">Test-Cases.01 Login.01 login POST</stat>
<stat pass="18" fail="0" skip="0" id="s1-s2" name="02 Usuarios">Test-Cases.02 Usuarios</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="01 usuarios GET">Test-Cases.02 Usuarios.01 usuarios GET</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s2" name="02 usuarios POST">Test-Cases.02 Usuarios.02 usuarios POST</stat>
<stat pass="5" fail="0" skip="0" id="s1-s2-s3" name="03 usuarios PUT">Test-Cases.02 Usuarios.03 usuarios PUT</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="04 usuarios DELETE">Test-Cases.02 Usuarios.04 usuarios DELETE</stat>
<stat pass="30" fail="0" skip="0" id="s1-s3" name="03 Produtos">Test-Cases.03 Produtos</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s1" name="01 produtos GET">Test-Cases.03 Produtos.01 produtos GET</stat>
<stat pass="12" fail="0" skip="0" id="s1-s3-s2" name="02 produtos POST">Test-Cases.03 Produtos.02 produtos POST</stat>
<stat pass="11" fail="0" skip="0" id="s1-s3-s3" name="03 produtos PUT">Test-Cases.03 Produtos.03 produtos PUT</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3-s4" name="04 produtos DELETE">Test-Cases.03 Produtos.04 produtos DELETE</stat>
<stat pass="17" fail="0" skip="0" id="s1-s4" name="04 Carrinhos">Test-Cases.04 Carrinhos</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4-s1" name="01 carrinhos GET">Test-Cases.04 Carrinhos.01 carrinhos GET</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4-s2" name="02 carrinhos POST">Test-Cases.04 Carrinhos.02 carrinhos POST</stat>
<stat pass="6" fail="0" skip="0" id="s1-s4-s3" name="03 carrinhos DELETE">Test-Cases.04 Carrinhos.03 carrinhos DELETE</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
